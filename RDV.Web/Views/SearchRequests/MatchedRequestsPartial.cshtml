@using System.Text
@using System.Web.UI.WebControls
@using RDV.Domain.Entities
@using RDV.Domain.Enums
@model RDV.Web.Models.SearchRequests.MatchedRequestsListModel
@Html.DevExpress().GridView(settings =>
{
    var allRequests = Model.EstateObject.GetAllMatchedRequests();
    // Общая конфигурация
    settings.Name = String.Format("RDV_matched_requests_grid_{0}", (short)Model.Status);
    settings.CallbackRouteValues = new { Controller = "SearchRequests", Action = "MatchedRequestsPartial", ObjectId = Model.ObjectId, Status = Model.Status };
    settings.Width = Unit.Percentage(100);

    // Банды
    settings.SettingsPager.PageSize = 50;
    settings.Settings.ShowGroupPanel = true;

    // Столбцы
    settings.KeyFieldName = "Id";
    settings.Columns.Add(col =>
    {
        col.Caption = "Название";
        col.SetDataItemTemplateContent(c =>
        {
            var item = allRequests.First(r => r.Id == (long)c.KeyValue);

            ViewContext.Writer.Write(String.Format("<a href='/account/search-request/{0}' target='_blank'>{1}</a>", item.RequestId, item.RequestTitle));
        });
    });
    settings.Columns.Add("RequestDateCreated", "Дата создания").PropertiesEdit.DisplayFormatString = "dd.MM.yyyy";
    settings.Columns.Add("UserName", "Пользователь");
    settings.Columns.Add("Phone", "Телефон");
    settings.Columns.Add("Email", "E-mail");
    settings.Columns.Add("Company", "Компания");
    
    // Дополнительные строки
    settings.Columns.Add(col =>
    {
        col.ColumnType = MVCxGridViewColumnType.ButtonEdit;
        col.Caption = "Действия";
        col.Width = Unit.Pixel(60);
        col.SetDataItemTemplateContent(c =>
        {
            var builder = new StringBuilder();
            var item = allRequests.First(r => r.Id == (long)c.KeyValue);
            
            if (Model.Status == SearchRequestObjectStatus.New)
            {
                builder.AppendFormat("<a href='javascript:moveRequest({0},{1})' title='Взять запрос в работу'><img src='/Content/images/common/icon-accept.png'/></a>", c.KeyValue,(short)SearchRequestObjectStatus.Accepted);
                builder.AppendFormat("<a href='javascript:moveRequest({0},{1})' title='Отклонить запрос'><img src='/Content/images/common/icon-decline.png'/></a>", c.KeyValue, (short)SearchRequestObjectStatus.Declined);
                builder.AppendFormat("<a href='javascript:writeComments({0})' title='Написать комментарий'><img src='/Content/images/common/icon-comments.png'/></a>", c.KeyValue);
            }
            if (Model.Status == SearchRequestObjectStatus.Accepted)
            {
                builder.AppendFormat("<a href='javascript:moveRequest({0},{1})' title='Отклонить запрос'><img src='/Content/images/common/icon-decline.png'/></a>", c.KeyValue, (short)SearchRequestObjectStatus.Declined);
                builder.AppendFormat("<a href='javascript:writeComments({0})' title='Написать комментарий'><img src='/Content/images/common/icon-comments.png'/></a>", c.KeyValue);
            }
            if (Model.Status == SearchRequestObjectStatus.Declined)
            {
                if (item.SearchRequest != null)
                {
                    builder.AppendFormat("<a href='javascript:moveRequest({0},{1})' title='Взять запрос в работу'><img src='/Content/images/common/icon-accept.png'/></a>", c.KeyValue, (short)SearchRequestObjectStatus.Accepted);
                }
                builder.AppendFormat("<a href='javascript:writeComments({0})' title='Написать комментарий'><img src='/Content/images/common/icon-comments.png'/></a>", c.KeyValue);
            }
            
            ViewContext.Writer.Write(builder.ToString());
        });
    });
}).Bind(Model.Data).GetHtml()