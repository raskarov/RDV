@using RDV.Domain.Entities
@using RDV.Domain.Infrastructure.Misc
@using RDV.Domain.Interfaces.Infrastructure
@using RDV.Domain.IoC
@using RDV.Web.Classes.Caching
@using RDV.Web.Classes.Extensions
@using RDV.Web.Classes.Search.Interfaces
@model System.Collections.Generic.IList<RDV.Domain.Entities.EstateObject>
@{
    var searchData = (IObjectSearchData)ViewBag.searchData;
    var geoManager = Locator.GetService<IGeoManager>();
}
<div style="margin-bottom: 15px">
    <span style="font-weight: bold">Параметры запроса:</span> Город = (@geoManager.CitiesRepository.Load(searchData.CityId).Name);
    @{
        var districIds = searchData.DistrictIds.Split(new[]{","},StringSplitOptions.RemoveEmptyEntries);
        var districts = districIds.Length > 0 ? districIds.Select(d => Convert.ToInt64(d)).Select(d => geoManager.DistrictsRepository.Load(d)).ToList() : Enumerable.Empty<GeoDistrict>().ToList();
    }
    @if (districts.Count > 0)
    {
        <text>
            Районы = (@String.Join(", ",districts.Select(d => d.Name)));
        </text>
        var areaIds = searchData.AreaIds.Split(new[] { "," }, StringSplitOptions.RemoveEmptyEntries);
        var areas = areaIds.Length > 0 ? areaIds.Select(a => Convert.ToInt64(a)).Select(a => geoManager.ResidentialAreasRepository.Load(a)).ToList() : Enumerable.Empty<GeoResidentialArea>().ToList();
        if (areas.Count > 0)
        {
        <text>
            Массивы = (@String.Join(", ",areas.Select(d => d.Name)));
        </text>
        }

    }
    @String.Join("; ",searchData.AdditionalCriterias.Select(cr => String.Format("{0} {1} {2}",cr.Caption, searchData.FieldsFilters[cr.Name].Replace("range","интервал"), cr.Value)))
</div>
<table class="content-table">
    <thead>
        <tr>
            <th>
                ИД
            </th>
            <th>
                Расположение
            </th>
            <th>
                Примечание
            </th>
            <th>
                Окончательная цена
            </th>
            <th>
                Дата сделки
            </th>
            <th>
                Контрагент
            </th>
            <th>
                Ипотека
            </th>
            <th>
                
            </th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Count > 0)
        {
            foreach (var obj in Model)
            {
                <tr data-item-id="@obj.Id">
                    <td>
                        <a href="/objects/@obj.Id/card" target="_blank">
                            @obj.Id
                        </a>
                    </td>
                    <td>
                        <a href="/objects/@obj.Id/card" target="_blank">
                            @obj.Address.ToShortAddressString()
                        </a>
                    </td>
                    <td>
                        @obj.ObjectMainProperties.Notes.TrimEllipsis(50)
                    </td>
                    <td>
                        @obj.ObjectMainProperties.RealPrice.FormatPrice()
                    </td>
                    <td>
                        @obj.ObjectChangementProperties.DealDate.FormatDate()
                    </td>
                    <td>
                        @obj.GetDealCounterAgent()
                    </td>
                    <td>
                        @(obj.ObjectMainProperties.MortgageBank.HasValue ? IdObjectsCache.GetDictionaryValue(obj.ObjectMainProperties.MortgageBank) : "НЕТ" )
                    </td>
                    <td class="icons">
                        <a href="/objects/@obj.Id/card" target="_blank">
                            <span class="edit-row icon-view" title="Карточка объекта" ></span>
                        </a>
                        @* Просмотр фото *@
                        @if (obj.GetObjectsMedia(true).Count > 0)
                        {
                            <span class="edit-row icon-photos" title="Фотографии"></span>
                        }
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="8">
                    <p style="margin: 10px; text-align: center">Не найдено объектов, или указано недостаточно параметров для запроса</p>
                </td>
            </tr>
        }
    </tbody>
</table>
@if (Model.Count > 0)
{
    <table class="content-table" style="width: auto; margin-top: 15px">
        <tbody>
            <tr>
                <td>
                    Цена за кв. метр (среднее), руб.
                </td>
                <td>
                    @Model.Where(eo => eo.ObjectMainProperties.RealPrice.HasValue && eo.ObjectMainProperties.TotalArea.HasValue).Average(eo => eo.ObjectMainProperties.RealPrice.Value/eo.ObjectMainProperties.TotalArea.Value).ToString("0.00")
                </td>
            </tr>
            <tr>
                <td>
                    Время продажи (среднее), дн.
                </td>
                <td>
                    @Model.Where(eo => eo.ObjectChangementProperties.DealDate.HasValue).Average(eo => (eo.ObjectChangementProperties.DealDate.Value - (eo.ObjectChangementProperties.DateRegisted??eo.DateCreated).Value).Days).ToString("0.00")
                </td>
            </tr>
        </tbody>
    </table>
}

<script type="text/javascript">
    $(document).ready(function () {
        $(".icon-photos").unbind("click").click(function (e) {
            var id = $(this).parent().parent().data("item-id");
            $.ajax({
                url: '/objects/get-photos/' + id,
                type: 'GET',
                dataType: 'json',
                success: function (data) {
                    if (data.count > 0) {
                        $.fancybox.open(data.images);
                    }
                },
                failure: function () {
                    alert('Ошибка при получении фотографий');
                }
            });
        });
    });
</script>