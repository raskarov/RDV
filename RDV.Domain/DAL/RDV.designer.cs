#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RDV.Domain.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="RDV")]
	public partial class RDVDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDictionary(RDV.Domain.Entities.Dictionary instance);
    partial void UpdateDictionary(RDV.Domain.Entities.Dictionary instance);
    partial void DeleteDictionary(RDV.Domain.Entities.Dictionary instance);
    partial void InsertObjectClient(RDV.Domain.Entities.ObjectClient instance);
    partial void UpdateObjectClient(RDV.Domain.Entities.ObjectClient instance);
    partial void DeleteObjectClient(RDV.Domain.Entities.ObjectClient instance);
    partial void InsertRolePermissionOption(RDV.Domain.Entities.RolePermissionOption instance);
    partial void UpdateRolePermissionOption(RDV.Domain.Entities.RolePermissionOption instance);
    partial void DeleteRolePermissionOption(RDV.Domain.Entities.RolePermissionOption instance);
    partial void InsertRolePermission(RDV.Domain.Entities.RolePermission instance);
    partial void UpdateRolePermission(RDV.Domain.Entities.RolePermission instance);
    partial void DeleteRolePermission(RDV.Domain.Entities.RolePermission instance);
    partial void InsertRole(RDV.Domain.Entities.Role instance);
    partial void UpdateRole(RDV.Domain.Entities.Role instance);
    partial void DeleteRole(RDV.Domain.Entities.Role instance);
    partial void InsertStoredFile(RDV.Domain.Entities.StoredFile instance);
    partial void UpdateStoredFile(RDV.Domain.Entities.StoredFile instance);
    partial void DeleteStoredFile(RDV.Domain.Entities.StoredFile instance);
    partial void InsertMailNotificationMessage(RDV.Domain.Entities.MailNotificationMessage instance);
    partial void UpdateMailNotificationMessage(RDV.Domain.Entities.MailNotificationMessage instance);
    partial void DeleteMailNotificationMessage(RDV.Domain.Entities.MailNotificationMessage instance);
    partial void InsertPassport(RDV.Domain.Entities.Passport instance);
    partial void UpdatePassport(RDV.Domain.Entities.Passport instance);
    partial void DeletePassport(RDV.Domain.Entities.Passport instance);
    partial void InsertPermission(RDV.Domain.Entities.Permission instance);
    partial void UpdatePermission(RDV.Domain.Entities.Permission instance);
    partial void DeletePermission(RDV.Domain.Entities.Permission instance);
    partial void InsertGeoCountry(RDV.Domain.Entities.GeoCountry instance);
    partial void UpdateGeoCountry(RDV.Domain.Entities.GeoCountry instance);
    partial void DeleteGeoCountry(RDV.Domain.Entities.GeoCountry instance);
    partial void InsertGeoObject(RDV.Domain.Entities.GeoObject instance);
    partial void UpdateGeoObject(RDV.Domain.Entities.GeoObject instance);
    partial void DeleteGeoObject(RDV.Domain.Entities.GeoObject instance);
    partial void InsertGeoRegion(RDV.Domain.Entities.GeoRegion instance);
    partial void UpdateGeoRegion(RDV.Domain.Entities.GeoRegion instance);
    partial void DeleteGeoRegion(RDV.Domain.Entities.GeoRegion instance);
    partial void InsertGeoStreet(RDV.Domain.Entities.GeoStreet instance);
    partial void UpdateGeoStreet(RDV.Domain.Entities.GeoStreet instance);
    partial void DeleteGeoStreet(RDV.Domain.Entities.GeoStreet instance);
    partial void InsertCompany(RDV.Domain.Entities.Company instance);
    partial void UpdateCompany(RDV.Domain.Entities.Company instance);
    partial void DeleteCompany(RDV.Domain.Entities.Company instance);
    partial void InsertAuditEvent(RDV.Domain.Entities.AuditEvent instance);
    partial void UpdateAuditEvent(RDV.Domain.Entities.AuditEvent instance);
    partial void DeleteAuditEvent(RDV.Domain.Entities.AuditEvent instance);
    partial void InsertGeoRegionDistrict(RDV.Domain.Entities.GeoRegionDistrict instance);
    partial void UpdateGeoRegionDistrict(RDV.Domain.Entities.GeoRegionDistrict instance);
    partial void DeleteGeoRegionDistrict(RDV.Domain.Entities.GeoRegionDistrict instance);
    partial void InsertGeoCity(RDV.Domain.Entities.GeoCity instance);
    partial void UpdateGeoCity(RDV.Domain.Entities.GeoCity instance);
    partial void DeleteGeoCity(RDV.Domain.Entities.GeoCity instance);
    partial void InsertStaticPage(RDV.Domain.Entities.StaticPage instance);
    partial void UpdateStaticPage(RDV.Domain.Entities.StaticPage instance);
    partial void DeleteStaticPage(RDV.Domain.Entities.StaticPage instance);
    partial void InsertMenuItem(RDV.Domain.Entities.MenuItem instance);
    partial void UpdateMenuItem(RDV.Domain.Entities.MenuItem instance);
    partial void DeleteMenuItem(RDV.Domain.Entities.MenuItem instance);
    partial void InsertArticle(RDV.Domain.Entities.Article instance);
    partial void UpdateArticle(RDV.Domain.Entities.Article instance);
    partial void DeleteArticle(RDV.Domain.Entities.Article instance);
    partial void InsertObjectCommunication(RDV.Domain.Entities.ObjectCommunication instance);
    partial void UpdateObjectCommunication(RDV.Domain.Entities.ObjectCommunication instance);
    partial void DeleteObjectCommunication(RDV.Domain.Entities.ObjectCommunication instance);
    partial void InsertObjectMainProperty(RDV.Domain.Entities.ObjectMainProperty instance);
    partial void UpdateObjectMainProperty(RDV.Domain.Entities.ObjectMainProperty instance);
    partial void DeleteObjectMainProperty(RDV.Domain.Entities.ObjectMainProperty instance);
    partial void InsertObjectRatingProperty(RDV.Domain.Entities.ObjectRatingProperty instance);
    partial void UpdateObjectRatingProperty(RDV.Domain.Entities.ObjectRatingProperty instance);
    partial void DeleteObjectRatingProperty(RDV.Domain.Entities.ObjectRatingProperty instance);
    partial void InsertAddress(RDV.Domain.Entities.Address instance);
    partial void UpdateAddress(RDV.Domain.Entities.Address instance);
    partial void DeleteAddress(RDV.Domain.Entities.Address instance);
    partial void InsertClient(RDV.Domain.Entities.Client instance);
    partial void UpdateClient(RDV.Domain.Entities.Client instance);
    partial void DeleteClient(RDV.Domain.Entities.Client instance);
    partial void InsertEstateObject(RDV.Domain.Entities.EstateObject instance);
    partial void UpdateEstateObject(RDV.Domain.Entities.EstateObject instance);
    partial void DeleteEstateObject(RDV.Domain.Entities.EstateObject instance);
    partial void InsertObjectPriceChangement(RDV.Domain.Entities.ObjectPriceChangement instance);
    partial void UpdateObjectPriceChangement(RDV.Domain.Entities.ObjectPriceChangement instance);
    partial void DeleteObjectPriceChangement(RDV.Domain.Entities.ObjectPriceChangement instance);
    partial void InsertUser(RDV.Domain.Entities.User instance);
    partial void UpdateUser(RDV.Domain.Entities.User instance);
    partial void DeleteUser(RDV.Domain.Entities.User instance);
    partial void InsertObjectChangementProperty(RDV.Domain.Entities.ObjectChangementProperty instance);
    partial void UpdateObjectChangementProperty(RDV.Domain.Entities.ObjectChangementProperty instance);
    partial void DeleteObjectChangementProperty(RDV.Domain.Entities.ObjectChangementProperty instance);
    partial void InsertSMSNotificationMessage(RDV.Domain.Entities.SMSNotificationMessage instance);
    partial void UpdateSMSNotificationMessage(RDV.Domain.Entities.SMSNotificationMessage instance);
    partial void DeleteSMSNotificationMessage(RDV.Domain.Entities.SMSNotificationMessage instance);
    partial void InsertObjectManagerNotification(RDV.Domain.Entities.ObjectManagerNotification instance);
    partial void UpdateObjectManagerNotification(RDV.Domain.Entities.ObjectManagerNotification instance);
    partial void DeleteObjectManagerNotification(RDV.Domain.Entities.ObjectManagerNotification instance);
    partial void InsertSetting(RDV.Domain.Entities.Setting instance);
    partial void UpdateSetting(RDV.Domain.Entities.Setting instance);
    partial void DeleteSetting(RDV.Domain.Entities.Setting instance);
    partial void InsertBanner(RDV.Domain.Entities.Banner instance);
    partial void UpdateBanner(RDV.Domain.Entities.Banner instance);
    partial void DeleteBanner(RDV.Domain.Entities.Banner instance);
    partial void InsertGeoLandmark(RDV.Domain.Entities.GeoLandmark instance);
    partial void UpdateGeoLandmark(RDV.Domain.Entities.GeoLandmark instance);
    partial void DeleteGeoLandmark(RDV.Domain.Entities.GeoLandmark instance);
    partial void InsertGeoObjectInfo(RDV.Domain.Entities.GeoObjectInfo instance);
    partial void UpdateGeoObjectInfo(RDV.Domain.Entities.GeoObjectInfo instance);
    partial void DeleteGeoObjectInfo(RDV.Domain.Entities.GeoObjectInfo instance);
    partial void InsertComment(RDV.Domain.Entities.Comment instance);
    partial void UpdateComment(RDV.Domain.Entities.Comment instance);
    partial void DeleteComment(RDV.Domain.Entities.Comment instance);
    partial void InsertSearchRequest(RDV.Domain.Entities.SearchRequest instance);
    partial void UpdateSearchRequest(RDV.Domain.Entities.SearchRequest instance);
    partial void DeleteSearchRequest(RDV.Domain.Entities.SearchRequest instance);
    partial void InsertGeoResidentialArea(RDV.Domain.Entities.GeoResidentialArea instance);
    partial void UpdateGeoResidentialArea(RDV.Domain.Entities.GeoResidentialArea instance);
    partial void DeleteGeoResidentialArea(RDV.Domain.Entities.GeoResidentialArea instance);
    partial void InsertGeoDistrict(RDV.Domain.Entities.GeoDistrict instance);
    partial void UpdateGeoDistrict(RDV.Domain.Entities.GeoDistrict instance);
    partial void DeleteGeoDistrict(RDV.Domain.Entities.GeoDistrict instance);
    partial void InsertTrainingProgram(RDV.Domain.Entities.TrainingProgram instance);
    partial void UpdateTrainingProgram(RDV.Domain.Entities.TrainingProgram instance);
    partial void DeleteTrainingProgram(RDV.Domain.Entities.TrainingProgram instance);
    partial void InsertAchievment(RDV.Domain.Entities.Achievment instance);
    partial void UpdateAchievment(RDV.Domain.Entities.Achievment instance);
    partial void DeleteAchievment(RDV.Domain.Entities.Achievment instance);
    partial void InsertPayment(RDV.Domain.Entities.Payment instance);
    partial void UpdatePayment(RDV.Domain.Entities.Payment instance);
    partial void DeletePayment(RDV.Domain.Entities.Payment instance);
    partial void InsertSearchRequestObject(RDV.Domain.Entities.SearchRequestObject instance);
    partial void UpdateSearchRequestObject(RDV.Domain.Entities.SearchRequestObject instance);
    partial void DeleteSearchRequestObject(RDV.Domain.Entities.SearchRequestObject instance);
    partial void InsertObjectMedia(RDV.Domain.Entities.ObjectMedia instance);
    partial void UpdateObjectMedia(RDV.Domain.Entities.ObjectMedia instance);
    partial void DeleteObjectMedia(RDV.Domain.Entities.ObjectMedia instance);
    partial void InsertObjectAdditionalProperty(RDV.Domain.Entities.ObjectAdditionalProperty instance);
    partial void UpdateObjectAdditionalProperty(RDV.Domain.Entities.ObjectAdditionalProperty instance);
    partial void DeleteObjectAdditionalProperty(RDV.Domain.Entities.ObjectAdditionalProperty instance);
    partial void InsertClientReview(RDV.Domain.Entities.ClientReview instance);
    partial void UpdateClientReview(RDV.Domain.Entities.ClientReview instance);
    partial void DeleteClientReview(RDV.Domain.Entities.ClientReview instance);
    partial void InsertServiceLogItem(RDV.Domain.Entities.ServiceLogItem instance);
    partial void UpdateServiceLogItem(RDV.Domain.Entities.ServiceLogItem instance);
    partial void DeleteServiceLogItem(RDV.Domain.Entities.ServiceLogItem instance);
    partial void InsertServiceType(RDV.Domain.Entities.ServiceType instance);
    partial void UpdateServiceType(RDV.Domain.Entities.ServiceType instance);
    partial void DeleteServiceType(RDV.Domain.Entities.ServiceType instance);
    partial void InsertPartner(RDV.Domain.Entities.Partner instance);
    partial void UpdatePartner(RDV.Domain.Entities.Partner instance);
    partial void DeletePartner(RDV.Domain.Entities.Partner instance);
    partial void InsertBook(RDV.Domain.Entities.Book instance);
    partial void UpdateBook(RDV.Domain.Entities.Book instance);
    partial void DeleteBook(RDV.Domain.Entities.Book instance);
    partial void InsertSystemStat(RDV.Domain.Entities.SystemStat instance);
    partial void UpdateSystemStat(RDV.Domain.Entities.SystemStat instance);
    partial void DeleteSystemStat(RDV.Domain.Entities.SystemStat instance);
    partial void InsertNonRdvAgent(RDV.Domain.Entities.NonRdvAgent instance);
    partial void UpdateNonRdvAgent(RDV.Domain.Entities.NonRdvAgent instance);
    partial void DeleteNonRdvAgent(RDV.Domain.Entities.NonRdvAgent instance);
    partial void InsertObjectHistoryItem(RDV.Domain.Entities.ObjectHistoryItem instance);
    partial void UpdateObjectHistoryItem(RDV.Domain.Entities.ObjectHistoryItem instance);
    partial void DeleteObjectHistoryItem(RDV.Domain.Entities.ObjectHistoryItem instance);
    partial void InsertEstateObjectMatchedSearchRequestComment(RDV.Domain.Entities.EstateObjectMatchedSearchRequestComment instance);
    partial void UpdateEstateObjectMatchedSearchRequestComment(RDV.Domain.Entities.EstateObjectMatchedSearchRequestComment instance);
    partial void DeleteEstateObjectMatchedSearchRequestComment(RDV.Domain.Entities.EstateObjectMatchedSearchRequestComment instance);
    partial void InsertEstateObjectMatchedSearchRequest(RDV.Domain.Entities.EstateObjectMatchedSearchRequest instance);
    partial void UpdateEstateObjectMatchedSearchRequest(RDV.Domain.Entities.EstateObjectMatchedSearchRequest instance);
    partial void DeleteEstateObjectMatchedSearchRequest(RDV.Domain.Entities.EstateObjectMatchedSearchRequest instance);
    partial void InsertSearchRequestObjectComment(RDV.Domain.Entities.SearchRequestObjectComment instance);
    partial void UpdateSearchRequestObjectComment(RDV.Domain.Entities.SearchRequestObjectComment instance);
    partial void DeleteSearchRequestObjectComment(RDV.Domain.Entities.SearchRequestObjectComment instance);
    partial void InsertDictionaryValue(RDV.Domain.Entities.DictionaryValue instance);
    partial void UpdateDictionaryValue(RDV.Domain.Entities.DictionaryValue instance);
    partial void DeleteDictionaryValue(RDV.Domain.Entities.DictionaryValue instance);
    #endregion
		
		public RDVDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RDVDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RDVDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RDVDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.Dictionary> Dictionaries
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.Dictionary>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.ObjectClient> ObjectClients
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.ObjectClient>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.RolePermissionOption> RolePermissionOptions
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.RolePermissionOption>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.RolePermission> RolePermissions
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.RolePermission>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.Role> Roles
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.Role>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.StoredFile> StoredFiles
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.StoredFile>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.MailNotificationMessage> MailNotificationMessages
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.MailNotificationMessage>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.Passport> Passports
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.Passport>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.Permission> Permissions
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.Permission>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.GeoCountry> GeoCountries
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.GeoCountry>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.GeoObject> GeoObjects
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.GeoObject>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.GeoRegion> GeoRegions
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.GeoRegion>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.GeoStreet> GeoStreets
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.GeoStreet>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.Company> Companies
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.Company>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.AuditEvent> AuditEvents
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.AuditEvent>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.GeoRegionDistrict> GeoRegionDistricts
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.GeoRegionDistrict>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.GeoCity> GeoCities
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.GeoCity>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.StaticPage> StaticPages
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.StaticPage>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.MenuItem> MenuItems
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.MenuItem>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.Article> Articles
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.Article>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.ObjectCommunication> ObjectCommunications
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.ObjectCommunication>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.ObjectMainProperty> ObjectMainProperties
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.ObjectMainProperty>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.ObjectRatingProperty> ObjectRatingProperties
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.ObjectRatingProperty>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.Address> Addresses
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.Address>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.Client> Clients
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.Client>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.EstateObject> EstateObjects
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.EstateObject>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.ObjectPriceChangement> ObjectPriceChangements
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.ObjectPriceChangement>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.User> Users
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.User>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.ObjectChangementProperty> ObjectChangementProperties
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.ObjectChangementProperty>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.SMSNotificationMessage> SMSNotificationMessages
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.SMSNotificationMessage>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.ObjectManagerNotification> ObjectManagerNotifications
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.ObjectManagerNotification>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.Setting> Settings
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.Setting>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.Banner> Banners
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.Banner>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.GeoLandmark> GeoLandmarks
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.GeoLandmark>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.GeoObjectInfo> GeoObjectInfos
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.GeoObjectInfo>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.Comment> Comments
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.Comment>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.SearchRequest> SearchRequests
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.SearchRequest>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.GeoResidentialArea> GeoResidentialAreas
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.GeoResidentialArea>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.GeoDistrict> GeoDistricts
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.GeoDistrict>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.TrainingProgram> TrainingPrograms
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.TrainingProgram>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.Achievment> Achievments
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.Achievment>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.Payment> Payments
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.Payment>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.SearchRequestObject> SearchRequestObjects
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.SearchRequestObject>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.ObjectMedia> ObjectMedias
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.ObjectMedia>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.ObjectAdditionalProperty> ObjectAdditionalProperties
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.ObjectAdditionalProperty>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.ClientReview> ClientReviews
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.ClientReview>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.ServiceLogItem> ServiceLogItems
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.ServiceLogItem>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.ServiceType> ServiceTypes
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.ServiceType>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.Partner> Partners
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.Partner>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.Book> Books
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.Book>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.SystemStat> SystemStats
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.SystemStat>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.NonRdvAgent> NonRdvAgents
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.NonRdvAgent>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.ObjectHistoryItem> ObjectHistoryItems
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.ObjectHistoryItem>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.EstateObjectMatchedSearchRequestComment> EstateObjectMatchedSearchRequestComments
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.EstateObjectMatchedSearchRequestComment>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.EstateObjectMatchedSearchRequest> EstateObjectMatchedSearchRequests
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.EstateObjectMatchedSearchRequest>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.SearchRequestObjectComment> SearchRequestObjectComments
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.SearchRequestObjectComment>();
			}
		}
		
		public System.Data.Linq.Table<RDV.Domain.Entities.DictionaryValue> DictionaryValues
		{
			get
			{
				return this.GetTable<RDV.Domain.Entities.DictionaryValue>();
			}
		}
	}
}
namespace RDV.Domain.Entities
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dictionaries")]
	public partial class Dictionary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _SystemName;
		
		private string _DisplayName;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private long _CreatedBy;
		
		private long _ModifiedBy;
		
		private EntitySet<DictionaryValue> _DictionaryValues;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSystemNameChanging(string value);
    partial void OnSystemNameChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnCreatedByChanging(long value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(long value);
    partial void OnModifiedByChanged();
    #endregion
		
		public Dictionary()
		{
			this._DictionaryValues = new EntitySet<DictionaryValue>(new Action<DictionaryValue>(this.attach_DictionaryValues), new Action<DictionaryValue>(this.detach_DictionaryValues));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SystemName
		{
			get
			{
				return this._SystemName;
			}
			set
			{
				if ((this._SystemName != value))
				{
					this.OnSystemNameChanging(value);
					this.SendPropertyChanging();
					this._SystemName = value;
					this.SendPropertyChanged("SystemName");
					this.OnSystemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(255)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt NOT NULL")]
		public long CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt NOT NULL")]
		public long ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dictionary_DictionaryValue", Storage="_DictionaryValues", ThisKey="Id", OtherKey="DictionaryId")]
		public EntitySet<DictionaryValue> DictionaryValues
		{
			get
			{
				return this._DictionaryValues;
			}
			set
			{
				this._DictionaryValues.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DictionaryValues(DictionaryValue entity)
		{
			this.SendPropertyChanging();
			entity.Dictionary = this;
		}
		
		private void detach_DictionaryValues(DictionaryValue entity)
		{
			this.SendPropertyChanging();
			entity.Dictionary = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ObjectClients")]
	public partial class ObjectClient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _ClientId;
		
		private long _ObjectId;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private EntityRef<Client> _Client;
		
		private EntityRef<EstateObject> _EstateObject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnClientIdChanging(long value);
    partial void OnClientIdChanged();
    partial void OnObjectIdChanging(long value);
    partial void OnObjectIdChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public ObjectClient()
		{
			this._Client = default(EntityRef<Client>);
			this._EstateObject = default(EntityRef<EstateObject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="BigInt NOT NULL")]
		public long ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIdChanging(value);
					this.SendPropertyChanging();
					this._ClientId = value;
					this.SendPropertyChanged("ClientId");
					this.OnClientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectId", DbType="BigInt NOT NULL")]
		public long ObjectId
		{
			get
			{
				return this._ObjectId;
			}
			set
			{
				if ((this._ObjectId != value))
				{
					if (this._EstateObject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectIdChanging(value);
					this.SendPropertyChanging();
					this._ObjectId = value;
					this.SendPropertyChanged("ObjectId");
					this.OnObjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_ObjectClient", Storage="_Client", ThisKey="ClientId", OtherKey="Id", IsForeignKey=true)]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.ObjectClients.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.ObjectClients.Add(this);
						this._ClientId = value.Id;
					}
					else
					{
						this._ClientId = default(long);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstateObject_ObjectClient", Storage="_EstateObject", ThisKey="ObjectId", OtherKey="Id", IsForeignKey=true)]
		public EstateObject EstateObject
		{
			get
			{
				return this._EstateObject.Entity;
			}
			set
			{
				EstateObject previousValue = this._EstateObject.Entity;
				if (((previousValue != value) 
							|| (this._EstateObject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EstateObject.Entity = null;
						previousValue.ObjectClients.Remove(this);
					}
					this._EstateObject.Entity = value;
					if ((value != null))
					{
						value.ObjectClients.Add(this);
						this._ObjectId = value.Id;
					}
					else
					{
						this._ObjectId = default(long);
					}
					this.SendPropertyChanged("EstateObject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RolePermissionOptions")]
	public partial class RolePermissionOption : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _RolePermissionId;
		
		private short _ObjectOperation;
		
		private short _ObjectType;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private EntityRef<RolePermission> _RolePermission;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnRolePermissionIdChanging(long value);
    partial void OnRolePermissionIdChanged();
    partial void OnObjectOperationChanging(short value);
    partial void OnObjectOperationChanged();
    partial void OnObjectTypeChanging(short value);
    partial void OnObjectTypeChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public RolePermissionOption()
		{
			this._RolePermission = default(EntityRef<RolePermission>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RolePermissionId", DbType="BigInt NOT NULL")]
		public long RolePermissionId
		{
			get
			{
				return this._RolePermissionId;
			}
			set
			{
				if ((this._RolePermissionId != value))
				{
					if (this._RolePermission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRolePermissionIdChanging(value);
					this.SendPropertyChanging();
					this._RolePermissionId = value;
					this.SendPropertyChanged("RolePermissionId");
					this.OnRolePermissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectOperation", DbType="SmallInt NOT NULL")]
		public short ObjectOperation
		{
			get
			{
				return this._ObjectOperation;
			}
			set
			{
				if ((this._ObjectOperation != value))
				{
					this.OnObjectOperationChanging(value);
					this.SendPropertyChanging();
					this._ObjectOperation = value;
					this.SendPropertyChanged("ObjectOperation");
					this.OnObjectOperationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectType", DbType="SmallInt NOT NULL")]
		public short ObjectType
		{
			get
			{
				return this._ObjectType;
			}
			set
			{
				if ((this._ObjectType != value))
				{
					this.OnObjectTypeChanging(value);
					this.SendPropertyChanging();
					this._ObjectType = value;
					this.SendPropertyChanged("ObjectType");
					this.OnObjectTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RolePermission_RolePermissionOption", Storage="_RolePermission", ThisKey="RolePermissionId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public RolePermission RolePermission
		{
			get
			{
				return this._RolePermission.Entity;
			}
			set
			{
				RolePermission previousValue = this._RolePermission.Entity;
				if (((previousValue != value) 
							|| (this._RolePermission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RolePermission.Entity = null;
						previousValue.RolePermissionOptions.Remove(this);
					}
					this._RolePermission.Entity = value;
					if ((value != null))
					{
						value.RolePermissionOptions.Add(this);
						this._RolePermissionId = value.Id;
					}
					else
					{
						this._RolePermissionId = default(long);
					}
					this.SendPropertyChanged("RolePermission");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RolePermissions")]
	public partial class RolePermission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _RoleId;
		
		private long _PermissionId;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private long _CreatedBy;
		
		private long _ModifiedBy;
		
		private EntitySet<RolePermissionOption> _RolePermissionOptions;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<Permission> _Permission;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnRoleIdChanging(long value);
    partial void OnRoleIdChanged();
    partial void OnPermissionIdChanging(long value);
    partial void OnPermissionIdChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnCreatedByChanging(long value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(long value);
    partial void OnModifiedByChanged();
    #endregion
		
		public RolePermission()
		{
			this._RolePermissionOptions = new EntitySet<RolePermissionOption>(new Action<RolePermissionOption>(this.attach_RolePermissionOptions), new Action<RolePermissionOption>(this.detach_RolePermissionOptions));
			this._Role = default(EntityRef<Role>);
			this._Permission = default(EntityRef<Permission>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="BigInt NOT NULL")]
		public long RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionId", DbType="BigInt NOT NULL")]
		public long PermissionId
		{
			get
			{
				return this._PermissionId;
			}
			set
			{
				if ((this._PermissionId != value))
				{
					if (this._Permission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPermissionIdChanging(value);
					this.SendPropertyChanging();
					this._PermissionId = value;
					this.SendPropertyChanged("PermissionId");
					this.OnPermissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt NOT NULL")]
		public long CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt NOT NULL")]
		public long ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RolePermission_RolePermissionOption", Storage="_RolePermissionOptions", ThisKey="Id", OtherKey="RolePermissionId")]
		public EntitySet<RolePermissionOption> RolePermissionOptions
		{
			get
			{
				return this._RolePermissionOptions;
			}
			set
			{
				this._RolePermissionOptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_RolePermission", Storage="_Role", ThisKey="RoleId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.RolePermissions.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.RolePermissions.Add(this);
						this._RoleId = value.Id;
					}
					else
					{
						this._RoleId = default(long);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_RolePermission", Storage="_Permission", ThisKey="PermissionId", OtherKey="Id", IsForeignKey=true)]
		public Permission Permission
		{
			get
			{
				return this._Permission.Entity;
			}
			set
			{
				Permission previousValue = this._Permission.Entity;
				if (((previousValue != value) 
							|| (this._Permission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Permission.Entity = null;
						previousValue.RolePermissions.Remove(this);
					}
					this._Permission.Entity = value;
					if ((value != null))
					{
						value.RolePermissions.Add(this);
						this._PermissionId = value.Id;
					}
					else
					{
						this._PermissionId = default(long);
					}
					this.SendPropertyChanged("Permission");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RolePermissionOptions(RolePermissionOption entity)
		{
			this.SendPropertyChanging();
			entity.RolePermission = this;
		}
		
		private void detach_RolePermissionOptions(RolePermissionOption entity)
		{
			this.SendPropertyChanging();
			entity.RolePermission = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private long _CreatedBy;
		
		private long _ModifiedBy;
		
		private EntitySet<RolePermission> _RolePermissions;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnCreatedByChanging(long value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(long value);
    partial void OnModifiedByChanged();
    #endregion
		
		public Role()
		{
			this._RolePermissions = new EntitySet<RolePermission>(new Action<RolePermission>(this.attach_RolePermissions), new Action<RolePermission>(this.detach_RolePermissions));
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt NOT NULL")]
		public long CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt NOT NULL")]
		public long ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_RolePermission", Storage="_RolePermissions", ThisKey="Id", OtherKey="RoleId")]
		public EntitySet<RolePermission> RolePermissions
		{
			get
			{
				return this._RolePermissions;
			}
			set
			{
				this._RolePermissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_User", Storage="_Users", ThisKey="Id", OtherKey="RoleId")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RolePermissions(RolePermission entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_RolePermissions(RolePermission entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StoredFiles")]
	public partial class StoredFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _MimeType;
		
		private long _ContentSize;
		
		private string _OriginalFilename;
		
		private string _ServerFilename;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private long _CreatedBy;
		
		private long _ModifiedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnMimeTypeChanging(string value);
    partial void OnMimeTypeChanged();
    partial void OnContentSizeChanging(long value);
    partial void OnContentSizeChanged();
    partial void OnOriginalFilenameChanging(string value);
    partial void OnOriginalFilenameChanged();
    partial void OnServerFilenameChanging(string value);
    partial void OnServerFilenameChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnCreatedByChanging(long value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(long value);
    partial void OnModifiedByChanged();
    #endregion
		
		public StoredFile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MimeType", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string MimeType
		{
			get
			{
				return this._MimeType;
			}
			set
			{
				if ((this._MimeType != value))
				{
					this.OnMimeTypeChanging(value);
					this.SendPropertyChanging();
					this._MimeType = value;
					this.SendPropertyChanged("MimeType");
					this.OnMimeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentSize", DbType="BigInt NOT NULL")]
		public long ContentSize
		{
			get
			{
				return this._ContentSize;
			}
			set
			{
				if ((this._ContentSize != value))
				{
					this.OnContentSizeChanging(value);
					this.SendPropertyChanging();
					this._ContentSize = value;
					this.SendPropertyChanged("ContentSize");
					this.OnContentSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalFilename", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string OriginalFilename
		{
			get
			{
				return this._OriginalFilename;
			}
			set
			{
				if ((this._OriginalFilename != value))
				{
					this.OnOriginalFilenameChanging(value);
					this.SendPropertyChanging();
					this._OriginalFilename = value;
					this.SendPropertyChanged("OriginalFilename");
					this.OnOriginalFilenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerFilename", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ServerFilename
		{
			get
			{
				return this._ServerFilename;
			}
			set
			{
				if ((this._ServerFilename != value))
				{
					this.OnServerFilenameChanging(value);
					this.SendPropertyChanging();
					this._ServerFilename = value;
					this.SendPropertyChanged("ServerFilename");
					this.OnServerFilenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt NOT NULL")]
		public long CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt NOT NULL")]
		public long ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MailNotificationMessages")]
	public partial class MailNotificationMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Recipient;
		
		private string _Subject;
		
		private string _Content;
		
		private bool _Sended;
		
		private System.Nullable<System.DateTime> _DateEnqued;
		
		private System.Nullable<System.DateTime> _DateSended;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnRecipientChanging(string value);
    partial void OnRecipientChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnSendedChanging(bool value);
    partial void OnSendedChanged();
    partial void OnDateEnquedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEnquedChanged();
    partial void OnDateSendedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateSendedChanged();
    #endregion
		
		public MailNotificationMessage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recipient", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Recipient
		{
			get
			{
				return this._Recipient;
			}
			set
			{
				if ((this._Recipient != value))
				{
					this.OnRecipientChanging(value);
					this.SendPropertyChanging();
					this._Recipient = value;
					this.SendPropertyChanged("Recipient");
					this.OnRecipientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(255)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(MAX)")]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sended", DbType="Bit NOT NULL")]
		public bool Sended
		{
			get
			{
				return this._Sended;
			}
			set
			{
				if ((this._Sended != value))
				{
					this.OnSendedChanging(value);
					this.SendPropertyChanging();
					this._Sended = value;
					this.SendPropertyChanged("Sended");
					this.OnSendedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnqued", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEnqued
		{
			get
			{
				return this._DateEnqued;
			}
			set
			{
				if ((this._DateEnqued != value))
				{
					this.OnDateEnquedChanging(value);
					this.SendPropertyChanging();
					this._DateEnqued = value;
					this.SendPropertyChanged("DateEnqued");
					this.OnDateEnquedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSended", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateSended
		{
			get
			{
				return this._DateSended;
			}
			set
			{
				if ((this._DateSended != value))
				{
					this.OnDateSendedChanging(value);
					this.SendPropertyChanging();
					this._DateSended = value;
					this.SendPropertyChanged("DateSended");
					this.OnDateSendedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Passports")]
	public partial class Passport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Series;
		
		private string _Number;
		
		private string _IssuesBy;
		
		private System.Nullable<System.DateTime> _IssueDate;
		
		private string _RegistrationPlace;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private long _CreatedBy;
		
		private long _ModifiedBy;
		
		private EntitySet<Client> _Clients;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSeriesChanging(string value);
    partial void OnSeriesChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    partial void OnIssuesByChanging(string value);
    partial void OnIssuesByChanged();
    partial void OnIssueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnIssueDateChanged();
    partial void OnRegistrationPlaceChanging(string value);
    partial void OnRegistrationPlaceChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnCreatedByChanging(long value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(long value);
    partial void OnModifiedByChanged();
    #endregion
		
		public Passport()
		{
			this._Clients = new EntitySet<Client>(new Action<Client>(this.attach_Clients), new Action<Client>(this.detach_Clients));
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Series", DbType="NVarChar(4)")]
		public string Series
		{
			get
			{
				return this._Series;
			}
			set
			{
				if ((this._Series != value))
				{
					this.OnSeriesChanging(value);
					this.SendPropertyChanging();
					this._Series = value;
					this.SendPropertyChanged("Series");
					this.OnSeriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="NVarChar(6)")]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssuesBy", DbType="NVarChar(MAX)")]
		public string IssuesBy
		{
			get
			{
				return this._IssuesBy;
			}
			set
			{
				if ((this._IssuesBy != value))
				{
					this.OnIssuesByChanging(value);
					this.SendPropertyChanging();
					this._IssuesBy = value;
					this.SendPropertyChanged("IssuesBy");
					this.OnIssuesByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> IssueDate
		{
			get
			{
				return this._IssueDate;
			}
			set
			{
				if ((this._IssueDate != value))
				{
					this.OnIssueDateChanging(value);
					this.SendPropertyChanging();
					this._IssueDate = value;
					this.SendPropertyChanged("IssueDate");
					this.OnIssueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationPlace", DbType="NVarChar(MAX)")]
		public string RegistrationPlace
		{
			get
			{
				return this._RegistrationPlace;
			}
			set
			{
				if ((this._RegistrationPlace != value))
				{
					this.OnRegistrationPlaceChanging(value);
					this.SendPropertyChanging();
					this._RegistrationPlace = value;
					this.SendPropertyChanged("RegistrationPlace");
					this.OnRegistrationPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt NOT NULL")]
		public long CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt NOT NULL")]
		public long ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Passport_Client", Storage="_Clients", ThisKey="Id", OtherKey="PassportId")]
		public EntitySet<Client> Clients
		{
			get
			{
				return this._Clients;
			}
			set
			{
				this._Clients.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Passport_User", Storage="_Users", ThisKey="Id", OtherKey="PassportId")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Clients(Client entity)
		{
			this.SendPropertyChanging();
			entity.Passport = this;
		}
		
		private void detach_Clients(Client entity)
		{
			this.SendPropertyChanging();
			entity.Passport = null;
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Passport = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Passport = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Permissions")]
	public partial class Permission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _SystemName;
		
		private string _DisplayName;
		
		private string _PermissionGroup;
		
		private bool _OperationContext;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private long _CreatedBy;
		
		private long _ModifiedBy;
		
		private EntitySet<RolePermission> _RolePermissions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSystemNameChanging(string value);
    partial void OnSystemNameChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnPermissionGroupChanging(string value);
    partial void OnPermissionGroupChanged();
    partial void OnOperationContextChanging(bool value);
    partial void OnOperationContextChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnCreatedByChanging(long value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(long value);
    partial void OnModifiedByChanged();
    #endregion
		
		public Permission()
		{
			this._RolePermissions = new EntitySet<RolePermission>(new Action<RolePermission>(this.attach_RolePermissions), new Action<RolePermission>(this.detach_RolePermissions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SystemName
		{
			get
			{
				return this._SystemName;
			}
			set
			{
				if ((this._SystemName != value))
				{
					this.OnSystemNameChanging(value);
					this.SendPropertyChanging();
					this._SystemName = value;
					this.SendPropertyChanged("SystemName");
					this.OnSystemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(255)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionGroup", DbType="NVarChar(255)")]
		public string PermissionGroup
		{
			get
			{
				return this._PermissionGroup;
			}
			set
			{
				if ((this._PermissionGroup != value))
				{
					this.OnPermissionGroupChanging(value);
					this.SendPropertyChanging();
					this._PermissionGroup = value;
					this.SendPropertyChanged("PermissionGroup");
					this.OnPermissionGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationContext", DbType="Bit NOT NULL")]
		public bool OperationContext
		{
			get
			{
				return this._OperationContext;
			}
			set
			{
				if ((this._OperationContext != value))
				{
					this.OnOperationContextChanging(value);
					this.SendPropertyChanging();
					this._OperationContext = value;
					this.SendPropertyChanged("OperationContext");
					this.OnOperationContextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt NOT NULL")]
		public long CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt NOT NULL")]
		public long ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_RolePermission", Storage="_RolePermissions", ThisKey="Id", OtherKey="PermissionId")]
		public EntitySet<RolePermission> RolePermissions
		{
			get
			{
				return this._RolePermissions;
			}
			set
			{
				this._RolePermissions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RolePermissions(RolePermission entity)
		{
			this.SendPropertyChanging();
			entity.Permission = this;
		}
		
		private void detach_RolePermissions(RolePermission entity)
		{
			this.SendPropertyChanging();
			entity.Permission = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GeoCountries")]
	public partial class GeoCountry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private EntitySet<GeoRegion> _GeoRegions;
		
		private EntitySet<Address> _Addresses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public GeoCountry()
		{
			this._GeoRegions = new EntitySet<GeoRegion>(new Action<GeoRegion>(this.attach_GeoRegions), new Action<GeoRegion>(this.detach_GeoRegions));
			this._Addresses = new EntitySet<Address>(new Action<Address>(this.attach_Addresses), new Action<Address>(this.detach_Addresses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoCountry_GeoRegion", Storage="_GeoRegions", ThisKey="Id", OtherKey="CountryId")]
		public EntitySet<GeoRegion> GeoRegions
		{
			get
			{
				return this._GeoRegions;
			}
			set
			{
				this._GeoRegions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoCountry_Address", Storage="_Addresses", ThisKey="Id", OtherKey="CountryId")]
		public EntitySet<Address> Addresses
		{
			get
			{
				return this._Addresses;
			}
			set
			{
				this._Addresses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GeoRegions(GeoRegion entity)
		{
			this.SendPropertyChanging();
			entity.GeoCountry = this;
		}
		
		private void detach_GeoRegions(GeoRegion entity)
		{
			this.SendPropertyChanging();
			entity.GeoCountry = null;
		}
		
		private void attach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.GeoCountry = this;
		}
		
		private void detach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.GeoCountry = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GeoObjects")]
	public partial class GeoObject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _StreetId;
		
		private string _Name;
		
		private System.Nullable<double> _Latitude;
		
		private System.Nullable<double> _Longitude;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private EntitySet<GeoObjectInfo> _GeoObjectInfos;
		
		private EntityRef<GeoStreet> _GeoStreet;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnStreetIdChanging(long value);
    partial void OnStreetIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLatitudeChanging(System.Nullable<double> value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(System.Nullable<double> value);
    partial void OnLongitudeChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public GeoObject()
		{
			this._GeoObjectInfos = new EntitySet<GeoObjectInfo>(new Action<GeoObjectInfo>(this.attach_GeoObjectInfos), new Action<GeoObjectInfo>(this.detach_GeoObjectInfos));
			this._GeoStreet = default(EntityRef<GeoStreet>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreetId", DbType="BigInt NOT NULL")]
		public long StreetId
		{
			get
			{
				return this._StreetId;
			}
			set
			{
				if ((this._StreetId != value))
				{
					if (this._GeoStreet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStreetIdChanging(value);
					this.SendPropertyChanging();
					this._StreetId = value;
					this.SendPropertyChanged("StreetId");
					this.OnStreetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float")]
		public System.Nullable<double> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float")]
		public System.Nullable<double> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoObject_GeoObjectInfo", Storage="_GeoObjectInfos", ThisKey="Id", OtherKey="GeoObjectId")]
		public EntitySet<GeoObjectInfo> GeoObjectInfos
		{
			get
			{
				return this._GeoObjectInfos;
			}
			set
			{
				this._GeoObjectInfos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoStreet_GeoObject", Storage="_GeoStreet", ThisKey="StreetId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public GeoStreet GeoStreet
		{
			get
			{
				return this._GeoStreet.Entity;
			}
			set
			{
				GeoStreet previousValue = this._GeoStreet.Entity;
				if (((previousValue != value) 
							|| (this._GeoStreet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GeoStreet.Entity = null;
						previousValue.GeoObjects.Remove(this);
					}
					this._GeoStreet.Entity = value;
					if ((value != null))
					{
						value.GeoObjects.Add(this);
						this._StreetId = value.Id;
					}
					else
					{
						this._StreetId = default(long);
					}
					this.SendPropertyChanged("GeoStreet");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GeoObjectInfos(GeoObjectInfo entity)
		{
			this.SendPropertyChanging();
			entity.GeoObject = this;
		}
		
		private void detach_GeoObjectInfos(GeoObjectInfo entity)
		{
			this.SendPropertyChanging();
			entity.GeoObject = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GeoRegions")]
	public partial class GeoRegion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _CountryId;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private EntitySet<GeoRegionDistrict> _GeoRegionDistricts;
		
		private EntitySet<Address> _Addresses;
		
		private EntityRef<GeoCountry> _GeoCountry;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCountryIdChanging(long value);
    partial void OnCountryIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public GeoRegion()
		{
			this._GeoRegionDistricts = new EntitySet<GeoRegionDistrict>(new Action<GeoRegionDistrict>(this.attach_GeoRegionDistricts), new Action<GeoRegionDistrict>(this.detach_GeoRegionDistricts));
			this._Addresses = new EntitySet<Address>(new Action<Address>(this.attach_Addresses), new Action<Address>(this.detach_Addresses));
			this._GeoCountry = default(EntityRef<GeoCountry>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="BigInt NOT NULL")]
		public long CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					if (this._GeoCountry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoRegion_GeoRegionDistrict", Storage="_GeoRegionDistricts", ThisKey="Id", OtherKey="RegionId")]
		public EntitySet<GeoRegionDistrict> GeoRegionDistricts
		{
			get
			{
				return this._GeoRegionDistricts;
			}
			set
			{
				this._GeoRegionDistricts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoRegion_Address", Storage="_Addresses", ThisKey="Id", OtherKey="RegionId")]
		public EntitySet<Address> Addresses
		{
			get
			{
				return this._Addresses;
			}
			set
			{
				this._Addresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoCountry_GeoRegion", Storage="_GeoCountry", ThisKey="CountryId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public GeoCountry GeoCountry
		{
			get
			{
				return this._GeoCountry.Entity;
			}
			set
			{
				GeoCountry previousValue = this._GeoCountry.Entity;
				if (((previousValue != value) 
							|| (this._GeoCountry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GeoCountry.Entity = null;
						previousValue.GeoRegions.Remove(this);
					}
					this._GeoCountry.Entity = value;
					if ((value != null))
					{
						value.GeoRegions.Add(this);
						this._CountryId = value.Id;
					}
					else
					{
						this._CountryId = default(long);
					}
					this.SendPropertyChanged("GeoCountry");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GeoRegionDistricts(GeoRegionDistrict entity)
		{
			this.SendPropertyChanging();
			entity.GeoRegion = this;
		}
		
		private void detach_GeoRegionDistricts(GeoRegionDistrict entity)
		{
			this.SendPropertyChanging();
			entity.GeoRegion = null;
		}
		
		private void attach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.GeoRegion = this;
		}
		
		private void detach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.GeoRegion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GeoStreets")]
	public partial class GeoStreet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _AreaId;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private EntitySet<GeoObject> _GeoObjects;
		
		private EntitySet<Address> _Addresses;
		
		private EntitySet<GeoLandmark> _GeoLandmarks;
		
		private EntityRef<GeoResidentialArea> _GeoResidentialArea;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnAreaIdChanging(long value);
    partial void OnAreaIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public GeoStreet()
		{
			this._GeoObjects = new EntitySet<GeoObject>(new Action<GeoObject>(this.attach_GeoObjects), new Action<GeoObject>(this.detach_GeoObjects));
			this._Addresses = new EntitySet<Address>(new Action<Address>(this.attach_Addresses), new Action<Address>(this.detach_Addresses));
			this._GeoLandmarks = new EntitySet<GeoLandmark>(new Action<GeoLandmark>(this.attach_GeoLandmarks), new Action<GeoLandmark>(this.detach_GeoLandmarks));
			this._GeoResidentialArea = default(EntityRef<GeoResidentialArea>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaId", DbType="BigInt NOT NULL")]
		public long AreaId
		{
			get
			{
				return this._AreaId;
			}
			set
			{
				if ((this._AreaId != value))
				{
					if (this._GeoResidentialArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAreaIdChanging(value);
					this.SendPropertyChanging();
					this._AreaId = value;
					this.SendPropertyChanged("AreaId");
					this.OnAreaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoStreet_GeoObject", Storage="_GeoObjects", ThisKey="Id", OtherKey="StreetId")]
		public EntitySet<GeoObject> GeoObjects
		{
			get
			{
				return this._GeoObjects;
			}
			set
			{
				this._GeoObjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoStreet_Address", Storage="_Addresses", ThisKey="Id", OtherKey="StreetId")]
		public EntitySet<Address> Addresses
		{
			get
			{
				return this._Addresses;
			}
			set
			{
				this._Addresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoStreet_GeoLandmark", Storage="_GeoLandmarks", ThisKey="Id", OtherKey="StreetId")]
		public EntitySet<GeoLandmark> GeoLandmarks
		{
			get
			{
				return this._GeoLandmarks;
			}
			set
			{
				this._GeoLandmarks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoResidentialArea_GeoStreet", Storage="_GeoResidentialArea", ThisKey="AreaId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public GeoResidentialArea GeoResidentialArea
		{
			get
			{
				return this._GeoResidentialArea.Entity;
			}
			set
			{
				GeoResidentialArea previousValue = this._GeoResidentialArea.Entity;
				if (((previousValue != value) 
							|| (this._GeoResidentialArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GeoResidentialArea.Entity = null;
						previousValue.GeoStreets.Remove(this);
					}
					this._GeoResidentialArea.Entity = value;
					if ((value != null))
					{
						value.GeoStreets.Add(this);
						this._AreaId = value.Id;
					}
					else
					{
						this._AreaId = default(long);
					}
					this.SendPropertyChanged("GeoResidentialArea");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GeoObjects(GeoObject entity)
		{
			this.SendPropertyChanging();
			entity.GeoStreet = this;
		}
		
		private void detach_GeoObjects(GeoObject entity)
		{
			this.SendPropertyChanging();
			entity.GeoStreet = null;
		}
		
		private void attach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.GeoStreet = this;
		}
		
		private void detach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.GeoStreet = null;
		}
		
		private void attach_GeoLandmarks(GeoLandmark entity)
		{
			this.SendPropertyChanging();
			entity.GeoStreet = this;
		}
		
		private void detach_GeoLandmarks(GeoLandmark entity)
		{
			this.SendPropertyChanging();
			entity.GeoStreet = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Companies")]
	public partial class Company : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private long _CityId;
		
		private string _Address;
		
		private string _Phone1;
		
		private string _Phone2;
		
		private string _Phone3;
		
		private string _Email;
		
		private string _LogoImageUrl;
		
		private string _LocationSchemeUrl;
		
		private string _Description;
		
		private System.Nullable<long> _CompanyType;
		
		private long _DirectorId;
		
		private string _Branch;
		
		private string _ContactPerson;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private long _CreatedBy;
		
		private long _ModifiedBy;
		
		private bool _Inactive;
		
		private bool _IsServiceProvider;
		
		private bool _NDSPayer;
		
		private string _ShortName;
		
		private EntitySet<Client> _Clients;
		
		private EntitySet<User> _Users;
		
		private EntitySet<Payment> _Payments;
		
		private EntitySet<ServiceLogItem> _ProvidedServices;
		
		private EntitySet<ServiceType> _ServiceTypes;
		
		private EntityRef<GeoCity> _GeoCity;
		
		private EntityRef<User> _Director;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCityIdChanging(long value);
    partial void OnCityIdChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhone1Changing(string value);
    partial void OnPhone1Changed();
    partial void OnPhone2Changing(string value);
    partial void OnPhone2Changed();
    partial void OnPhone3Changing(string value);
    partial void OnPhone3Changed();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLogoImageUrlChanging(string value);
    partial void OnLogoImageUrlChanged();
    partial void OnLocationSchemeUrlChanging(string value);
    partial void OnLocationSchemeUrlChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCompanyTypeChanging(System.Nullable<long> value);
    partial void OnCompanyTypeChanged();
    partial void OnDirectorIdChanging(long value);
    partial void OnDirectorIdChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    partial void OnContactPersonChanging(string value);
    partial void OnContactPersonChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnCreatedByChanging(long value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(long value);
    partial void OnModifiedByChanged();
    partial void OnInactiveChanging(bool value);
    partial void OnInactiveChanged();
    partial void OnIsServiceProviderChanging(bool value);
    partial void OnIsServiceProviderChanged();
    partial void OnNDSPayerChanging(bool value);
    partial void OnNDSPayerChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    #endregion
		
		public Company()
		{
			this._Clients = new EntitySet<Client>(new Action<Client>(this.attach_Clients), new Action<Client>(this.detach_Clients));
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			this._ProvidedServices = new EntitySet<ServiceLogItem>(new Action<ServiceLogItem>(this.attach_ProvidedServices), new Action<ServiceLogItem>(this.detach_ProvidedServices));
			this._ServiceTypes = new EntitySet<ServiceType>(new Action<ServiceType>(this.attach_ServiceTypes), new Action<ServiceType>(this.detach_ServiceTypes));
			this._GeoCity = default(EntityRef<GeoCity>);
			this._Director = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityId", DbType="BigInt NOT NULL")]
		public long CityId
		{
			get
			{
				return this._CityId;
			}
			set
			{
				if ((this._CityId != value))
				{
					if (this._GeoCity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCityIdChanging(value);
					this.SendPropertyChanging();
					this._CityId = value;
					this.SendPropertyChanged("CityId");
					this.OnCityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone1", DbType="NVarChar(100)")]
		public string Phone1
		{
			get
			{
				return this._Phone1;
			}
			set
			{
				if ((this._Phone1 != value))
				{
					this.OnPhone1Changing(value);
					this.SendPropertyChanging();
					this._Phone1 = value;
					this.SendPropertyChanged("Phone1");
					this.OnPhone1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone2", DbType="NVarChar(100)")]
		public string Phone2
		{
			get
			{
				return this._Phone2;
			}
			set
			{
				if ((this._Phone2 != value))
				{
					this.OnPhone2Changing(value);
					this.SendPropertyChanging();
					this._Phone2 = value;
					this.SendPropertyChanged("Phone2");
					this.OnPhone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone3", DbType="NVarChar(100)")]
		public string Phone3
		{
			get
			{
				return this._Phone3;
			}
			set
			{
				if ((this._Phone3 != value))
				{
					this.OnPhone3Changing(value);
					this.SendPropertyChanging();
					this._Phone3 = value;
					this.SendPropertyChanged("Phone3");
					this.OnPhone3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoImageUrl", DbType="NVarChar(MAX)")]
		public string LogoImageUrl
		{
			get
			{
				return this._LogoImageUrl;
			}
			set
			{
				if ((this._LogoImageUrl != value))
				{
					this.OnLogoImageUrlChanging(value);
					this.SendPropertyChanging();
					this._LogoImageUrl = value;
					this.SendPropertyChanged("LogoImageUrl");
					this.OnLogoImageUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationSchemeUrl", DbType="NVarChar(MAX)")]
		public string LocationSchemeUrl
		{
			get
			{
				return this._LocationSchemeUrl;
			}
			set
			{
				if ((this._LocationSchemeUrl != value))
				{
					this.OnLocationSchemeUrlChanging(value);
					this.SendPropertyChanging();
					this._LocationSchemeUrl = value;
					this.SendPropertyChanged("LocationSchemeUrl");
					this.OnLocationSchemeUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyType", DbType="BigInt NULL")]
		public System.Nullable<long> CompanyType
		{
			get
			{
				return this._CompanyType;
			}
			set
			{
				if ((this._CompanyType != value))
				{
					this.OnCompanyTypeChanging(value);
					this.SendPropertyChanging();
					this._CompanyType = value;
					this.SendPropertyChanged("CompanyType");
					this.OnCompanyTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectorId", DbType="BigInt NOT NULL")]
		public long DirectorId
		{
			get
			{
				return this._DirectorId;
			}
			set
			{
				if ((this._DirectorId != value))
				{
					if (this._Director.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDirectorIdChanging(value);
					this.SendPropertyChanging();
					this._DirectorId = value;
					this.SendPropertyChanged("DirectorId");
					this.OnDirectorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="NVarChar(MAX)")]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPerson", DbType="NVarChar(MAX)")]
		public string ContactPerson
		{
			get
			{
				return this._ContactPerson;
			}
			set
			{
				if ((this._ContactPerson != value))
				{
					this.OnContactPersonChanging(value);
					this.SendPropertyChanging();
					this._ContactPerson = value;
					this.SendPropertyChanged("ContactPerson");
					this.OnContactPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt NOT NULL")]
		public long CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt NOT NULL")]
		public long ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inactive", DbType="bit")]
		public bool Inactive
		{
			get
			{
				return this._Inactive;
			}
			set
			{
				if ((this._Inactive != value))
				{
					this.OnInactiveChanging(value);
					this.SendPropertyChanging();
					this._Inactive = value;
					this.SendPropertyChanged("Inactive");
					this.OnInactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsServiceProvider", DbType="BIT NOT NULL")]
		public bool IsServiceProvider
		{
			get
			{
				return this._IsServiceProvider;
			}
			set
			{
				if ((this._IsServiceProvider != value))
				{
					this.OnIsServiceProviderChanging(value);
					this.SendPropertyChanging();
					this._IsServiceProvider = value;
					this.SendPropertyChanged("IsServiceProvider");
					this.OnIsServiceProviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDSPayer", DbType="BIT NOT NULL")]
		public bool NDSPayer
		{
			get
			{
				return this._NDSPayer;
			}
			set
			{
				if ((this._NDSPayer != value))
				{
					this.OnNDSPayerChanging(value);
					this.SendPropertyChanging();
					this._NDSPayer = value;
					this.SendPropertyChanged("NDSPayer");
					this.OnNDSPayerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="nvarchar(255) NULL")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Client", Storage="_Clients", ThisKey="Id", OtherKey="CompanyId")]
		public EntitySet<Client> Clients
		{
			get
			{
				return this._Clients;
			}
			set
			{
				this._Clients.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_User", Storage="_Users", ThisKey="Id", OtherKey="CompanyId")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Payment", Storage="_Payments", ThisKey="Id", OtherKey="CompanyId")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_ServiceLogItem", Storage="_ProvidedServices", ThisKey="Id", OtherKey="CompanyId")]
		public EntitySet<ServiceLogItem> ProvidedServices
		{
			get
			{
				return this._ProvidedServices;
			}
			set
			{
				this._ProvidedServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_ServiceType", Storage="_ServiceTypes", ThisKey="Id", OtherKey="ProvidedId")]
		public EntitySet<ServiceType> ServiceTypes
		{
			get
			{
				return this._ServiceTypes;
			}
			set
			{
				this._ServiceTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoCity_Company", Storage="_GeoCity", ThisKey="CityId", OtherKey="Id", IsForeignKey=true)]
		public GeoCity GeoCity
		{
			get
			{
				return this._GeoCity.Entity;
			}
			set
			{
				GeoCity previousValue = this._GeoCity.Entity;
				if (((previousValue != value) 
							|| (this._GeoCity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GeoCity.Entity = null;
						previousValue.Companies.Remove(this);
					}
					this._GeoCity.Entity = value;
					if ((value != null))
					{
						value.Companies.Add(this);
						this._CityId = value.Id;
					}
					else
					{
						this._CityId = default(long);
					}
					this.SendPropertyChanged("GeoCity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Company", Storage="_Director", ThisKey="DirectorId", OtherKey="Id", IsForeignKey=true)]
		public User Director
		{
			get
			{
				return this._Director.Entity;
			}
			set
			{
				User previousValue = this._Director.Entity;
				if (((previousValue != value) 
							|| (this._Director.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Director.Entity = null;
						previousValue.OwnedCompanies.Remove(this);
					}
					this._Director.Entity = value;
					if ((value != null))
					{
						value.OwnedCompanies.Add(this);
						this._DirectorId = value.Id;
					}
					else
					{
						this._DirectorId = default(long);
					}
					this.SendPropertyChanged("Director");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Clients(Client entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Clients(Client entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_ProvidedServices(ServiceLogItem entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_ProvidedServices(ServiceLogItem entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_ServiceTypes(ServiceType entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_ServiceTypes(ServiceType entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AuditEvents")]
	public partial class AuditEvent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _UserId;
		
		private System.DateTime _EventDate;
		
		private global::RDV.Domain.Enums.AuditEventTypes _EventType;
		
		private string _Message;
		
		private string _IP;
		
		private string _BrowserInfo;
		
		private string _AdditionalInformation;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnEventDateChanging(System.DateTime value);
    partial void OnEventDateChanged();
    partial void OnEventTypeChanging(global::RDV.Domain.Enums.AuditEventTypes value);
    partial void OnEventTypeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnIPChanging(string value);
    partial void OnIPChanged();
    partial void OnBrowserInfoChanging(string value);
    partial void OnBrowserInfoChanged();
    partial void OnAdditionalInformationChanging(string value);
    partial void OnAdditionalInformationChanged();
    #endregion
		
		public AuditEvent()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDate", DbType="DateTime NOT NULL")]
		public System.DateTime EventDate
		{
			get
			{
				return this._EventDate;
			}
			set
			{
				if ((this._EventDate != value))
				{
					this.OnEventDateChanging(value);
					this.SendPropertyChanging();
					this._EventDate = value;
					this.SendPropertyChanged("EventDate");
					this.OnEventDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventType", DbType="SmallInt NOT NULL", CanBeNull=false)]
		public global::RDV.Domain.Enums.AuditEventTypes EventType
		{
			get
			{
				return this._EventType;
			}
			set
			{
				if ((this._EventType != value))
				{
					this.OnEventTypeChanging(value);
					this.SendPropertyChanging();
					this._EventType = value;
					this.SendPropertyChanged("EventType");
					this.OnEventTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(MAX)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP", DbType="NVarChar(255)")]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this.OnIPChanging(value);
					this.SendPropertyChanging();
					this._IP = value;
					this.SendPropertyChanged("IP");
					this.OnIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrowserInfo", DbType="NVarChar(MAX)")]
		public string BrowserInfo
		{
			get
			{
				return this._BrowserInfo;
			}
			set
			{
				if ((this._BrowserInfo != value))
				{
					this.OnBrowserInfoChanging(value);
					this.SendPropertyChanging();
					this._BrowserInfo = value;
					this.SendPropertyChanged("BrowserInfo");
					this.OnBrowserInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalInformation", DbType="NVarChar(MAX)")]
		public string AdditionalInformation
		{
			get
			{
				return this._AdditionalInformation;
			}
			set
			{
				if ((this._AdditionalInformation != value))
				{
					this.OnAdditionalInformationChanging(value);
					this.SendPropertyChanging();
					this._AdditionalInformation = value;
					this.SendPropertyChanged("AdditionalInformation");
					this.OnAdditionalInformationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_AuditEvent", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.AuditEvents.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.AuditEvents.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GeoRegionDistricts")]
	public partial class GeoRegionDistrict : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _RegionId;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private EntitySet<GeoCity> _GeoCities;
		
		private EntitySet<Address> _Addresses;
		
		private EntityRef<GeoRegion> _GeoRegion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnRegionIdChanging(long value);
    partial void OnRegionIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public GeoRegionDistrict()
		{
			this._GeoCities = new EntitySet<GeoCity>(new Action<GeoCity>(this.attach_GeoCities), new Action<GeoCity>(this.detach_GeoCities));
			this._Addresses = new EntitySet<Address>(new Action<Address>(this.attach_Addresses), new Action<Address>(this.detach_Addresses));
			this._GeoRegion = default(EntityRef<GeoRegion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionId", DbType="BigInt NOT NULL")]
		public long RegionId
		{
			get
			{
				return this._RegionId;
			}
			set
			{
				if ((this._RegionId != value))
				{
					if (this._GeoRegion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegionIdChanging(value);
					this.SendPropertyChanging();
					this._RegionId = value;
					this.SendPropertyChanged("RegionId");
					this.OnRegionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoRegionDistrict_GeoCity", Storage="_GeoCities", ThisKey="Id", OtherKey="RegionDistrictId")]
		public EntitySet<GeoCity> GeoCities
		{
			get
			{
				return this._GeoCities;
			}
			set
			{
				this._GeoCities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoRegionDistrict_Address", Storage="_Addresses", ThisKey="Id", OtherKey="RegionDistrictId")]
		public EntitySet<Address> Addresses
		{
			get
			{
				return this._Addresses;
			}
			set
			{
				this._Addresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoRegion_GeoRegionDistrict", Storage="_GeoRegion", ThisKey="RegionId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public GeoRegion GeoRegion
		{
			get
			{
				return this._GeoRegion.Entity;
			}
			set
			{
				GeoRegion previousValue = this._GeoRegion.Entity;
				if (((previousValue != value) 
							|| (this._GeoRegion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GeoRegion.Entity = null;
						previousValue.GeoRegionDistricts.Remove(this);
					}
					this._GeoRegion.Entity = value;
					if ((value != null))
					{
						value.GeoRegionDistricts.Add(this);
						this._RegionId = value.Id;
					}
					else
					{
						this._RegionId = default(long);
					}
					this.SendPropertyChanged("GeoRegion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GeoCities(GeoCity entity)
		{
			this.SendPropertyChanging();
			entity.GeoRegionDistrict = this;
		}
		
		private void detach_GeoCities(GeoCity entity)
		{
			this.SendPropertyChanging();
			entity.GeoRegionDistrict = null;
		}
		
		private void attach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.GeoRegionDistrict = this;
		}
		
		private void detach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.GeoRegionDistrict = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GeoCities")]
	public partial class GeoCity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _RegionDistrictId;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private EntitySet<Company> _Companies;
		
		private EntitySet<Address> _Addresses;
		
		private EntitySet<GeoLandmark> _GeoLandmarks;
		
		private EntitySet<GeoDistrict> _GeoDistricts;
		
		private EntityRef<GeoRegionDistrict> _GeoRegionDistrict;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnRegionDistrictIdChanging(long value);
    partial void OnRegionDistrictIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public GeoCity()
		{
			this._Companies = new EntitySet<Company>(new Action<Company>(this.attach_Companies), new Action<Company>(this.detach_Companies));
			this._Addresses = new EntitySet<Address>(new Action<Address>(this.attach_Addresses), new Action<Address>(this.detach_Addresses));
			this._GeoLandmarks = new EntitySet<GeoLandmark>(new Action<GeoLandmark>(this.attach_GeoLandmarks), new Action<GeoLandmark>(this.detach_GeoLandmarks));
			this._GeoDistricts = new EntitySet<GeoDistrict>(new Action<GeoDistrict>(this.attach_GeoDistricts), new Action<GeoDistrict>(this.detach_GeoDistricts));
			this._GeoRegionDistrict = default(EntityRef<GeoRegionDistrict>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionDistrictId", DbType="BigInt NOT NULL")]
		public long RegionDistrictId
		{
			get
			{
				return this._RegionDistrictId;
			}
			set
			{
				if ((this._RegionDistrictId != value))
				{
					if (this._GeoRegionDistrict.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegionDistrictIdChanging(value);
					this.SendPropertyChanging();
					this._RegionDistrictId = value;
					this.SendPropertyChanged("RegionDistrictId");
					this.OnRegionDistrictIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoCity_Company", Storage="_Companies", ThisKey="Id", OtherKey="CityId")]
		public EntitySet<Company> Companies
		{
			get
			{
				return this._Companies;
			}
			set
			{
				this._Companies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoCity_Address", Storage="_Addresses", ThisKey="Id", OtherKey="CityId")]
		public EntitySet<Address> Addresses
		{
			get
			{
				return this._Addresses;
			}
			set
			{
				this._Addresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoCity_GeoLandmark", Storage="_GeoLandmarks", ThisKey="Id", OtherKey="CityId")]
		public EntitySet<GeoLandmark> GeoLandmarks
		{
			get
			{
				return this._GeoLandmarks;
			}
			set
			{
				this._GeoLandmarks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoCity_GeoDistrict", Storage="_GeoDistricts", ThisKey="Id", OtherKey="CityId")]
		public EntitySet<GeoDistrict> GeoDistricts
		{
			get
			{
				return this._GeoDistricts;
			}
			set
			{
				this._GeoDistricts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoRegionDistrict_GeoCity", Storage="_GeoRegionDistrict", ThisKey="RegionDistrictId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public GeoRegionDistrict GeoRegionDistrict
		{
			get
			{
				return this._GeoRegionDistrict.Entity;
			}
			set
			{
				GeoRegionDistrict previousValue = this._GeoRegionDistrict.Entity;
				if (((previousValue != value) 
							|| (this._GeoRegionDistrict.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GeoRegionDistrict.Entity = null;
						previousValue.GeoCities.Remove(this);
					}
					this._GeoRegionDistrict.Entity = value;
					if ((value != null))
					{
						value.GeoCities.Add(this);
						this._RegionDistrictId = value.Id;
					}
					else
					{
						this._RegionDistrictId = default(long);
					}
					this.SendPropertyChanged("GeoRegionDistrict");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Companies(Company entity)
		{
			this.SendPropertyChanging();
			entity.GeoCity = this;
		}
		
		private void detach_Companies(Company entity)
		{
			this.SendPropertyChanging();
			entity.GeoCity = null;
		}
		
		private void attach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.GeoCity = this;
		}
		
		private void detach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.GeoCity = null;
		}
		
		private void attach_GeoLandmarks(GeoLandmark entity)
		{
			this.SendPropertyChanging();
			entity.GeoCity = this;
		}
		
		private void detach_GeoLandmarks(GeoLandmark entity)
		{
			this.SendPropertyChanging();
			entity.GeoCity = null;
		}
		
		private void attach_GeoDistricts(GeoDistrict entity)
		{
			this.SendPropertyChanging();
			entity.GeoCity = this;
		}
		
		private void detach_GeoDistricts(GeoDistrict entity)
		{
			this.SendPropertyChanging();
			entity.GeoCity = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StaticPages")]
	public partial class StaticPage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Title;
		
		private string _Content;
		
		private string _Route;
		
		private int _Views;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private long _CreatedBy;
		
		private long _ModifiedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnRouteChanging(string value);
    partial void OnRouteChanged();
    partial void OnViewsChanging(int value);
    partial void OnViewsChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnCreatedByChanging(long value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(long value);
    partial void OnModifiedByChanged();
    #endregion
		
		public StaticPage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(MAX)")]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Route", DbType="NVarChar(255)")]
		public string Route
		{
			get
			{
				return this._Route;
			}
			set
			{
				if ((this._Route != value))
				{
					this.OnRouteChanging(value);
					this.SendPropertyChanging();
					this._Route = value;
					this.SendPropertyChanged("Route");
					this.OnRouteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Views", DbType="Int NOT NULL")]
		public int Views
		{
			get
			{
				return this._Views;
			}
			set
			{
				if ((this._Views != value))
				{
					this.OnViewsChanging(value);
					this.SendPropertyChanging();
					this._Views = value;
					this.SendPropertyChanged("Views");
					this.OnViewsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt NOT NULL")]
		public long CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt NOT NULL")]
		public long ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MenuItems")]
	public partial class MenuItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Title;
		
		private string _Href;
		
		private int _Position;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private long _CreatedBy;
		
		private long _ModifiedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnHrefChanging(string value);
    partial void OnHrefChanged();
    partial void OnPositionChanging(int value);
    partial void OnPositionChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnCreatedByChanging(long value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(long value);
    partial void OnModifiedByChanged();
    #endregion
		
		public MenuItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Href", DbType="NVarChar(MAX)")]
		public string Href
		{
			get
			{
				return this._Href;
			}
			set
			{
				if ((this._Href != value))
				{
					this.OnHrefChanging(value);
					this.SendPropertyChanging();
					this._Href = value;
					this.SendPropertyChanged("Href");
					this.OnHrefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="Int NOT NULL")]
		public int Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt NOT NULL")]
		public long CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt NOT NULL")]
		public long ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Articles")]
	public partial class Article : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Title;
		
		private global::RDV.Domain.Enums.ArticleTypes _ArticleType;
		
		private System.DateTime _PublicationDate;
		
		private string _ShortContent;
		
		private string _FullContent;
		
		private string _PreviewImage;
		
		private string _VideoLink;
		
		private int _Views;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private long _CreatedBy;
		
		private long _ModifiedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnArticleTypeChanging(global::RDV.Domain.Enums.ArticleTypes value);
    partial void OnArticleTypeChanged();
    partial void OnPublicationDateChanging(System.DateTime value);
    partial void OnPublicationDateChanged();
    partial void OnShortContentChanging(string value);
    partial void OnShortContentChanged();
    partial void OnFullContentChanging(string value);
    partial void OnFullContentChanged();
    partial void OnPreviewImageChanging(string value);
    partial void OnPreviewImageChanged();
    partial void OnVideoLinkChanging(string value);
    partial void OnVideoLinkChanged();
    partial void OnViewsChanging(int value);
    partial void OnViewsChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnCreatedByChanging(long value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(long value);
    partial void OnModifiedByChanged();
    #endregion
		
		public Article()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleType", DbType="SmallInt NOT NULL", CanBeNull=false)]
		public global::RDV.Domain.Enums.ArticleTypes ArticleType
		{
			get
			{
				return this._ArticleType;
			}
			set
			{
				if ((this._ArticleType != value))
				{
					this.OnArticleTypeChanging(value);
					this.SendPropertyChanging();
					this._ArticleType = value;
					this.SendPropertyChanged("ArticleType");
					this.OnArticleTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicationDate", DbType="DateTime NOT NULL")]
		public System.DateTime PublicationDate
		{
			get
			{
				return this._PublicationDate;
			}
			set
			{
				if ((this._PublicationDate != value))
				{
					this.OnPublicationDateChanging(value);
					this.SendPropertyChanging();
					this._PublicationDate = value;
					this.SendPropertyChanged("PublicationDate");
					this.OnPublicationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortContent", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ShortContent
		{
			get
			{
				return this._ShortContent;
			}
			set
			{
				if ((this._ShortContent != value))
				{
					this.OnShortContentChanging(value);
					this.SendPropertyChanging();
					this._ShortContent = value;
					this.SendPropertyChanged("ShortContent");
					this.OnShortContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullContent", DbType="NVarChar(255)")]
		public string FullContent
		{
			get
			{
				return this._FullContent;
			}
			set
			{
				if ((this._FullContent != value))
				{
					this.OnFullContentChanging(value);
					this.SendPropertyChanging();
					this._FullContent = value;
					this.SendPropertyChanged("FullContent");
					this.OnFullContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviewImage", DbType="NVarChar(MAX)")]
		public string PreviewImage
		{
			get
			{
				return this._PreviewImage;
			}
			set
			{
				if ((this._PreviewImage != value))
				{
					this.OnPreviewImageChanging(value);
					this.SendPropertyChanging();
					this._PreviewImage = value;
					this.SendPropertyChanged("PreviewImage");
					this.OnPreviewImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoLink", DbType="NVarChar(4000)")]
		public string VideoLink
		{
			get
			{
				return this._VideoLink;
			}
			set
			{
				if ((this._VideoLink != value))
				{
					this.OnVideoLinkChanging(value);
					this.SendPropertyChanging();
					this._VideoLink = value;
					this.SendPropertyChanged("VideoLink");
					this.OnVideoLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Views", DbType="Int NOT NULL")]
		public int Views
		{
			get
			{
				return this._Views;
			}
			set
			{
				if ((this._Views != value))
				{
					this.OnViewsChanging(value);
					this.SendPropertyChanging();
					this._Views = value;
					this.SendPropertyChanged("Views");
					this.OnViewsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt NOT NULL")]
		public long CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt NOT NULL")]
		public long ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ObjectCommunications")]
	public partial class ObjectCommunication : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _ObjectId;
		
		private string _Water;
		
		private string _Gas;
		
		private System.Nullable<long> _Sewer;
		
		private string _Heating;
		
		private string _Phone;
		
		private string _Tubes;
		
		private string _Electricy;
		
		private string _SanFurniture;
		
		private System.Nullable<bool> _HasGasMeter;
		
		private System.Nullable<bool> _HasColdWaterMeter;
		
		private System.Nullable<bool> _HasHotWaterMeter;
		
		private System.Nullable<bool> _HasElectricyMeter;
		
		private System.Nullable<bool> _HasInternet;
		
		private EntityRef<EstateObject> _EstateObject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnObjectIdChanging(long value);
    partial void OnObjectIdChanged();
    partial void OnWaterChanging(string value);
    partial void OnWaterChanged();
    partial void OnGasChanging(string value);
    partial void OnGasChanged();
    partial void OnSewerChanging(System.Nullable<long> value);
    partial void OnSewerChanged();
    partial void OnHeatingChanging(string value);
    partial void OnHeatingChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnTubesChanging(string value);
    partial void OnTubesChanged();
    partial void OnElectricyChanging(string value);
    partial void OnElectricyChanged();
    partial void OnSanFurnitureChanging(string value);
    partial void OnSanFurnitureChanged();
    partial void OnHasGasMeterChanging(System.Nullable<bool> value);
    partial void OnHasGasMeterChanged();
    partial void OnHasColdWaterMeterChanging(System.Nullable<bool> value);
    partial void OnHasColdWaterMeterChanged();
    partial void OnHasHotWaterMeterChanging(System.Nullable<bool> value);
    partial void OnHasHotWaterMeterChanged();
    partial void OnHasElectricyMeterChanging(System.Nullable<bool> value);
    partial void OnHasElectricyMeterChanged();
    partial void OnHasInternetChanging(System.Nullable<bool> value);
    partial void OnHasInternetChanged();
    #endregion
		
		public ObjectCommunication()
		{
			this._EstateObject = default(EntityRef<EstateObject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectId", DbType="BigInt NOT NULL")]
		public long ObjectId
		{
			get
			{
				return this._ObjectId;
			}
			set
			{
				if ((this._ObjectId != value))
				{
					if (this._EstateObject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectIdChanging(value);
					this.SendPropertyChanging();
					this._ObjectId = value;
					this.SendPropertyChanged("ObjectId");
					this.OnObjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Water", DbType="NVarChar(255)")]
		public string Water
		{
			get
			{
				return this._Water;
			}
			set
			{
				if ((this._Water != value))
				{
					this.OnWaterChanging(value);
					this.SendPropertyChanging();
					this._Water = value;
					this.SendPropertyChanged("Water");
					this.OnWaterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gas", DbType="NVarChar(255)")]
		public string Gas
		{
			get
			{
				return this._Gas;
			}
			set
			{
				if ((this._Gas != value))
				{
					this.OnGasChanging(value);
					this.SendPropertyChanging();
					this._Gas = value;
					this.SendPropertyChanged("Gas");
					this.OnGasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sewer", DbType="BigInt")]
		public System.Nullable<long> Sewer
		{
			get
			{
				return this._Sewer;
			}
			set
			{
				if ((this._Sewer != value))
				{
					this.OnSewerChanging(value);
					this.SendPropertyChanging();
					this._Sewer = value;
					this.SendPropertyChanged("Sewer");
					this.OnSewerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Heating", DbType="NVarChar(255)")]
		public string Heating
		{
			get
			{
				return this._Heating;
			}
			set
			{
				if ((this._Heating != value))
				{
					this.OnHeatingChanging(value);
					this.SendPropertyChanging();
					this._Heating = value;
					this.SendPropertyChanged("Heating");
					this.OnHeatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(255)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tubes", DbType="NVarChar(255)")]
		public string Tubes
		{
			get
			{
				return this._Tubes;
			}
			set
			{
				if ((this._Tubes != value))
				{
					this.OnTubesChanging(value);
					this.SendPropertyChanging();
					this._Tubes = value;
					this.SendPropertyChanged("Tubes");
					this.OnTubesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Electricy", DbType="NVarChar(255)")]
		public string Electricy
		{
			get
			{
				return this._Electricy;
			}
			set
			{
				if ((this._Electricy != value))
				{
					this.OnElectricyChanging(value);
					this.SendPropertyChanging();
					this._Electricy = value;
					this.SendPropertyChanged("Electricy");
					this.OnElectricyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SanFurniture", DbType="NVarChar(255)")]
		public string SanFurniture
		{
			get
			{
				return this._SanFurniture;
			}
			set
			{
				if ((this._SanFurniture != value))
				{
					this.OnSanFurnitureChanging(value);
					this.SendPropertyChanging();
					this._SanFurniture = value;
					this.SendPropertyChanged("SanFurniture");
					this.OnSanFurnitureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasGasMeter", DbType="Bit")]
		public System.Nullable<bool> HasGasMeter
		{
			get
			{
				return this._HasGasMeter;
			}
			set
			{
				if ((this._HasGasMeter != value))
				{
					this.OnHasGasMeterChanging(value);
					this.SendPropertyChanging();
					this._HasGasMeter = value;
					this.SendPropertyChanged("HasGasMeter");
					this.OnHasGasMeterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasColdWaterMeter", DbType="Bit")]
		public System.Nullable<bool> HasColdWaterMeter
		{
			get
			{
				return this._HasColdWaterMeter;
			}
			set
			{
				if ((this._HasColdWaterMeter != value))
				{
					this.OnHasColdWaterMeterChanging(value);
					this.SendPropertyChanging();
					this._HasColdWaterMeter = value;
					this.SendPropertyChanged("HasColdWaterMeter");
					this.OnHasColdWaterMeterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasHotWaterMeter", DbType="Bit")]
		public System.Nullable<bool> HasHotWaterMeter
		{
			get
			{
				return this._HasHotWaterMeter;
			}
			set
			{
				if ((this._HasHotWaterMeter != value))
				{
					this.OnHasHotWaterMeterChanging(value);
					this.SendPropertyChanging();
					this._HasHotWaterMeter = value;
					this.SendPropertyChanged("HasHotWaterMeter");
					this.OnHasHotWaterMeterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasElectricyMeter", DbType="Bit")]
		public System.Nullable<bool> HasElectricyMeter
		{
			get
			{
				return this._HasElectricyMeter;
			}
			set
			{
				if ((this._HasElectricyMeter != value))
				{
					this.OnHasElectricyMeterChanging(value);
					this.SendPropertyChanging();
					this._HasElectricyMeter = value;
					this.SendPropertyChanged("HasElectricyMeter");
					this.OnHasElectricyMeterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasInternet", DbType="Bit")]
		public System.Nullable<bool> HasInternet
		{
			get
			{
				return this._HasInternet;
			}
			set
			{
				if ((this._HasInternet != value))
				{
					this.OnHasInternetChanging(value);
					this.SendPropertyChanging();
					this._HasInternet = value;
					this.SendPropertyChanged("HasInternet");
					this.OnHasInternetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstateObject_ObjectCommunication", Storage="_EstateObject", ThisKey="ObjectId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EstateObject EstateObject
		{
			get
			{
				return this._EstateObject.Entity;
			}
			set
			{
				EstateObject previousValue = this._EstateObject.Entity;
				if (((previousValue != value) 
							|| (this._EstateObject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EstateObject.Entity = null;
						previousValue.ObjectCommunications = null;
					}
					this._EstateObject.Entity = value;
					if ((value != null))
					{
						value.ObjectCommunications = this;
						this._ObjectId = value.Id;
					}
					else
					{
						this._ObjectId = default(long);
					}
					this.SendPropertyChanged("EstateObject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ObjectMainProperties")]
	public partial class ObjectMainProperty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _ObjectId;
		
		private System.Nullable<double> _RentPerDay;
		
		private System.Nullable<double> _RentPerMonth;
		
		private string _Security;
		
		private System.Nullable<long> _Currency;
		
		private System.Nullable<long> _PropertyType;
		
		private System.Nullable<bool> _Negotiable;
		
		private System.Nullable<bool> _ResidencePermit;
		
		private System.Nullable<double> _CelingHeight;
		
		private System.Nullable<double> _AtticHeight;
		
		private System.Nullable<long> _Yard;
		
		private System.Nullable<long> _OwnerShare;
		
		private string _AddCommercialBuildings;
		
		private System.Nullable<double> _ActualUsableFloorArea;
		
		private System.Nullable<double> _FirstFloorDownSet;
		
		private string _Title;
		
		private System.Nullable<bool> _MortgagePossibility;
		
		private System.Nullable<long> _MortgageBank;
		
		private string _ObjectUsage;
		
		private System.Nullable<bool> _NonResidenceUsage;
		
		private System.Nullable<long> _BuildingClass;
		
		private System.Nullable<int> _WindowsCount;
		
		private System.Nullable<int> _PrescriptionsCount;
		
		private System.Nullable<int> _FamiliesCount;
		
		private System.Nullable<int> _OwnersCount;
		
		private System.Nullable<int> _PhoneLinesCount;
		
		private System.Nullable<int> _LevelsCount;
		
		private System.Nullable<int> _FacadeWindowsCount;
		
		private System.Nullable<bool> _UtilitiesRentExspensive;
		
		private string _ShortDescription;
		
		private string _FloorMaterial;
		
		private string _BuildingMaterial;
		
		private string _LandAssignment;
		
		private string _ObjectAssignment;
		
		private System.Nullable<bool> _HasWeights;
		
		private System.Nullable<bool> _HasPhotos;
		
		private System.Nullable<bool> _NewBuilding;
		
		private System.Nullable<double> _TotalArea;
		
		private System.Nullable<long> _Landmark;
		
		private string _ReleaseInfo;
		
		private System.Nullable<bool> _HasParking;
		
		private System.Nullable<long> _BuildingPeriod;
		
		private System.Nullable<double> _BigRoomFloorArea;
		
		private System.Nullable<double> _BuildingFloor;
		
		private System.Nullable<double> _KitchenFloorArea;
		
		private System.Nullable<double> _LandArea;
		
		private System.Nullable<double> _LandFloorFactical;
		
		private System.Nullable<long> _Loading;
		
		private string _FullDescription;
		
		private System.Nullable<long> _EntranceToObject;
		
		private System.Nullable<bool> _AbilityForMachineryEntrance;
		
		private string _Documents;
		
		private System.Nullable<bool> _Prepayment;
		
		private string _Notes;
		
		private System.Nullable<long> _RemovalReason;
		
		private string _LivingPeoples;
		
		private string _LivingPeolplesDescription;
		
		private System.Nullable<long> _EntryLocation;
		
		private System.Nullable<double> _DistanceToCity;
		
		private System.Nullable<double> _DistanceToSea;
		
		private string _FootageExplanation;
		
		private string _Advertising1;
		
		private string _Advertising2;
		
		private string _Advertising3;
		
		private string _Advertising4;
		
		private string _Advertising5;
		
		private System.Nullable<long> _Relief;
		
		private System.Nullable<bool> _SpecialOffer;
		
		private string _SpecialOfferDescription;
		
		private System.Nullable<System.DateTime> _LeaseTime;
		
		private System.Nullable<bool> _Urgently;
		
		private System.Nullable<double> _BuildingReadyPercent;
		
		private System.Nullable<long> _HouseType;
		
		private System.Nullable<long> _FlatType;
		
		private System.Nullable<long> _BuildingType;
		
		private System.Nullable<bool> _Exchange;
		
		private string _ExchangeConditions;
		
		private System.Nullable<bool> _HousingStock;
		
		private System.Nullable<long> _Foundation;
		
		private System.Nullable<double> _Price;
		
		private System.Nullable<double> _PricePerUnit;
		
		private System.Nullable<double> _PricePerHundred;
		
		private System.Nullable<double> _OwnerPrice;
		
		private System.Nullable<int> _PricingZone;
		
		private System.Nullable<long> _HowToReach;
		
		private System.Nullable<double> _ElectricPower;
		
		private System.Nullable<int> _FloorNumber;
		
		private System.Nullable<int> _TotalFloors;
		
		private System.Nullable<long> _ContractorCompany;
		
		private string _RentOverpayment;
		
		private System.Nullable<double> _RealPrice;
		
		private string _MetricDescription;
		
		private string _SellConditions;
		
		private System.Nullable<bool> _Exclusive;
		
		private System.Nullable<double> _MultilistingBonus;
		
		private System.Nullable<long> _MultilistingBonusType;
		
		private System.Nullable<bool> _IsSetNumberAgency;
		
		private System.Nullable<long> _ContactPersonId;
		
		private System.Nullable<short> _ContactPhone;
		
		private System.Nullable<long> _ContactCompanyId;
		
		private EntityRef<EstateObject> _EstateObject;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnObjectIdChanging(long value);
    partial void OnObjectIdChanged();
    partial void OnRentPerDayChanging(System.Nullable<double> value);
    partial void OnRentPerDayChanged();
    partial void OnRentPerMonthChanging(System.Nullable<double> value);
    partial void OnRentPerMonthChanged();
    partial void OnSecurityChanging(string value);
    partial void OnSecurityChanged();
    partial void OnCurrencyChanging(System.Nullable<long> value);
    partial void OnCurrencyChanged();
    partial void OnPropertyTypeChanging(System.Nullable<long> value);
    partial void OnPropertyTypeChanged();
    partial void OnNegotiableChanging(System.Nullable<bool> value);
    partial void OnNegotiableChanged();
    partial void OnResidencePermitChanging(System.Nullable<bool> value);
    partial void OnResidencePermitChanged();
    partial void OnCelingHeightChanging(System.Nullable<double> value);
    partial void OnCelingHeightChanged();
    partial void OnAtticHeightChanging(System.Nullable<double> value);
    partial void OnAtticHeightChanged();
    partial void OnYardChanging(System.Nullable<long> value);
    partial void OnYardChanged();
    partial void OnOwnerShareChanging(System.Nullable<long> value);
    partial void OnOwnerShareChanged();
    partial void OnAddCommercialBuildingsChanging(string value);
    partial void OnAddCommercialBuildingsChanged();
    partial void OnActualUsableFloorAreaChanging(System.Nullable<double> value);
    partial void OnActualUsableFloorAreaChanged();
    partial void OnFirstFloorDownSetChanging(System.Nullable<double> value);
    partial void OnFirstFloorDownSetChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnMortgagePossibilityChanging(System.Nullable<bool> value);
    partial void OnMortgagePossibilityChanged();
    partial void OnMortgageBankChanging(System.Nullable<long> value);
    partial void OnMortgageBankChanged();
    partial void OnObjectUsageChanging(string value);
    partial void OnObjectUsageChanged();
    partial void OnNonResidenceUsageChanging(System.Nullable<bool> value);
    partial void OnNonResidenceUsageChanged();
    partial void OnBuildingClassChanging(System.Nullable<long> value);
    partial void OnBuildingClassChanged();
    partial void OnWindowsCountChanging(System.Nullable<int> value);
    partial void OnWindowsCountChanged();
    partial void OnPrescriptionsCountChanging(System.Nullable<int> value);
    partial void OnPrescriptionsCountChanged();
    partial void OnFamiliesCountChanging(System.Nullable<int> value);
    partial void OnFamiliesCountChanged();
    partial void OnOwnersCountChanging(System.Nullable<int> value);
    partial void OnOwnersCountChanged();
    partial void OnPhoneLinesCountChanging(System.Nullable<int> value);
    partial void OnPhoneLinesCountChanged();
    partial void OnLevelsCountChanging(System.Nullable<int> value);
    partial void OnLevelsCountChanged();
    partial void OnFacadeWindowsCountChanging(System.Nullable<int> value);
    partial void OnFacadeWindowsCountChanged();
    partial void OnUtilitiesRentExspensiveChanging(System.Nullable<bool> value);
    partial void OnUtilitiesRentExspensiveChanged();
    partial void OnShortDescriptionChanging(string value);
    partial void OnShortDescriptionChanged();
    partial void OnFloorMaterialChanging(string value);
    partial void OnFloorMaterialChanged();
    partial void OnBuildingMaterialChanging(string value);
    partial void OnBuildingMaterialChanged();
    partial void OnLandAssignmentChanging(string value);
    partial void OnLandAssignmentChanged();
    partial void OnObjectAssignmentChanging(string value);
    partial void OnObjectAssignmentChanged();
    partial void OnHasWeightsChanging(System.Nullable<bool> value);
    partial void OnHasWeightsChanged();
    partial void OnHasPhotosChanging(System.Nullable<bool> value);
    partial void OnHasPhotosChanged();
    partial void OnNewBuildingChanging(System.Nullable<bool> value);
    partial void OnNewBuildingChanged();
    partial void OnTotalAreaChanging(System.Nullable<double> value);
    partial void OnTotalAreaChanged();
    partial void OnLandmarkChanging(System.Nullable<long> value);
    partial void OnLandmarkChanged();
    partial void OnReleaseInfoChanging(string value);
    partial void OnReleaseInfoChanged();
    partial void OnHasParkingChanging(System.Nullable<bool> value);
    partial void OnHasParkingChanged();
    partial void OnBuildingPeriodChanging(System.Nullable<long> value);
    partial void OnBuildingPeriodChanged();
    partial void OnBigRoomFloorAreaChanging(System.Nullable<double> value);
    partial void OnBigRoomFloorAreaChanged();
    partial void OnBuildingFloorChanging(System.Nullable<double> value);
    partial void OnBuildingFloorChanged();
    partial void OnKitchenFloorAreaChanging(System.Nullable<double> value);
    partial void OnKitchenFloorAreaChanged();
    partial void OnLandAreaChanging(System.Nullable<double> value);
    partial void OnLandAreaChanged();
    partial void OnLandFloorFacticalChanging(System.Nullable<double> value);
    partial void OnLandFloorFacticalChanged();
    partial void OnLoadingChanging(System.Nullable<long> value);
    partial void OnLoadingChanged();
    partial void OnFullDescriptionChanging(string value);
    partial void OnFullDescriptionChanged();
    partial void OnEntranceToObjectChanging(System.Nullable<long> value);
    partial void OnEntranceToObjectChanged();
    partial void OnAbilityForMachineryEntranceChanging(System.Nullable<bool> value);
    partial void OnAbilityForMachineryEntranceChanged();
    partial void OnDocumentsChanging(string value);
    partial void OnDocumentsChanged();
    partial void OnPrepaymentChanging(System.Nullable<bool> value);
    partial void OnPrepaymentChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnRemovalReasonChanging(System.Nullable<long> value);
    partial void OnRemovalReasonChanged();
    partial void OnLivingPeoplesChanging(string value);
    partial void OnLivingPeoplesChanged();
    partial void OnLivingPeolplesDescriptionChanging(string value);
    partial void OnLivingPeolplesDescriptionChanged();
    partial void OnEntryLocationChanging(System.Nullable<long> value);
    partial void OnEntryLocationChanged();
    partial void OnDistanceToCityChanging(System.Nullable<double> value);
    partial void OnDistanceToCityChanged();
    partial void OnDistanceToSeaChanging(System.Nullable<double> value);
    partial void OnDistanceToSeaChanged();
    partial void OnFootageExplanationChanging(string value);
    partial void OnFootageExplanationChanged();
    partial void OnAdvertising1Changing(string value);
    partial void OnAdvertising1Changed();
    partial void OnAdvertising2Changing(string value);
    partial void OnAdvertising2Changed();
    partial void OnAdvertising3Changing(string value);
    partial void OnAdvertising3Changed();
    partial void OnAdvertising4Changing(string value);
    partial void OnAdvertising4Changed();
    partial void OnAdvertising5Changing(string value);
    partial void OnAdvertising5Changed();
    partial void OnReliefChanging(System.Nullable<long> value);
    partial void OnReliefChanged();
    partial void OnSpecialOfferChanging(System.Nullable<bool> value);
    partial void OnSpecialOfferChanged();
    partial void OnSpecialOfferDescriptionChanging(string value);
    partial void OnSpecialOfferDescriptionChanged();
    partial void OnLeaseTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLeaseTimeChanged();
    partial void OnUrgentlyChanging(System.Nullable<bool> value);
    partial void OnUrgentlyChanged();
    partial void OnBuildingReadyPercentChanging(System.Nullable<double> value);
    partial void OnBuildingReadyPercentChanged();
    partial void OnHouseTypeChanging(System.Nullable<long> value);
    partial void OnHouseTypeChanged();
    partial void OnFlatTypeChanging(System.Nullable<long> value);
    partial void OnFlatTypeChanged();
    partial void OnBuildingTypeChanging(System.Nullable<long> value);
    partial void OnBuildingTypeChanged();
    partial void OnExchangeChanging(System.Nullable<bool> value);
    partial void OnExchangeChanged();
    partial void OnExchangeConditionsChanging(string value);
    partial void OnExchangeConditionsChanged();
    partial void OnHousingStockChanging(System.Nullable<bool> value);
    partial void OnHousingStockChanged();
    partial void OnFoundationChanging(System.Nullable<long> value);
    partial void OnFoundationChanged();
    partial void OnPriceChanging(System.Nullable<double> value);
    partial void OnPriceChanged();
    partial void OnPricePerUnitChanging(System.Nullable<double> value);
    partial void OnPricePerUnitChanged();
    partial void OnPricePerHundredChanging(System.Nullable<double> value);
    partial void OnPricePerHundredChanged();
    partial void OnOwnerPriceChanging(System.Nullable<double> value);
    partial void OnOwnerPriceChanged();
    partial void OnPricingZoneChanging(System.Nullable<int> value);
    partial void OnPricingZoneChanged();
    partial void OnHowToReachChanging(System.Nullable<long> value);
    partial void OnHowToReachChanged();
    partial void OnElectricPowerChanging(System.Nullable<double> value);
    partial void OnElectricPowerChanged();
    partial void OnFloorNumberChanging(System.Nullable<int> value);
    partial void OnFloorNumberChanged();
    partial void OnTotalFloorsChanging(System.Nullable<int> value);
    partial void OnTotalFloorsChanged();
    partial void OnContractorCompanyChanging(System.Nullable<long> value);
    partial void OnContractorCompanyChanged();
    partial void OnRentOverpaymentChanging(string value);
    partial void OnRentOverpaymentChanged();
    partial void OnRealPriceChanging(System.Nullable<double> value);
    partial void OnRealPriceChanged();
    partial void OnMetricDescriptionChanging(string value);
    partial void OnMetricDescriptionChanged();
    partial void OnSellConditionsChanging(string value);
    partial void OnSellConditionsChanged();
    partial void OnExclusiveChanging(System.Nullable<bool> value);
    partial void OnExclusiveChanged();
    partial void OnMultilistingBonusChanging(System.Nullable<double> value);
    partial void OnMultilistingBonusChanged();
    partial void OnMultilistingBonusTypeChanging(System.Nullable<long> value);
    partial void OnMultilistingBonusTypeChanged();
    partial void OnIsSetNumberAgencyChanging(System.Nullable<bool> value);
    partial void OnIsSetNumberAgencyChanged();
    partial void OnContactPersonIdChanging(System.Nullable<long> value);
    partial void OnContactPersonIdChanged();
    partial void OnContactPhoneChanging(System.Nullable<short> value);
    partial void OnContactPhoneChanged();
    partial void OnContactCompanyIdChanging(System.Nullable<long> value);
    partial void OnContactCompanyIdChanged();
    #endregion
		
		public ObjectMainProperty()
		{
			this._EstateObject = default(EntityRef<EstateObject>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectId", DbType="BigInt NOT NULL")]
		public long ObjectId
		{
			get
			{
				return this._ObjectId;
			}
			set
			{
				if ((this._ObjectId != value))
				{
					if (this._EstateObject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectIdChanging(value);
					this.SendPropertyChanging();
					this._ObjectId = value;
					this.SendPropertyChanged("ObjectId");
					this.OnObjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RentPerDay", DbType="Float")]
		public System.Nullable<double> RentPerDay
		{
			get
			{
				return this._RentPerDay;
			}
			set
			{
				if ((this._RentPerDay != value))
				{
					this.OnRentPerDayChanging(value);
					this.SendPropertyChanging();
					this._RentPerDay = value;
					this.SendPropertyChanged("RentPerDay");
					this.OnRentPerDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RentPerMonth", DbType="Float")]
		public System.Nullable<double> RentPerMonth
		{
			get
			{
				return this._RentPerMonth;
			}
			set
			{
				if ((this._RentPerMonth != value))
				{
					this.OnRentPerMonthChanging(value);
					this.SendPropertyChanging();
					this._RentPerMonth = value;
					this.SendPropertyChanged("RentPerMonth");
					this.OnRentPerMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Security", DbType="NVarChar(255)")]
		public string Security
		{
			get
			{
				return this._Security;
			}
			set
			{
				if ((this._Security != value))
				{
					this.OnSecurityChanging(value);
					this.SendPropertyChanging();
					this._Security = value;
					this.SendPropertyChanged("Security");
					this.OnSecurityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="BigInt")]
		public System.Nullable<long> Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyType", DbType="BigInt")]
		public System.Nullable<long> PropertyType
		{
			get
			{
				return this._PropertyType;
			}
			set
			{
				if ((this._PropertyType != value))
				{
					this.OnPropertyTypeChanging(value);
					this.SendPropertyChanging();
					this._PropertyType = value;
					this.SendPropertyChanged("PropertyType");
					this.OnPropertyTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Negotiable", DbType="Bit")]
		public System.Nullable<bool> Negotiable
		{
			get
			{
				return this._Negotiable;
			}
			set
			{
				if ((this._Negotiable != value))
				{
					this.OnNegotiableChanging(value);
					this.SendPropertyChanging();
					this._Negotiable = value;
					this.SendPropertyChanged("Negotiable");
					this.OnNegotiableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResidencePermit", DbType="Bit")]
		public System.Nullable<bool> ResidencePermit
		{
			get
			{
				return this._ResidencePermit;
			}
			set
			{
				if ((this._ResidencePermit != value))
				{
					this.OnResidencePermitChanging(value);
					this.SendPropertyChanging();
					this._ResidencePermit = value;
					this.SendPropertyChanged("ResidencePermit");
					this.OnResidencePermitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CelingHeight", DbType="Float")]
		public System.Nullable<double> CelingHeight
		{
			get
			{
				return this._CelingHeight;
			}
			set
			{
				if ((this._CelingHeight != value))
				{
					this.OnCelingHeightChanging(value);
					this.SendPropertyChanging();
					this._CelingHeight = value;
					this.SendPropertyChanged("CelingHeight");
					this.OnCelingHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AtticHeight", DbType="Float")]
		public System.Nullable<double> AtticHeight
		{
			get
			{
				return this._AtticHeight;
			}
			set
			{
				if ((this._AtticHeight != value))
				{
					this.OnAtticHeightChanging(value);
					this.SendPropertyChanging();
					this._AtticHeight = value;
					this.SendPropertyChanged("AtticHeight");
					this.OnAtticHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Yard", DbType="BigInt")]
		public System.Nullable<long> Yard
		{
			get
			{
				return this._Yard;
			}
			set
			{
				if ((this._Yard != value))
				{
					this.OnYardChanging(value);
					this.SendPropertyChanging();
					this._Yard = value;
					this.SendPropertyChanged("Yard");
					this.OnYardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerShare", DbType="BigInt")]
		public System.Nullable<long> OwnerShare
		{
			get
			{
				return this._OwnerShare;
			}
			set
			{
				if ((this._OwnerShare != value))
				{
					this.OnOwnerShareChanging(value);
					this.SendPropertyChanging();
					this._OwnerShare = value;
					this.SendPropertyChanged("OwnerShare");
					this.OnOwnerShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddCommercialBuildings", DbType="NVarChar(255)")]
		public string AddCommercialBuildings
		{
			get
			{
				return this._AddCommercialBuildings;
			}
			set
			{
				if ((this._AddCommercialBuildings != value))
				{
					this.OnAddCommercialBuildingsChanging(value);
					this.SendPropertyChanging();
					this._AddCommercialBuildings = value;
					this.SendPropertyChanged("AddCommercialBuildings");
					this.OnAddCommercialBuildingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualUsableFloorArea", DbType="Float")]
		public System.Nullable<double> ActualUsableFloorArea
		{
			get
			{
				return this._ActualUsableFloorArea;
			}
			set
			{
				if ((this._ActualUsableFloorArea != value))
				{
					this.OnActualUsableFloorAreaChanging(value);
					this.SendPropertyChanging();
					this._ActualUsableFloorArea = value;
					this.SendPropertyChanged("ActualUsableFloorArea");
					this.OnActualUsableFloorAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstFloorDownSet", DbType="Float")]
		public System.Nullable<double> FirstFloorDownSet
		{
			get
			{
				return this._FirstFloorDownSet;
			}
			set
			{
				if ((this._FirstFloorDownSet != value))
				{
					this.OnFirstFloorDownSetChanging(value);
					this.SendPropertyChanging();
					this._FirstFloorDownSet = value;
					this.SendPropertyChanged("FirstFloorDownSet");
					this.OnFirstFloorDownSetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MortgagePossibility", DbType="Bit")]
		public System.Nullable<bool> MortgagePossibility
		{
			get
			{
				return this._MortgagePossibility;
			}
			set
			{
				if ((this._MortgagePossibility != value))
				{
					this.OnMortgagePossibilityChanging(value);
					this.SendPropertyChanging();
					this._MortgagePossibility = value;
					this.SendPropertyChanged("MortgagePossibility");
					this.OnMortgagePossibilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MortgageBank", DbType="BigInt")]
		public System.Nullable<long> MortgageBank
		{
			get
			{
				return this._MortgageBank;
			}
			set
			{
				if ((this._MortgageBank != value))
				{
					this.OnMortgageBankChanging(value);
					this.SendPropertyChanging();
					this._MortgageBank = value;
					this.SendPropertyChanged("MortgageBank");
					this.OnMortgageBankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectUsage", DbType="NVarChar(255)")]
		public string ObjectUsage
		{
			get
			{
				return this._ObjectUsage;
			}
			set
			{
				if ((this._ObjectUsage != value))
				{
					this.OnObjectUsageChanging(value);
					this.SendPropertyChanging();
					this._ObjectUsage = value;
					this.SendPropertyChanged("ObjectUsage");
					this.OnObjectUsageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NonResidenceUsage", DbType="Bit")]
		public System.Nullable<bool> NonResidenceUsage
		{
			get
			{
				return this._NonResidenceUsage;
			}
			set
			{
				if ((this._NonResidenceUsage != value))
				{
					this.OnNonResidenceUsageChanging(value);
					this.SendPropertyChanging();
					this._NonResidenceUsage = value;
					this.SendPropertyChanged("NonResidenceUsage");
					this.OnNonResidenceUsageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingClass", DbType="BigInt")]
		public System.Nullable<long> BuildingClass
		{
			get
			{
				return this._BuildingClass;
			}
			set
			{
				if ((this._BuildingClass != value))
				{
					this.OnBuildingClassChanging(value);
					this.SendPropertyChanging();
					this._BuildingClass = value;
					this.SendPropertyChanged("BuildingClass");
					this.OnBuildingClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WindowsCount", DbType="Int")]
		public System.Nullable<int> WindowsCount
		{
			get
			{
				return this._WindowsCount;
			}
			set
			{
				if ((this._WindowsCount != value))
				{
					this.OnWindowsCountChanging(value);
					this.SendPropertyChanging();
					this._WindowsCount = value;
					this.SendPropertyChanged("WindowsCount");
					this.OnWindowsCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrescriptionsCount", DbType="Int")]
		public System.Nullable<int> PrescriptionsCount
		{
			get
			{
				return this._PrescriptionsCount;
			}
			set
			{
				if ((this._PrescriptionsCount != value))
				{
					this.OnPrescriptionsCountChanging(value);
					this.SendPropertyChanging();
					this._PrescriptionsCount = value;
					this.SendPropertyChanged("PrescriptionsCount");
					this.OnPrescriptionsCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamiliesCount", DbType="Int")]
		public System.Nullable<int> FamiliesCount
		{
			get
			{
				return this._FamiliesCount;
			}
			set
			{
				if ((this._FamiliesCount != value))
				{
					this.OnFamiliesCountChanging(value);
					this.SendPropertyChanging();
					this._FamiliesCount = value;
					this.SendPropertyChanged("FamiliesCount");
					this.OnFamiliesCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnersCount", DbType="Int")]
		public System.Nullable<int> OwnersCount
		{
			get
			{
				return this._OwnersCount;
			}
			set
			{
				if ((this._OwnersCount != value))
				{
					this.OnOwnersCountChanging(value);
					this.SendPropertyChanging();
					this._OwnersCount = value;
					this.SendPropertyChanged("OwnersCount");
					this.OnOwnersCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneLinesCount", DbType="Int")]
		public System.Nullable<int> PhoneLinesCount
		{
			get
			{
				return this._PhoneLinesCount;
			}
			set
			{
				if ((this._PhoneLinesCount != value))
				{
					this.OnPhoneLinesCountChanging(value);
					this.SendPropertyChanging();
					this._PhoneLinesCount = value;
					this.SendPropertyChanged("PhoneLinesCount");
					this.OnPhoneLinesCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelsCount", DbType="Int")]
		public System.Nullable<int> LevelsCount
		{
			get
			{
				return this._LevelsCount;
			}
			set
			{
				if ((this._LevelsCount != value))
				{
					this.OnLevelsCountChanging(value);
					this.SendPropertyChanging();
					this._LevelsCount = value;
					this.SendPropertyChanged("LevelsCount");
					this.OnLevelsCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacadeWindowsCount", DbType="Int")]
		public System.Nullable<int> FacadeWindowsCount
		{
			get
			{
				return this._FacadeWindowsCount;
			}
			set
			{
				if ((this._FacadeWindowsCount != value))
				{
					this.OnFacadeWindowsCountChanging(value);
					this.SendPropertyChanging();
					this._FacadeWindowsCount = value;
					this.SendPropertyChanged("FacadeWindowsCount");
					this.OnFacadeWindowsCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UtilitiesRentExspensive", DbType="Bit")]
		public System.Nullable<bool> UtilitiesRentExspensive
		{
			get
			{
				return this._UtilitiesRentExspensive;
			}
			set
			{
				if ((this._UtilitiesRentExspensive != value))
				{
					this.OnUtilitiesRentExspensiveChanging(value);
					this.SendPropertyChanging();
					this._UtilitiesRentExspensive = value;
					this.SendPropertyChanged("UtilitiesRentExspensive");
					this.OnUtilitiesRentExspensiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortDescription", DbType="NVarChar(MAX)")]
		public string ShortDescription
		{
			get
			{
				return this._ShortDescription;
			}
			set
			{
				if ((this._ShortDescription != value))
				{
					this.OnShortDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ShortDescription = value;
					this.SendPropertyChanged("ShortDescription");
					this.OnShortDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FloorMaterial", DbType="NVarChar(255)")]
		public string FloorMaterial
		{
			get
			{
				return this._FloorMaterial;
			}
			set
			{
				if ((this._FloorMaterial != value))
				{
					this.OnFloorMaterialChanging(value);
					this.SendPropertyChanging();
					this._FloorMaterial = value;
					this.SendPropertyChanged("FloorMaterial");
					this.OnFloorMaterialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingMaterial", DbType="NVarChar(255)")]
		public string BuildingMaterial
		{
			get
			{
				return this._BuildingMaterial;
			}
			set
			{
				if ((this._BuildingMaterial != value))
				{
					this.OnBuildingMaterialChanging(value);
					this.SendPropertyChanging();
					this._BuildingMaterial = value;
					this.SendPropertyChanged("BuildingMaterial");
					this.OnBuildingMaterialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LandAssignment", DbType="NVarChar(255)")]
		public string LandAssignment
		{
			get
			{
				return this._LandAssignment;
			}
			set
			{
				if ((this._LandAssignment != value))
				{
					this.OnLandAssignmentChanging(value);
					this.SendPropertyChanging();
					this._LandAssignment = value;
					this.SendPropertyChanged("LandAssignment");
					this.OnLandAssignmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectAssignment", DbType="NVarChar(255)")]
		public string ObjectAssignment
		{
			get
			{
				return this._ObjectAssignment;
			}
			set
			{
				if ((this._ObjectAssignment != value))
				{
					this.OnObjectAssignmentChanging(value);
					this.SendPropertyChanging();
					this._ObjectAssignment = value;
					this.SendPropertyChanged("ObjectAssignment");
					this.OnObjectAssignmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasWeights", DbType="Bit")]
		public System.Nullable<bool> HasWeights
		{
			get
			{
				return this._HasWeights;
			}
			set
			{
				if ((this._HasWeights != value))
				{
					this.OnHasWeightsChanging(value);
					this.SendPropertyChanging();
					this._HasWeights = value;
					this.SendPropertyChanged("HasWeights");
					this.OnHasWeightsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasPhotos", DbType="Bit")]
		public System.Nullable<bool> HasPhotos
		{
			get
			{
				return this._HasPhotos;
			}
			set
			{
				if ((this._HasPhotos != value))
				{
					this.OnHasPhotosChanging(value);
					this.SendPropertyChanging();
					this._HasPhotos = value;
					this.SendPropertyChanged("HasPhotos");
					this.OnHasPhotosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewBuilding", DbType="Bit")]
		public System.Nullable<bool> NewBuilding
		{
			get
			{
				return this._NewBuilding;
			}
			set
			{
				if ((this._NewBuilding != value))
				{
					this.OnNewBuildingChanging(value);
					this.SendPropertyChanging();
					this._NewBuilding = value;
					this.SendPropertyChanged("NewBuilding");
					this.OnNewBuildingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalArea", DbType="Float")]
		public System.Nullable<double> TotalArea
		{
			get
			{
				return this._TotalArea;
			}
			set
			{
				if ((this._TotalArea != value))
				{
					this.OnTotalAreaChanging(value);
					this.SendPropertyChanging();
					this._TotalArea = value;
					this.SendPropertyChanged("TotalArea");
					this.OnTotalAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Landmark", DbType="BigInt")]
		public System.Nullable<long> Landmark
		{
			get
			{
				return this._Landmark;
			}
			set
			{
				if ((this._Landmark != value))
				{
					this.OnLandmarkChanging(value);
					this.SendPropertyChanging();
					this._Landmark = value;
					this.SendPropertyChanged("Landmark");
					this.OnLandmarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReleaseInfo", DbType="NVarChar(MAX)")]
		public string ReleaseInfo
		{
			get
			{
				return this._ReleaseInfo;
			}
			set
			{
				if ((this._ReleaseInfo != value))
				{
					this.OnReleaseInfoChanging(value);
					this.SendPropertyChanging();
					this._ReleaseInfo = value;
					this.SendPropertyChanged("ReleaseInfo");
					this.OnReleaseInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasParking", DbType="Bit")]
		public System.Nullable<bool> HasParking
		{
			get
			{
				return this._HasParking;
			}
			set
			{
				if ((this._HasParking != value))
				{
					this.OnHasParkingChanging(value);
					this.SendPropertyChanging();
					this._HasParking = value;
					this.SendPropertyChanged("HasParking");
					this.OnHasParkingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingPeriod", DbType="BigInt")]
		public System.Nullable<long> BuildingPeriod
		{
			get
			{
				return this._BuildingPeriod;
			}
			set
			{
				if ((this._BuildingPeriod != value))
				{
					this.OnBuildingPeriodChanging(value);
					this.SendPropertyChanging();
					this._BuildingPeriod = value;
					this.SendPropertyChanged("BuildingPeriod");
					this.OnBuildingPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BigRoomFloorArea", DbType="Float")]
		public System.Nullable<double> BigRoomFloorArea
		{
			get
			{
				return this._BigRoomFloorArea;
			}
			set
			{
				if ((this._BigRoomFloorArea != value))
				{
					this.OnBigRoomFloorAreaChanging(value);
					this.SendPropertyChanging();
					this._BigRoomFloorArea = value;
					this.SendPropertyChanged("BigRoomFloorArea");
					this.OnBigRoomFloorAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingFloor", DbType="Float")]
		public System.Nullable<double> BuildingFloor
		{
			get
			{
				return this._BuildingFloor;
			}
			set
			{
				if ((this._BuildingFloor != value))
				{
					this.OnBuildingFloorChanging(value);
					this.SendPropertyChanging();
					this._BuildingFloor = value;
					this.SendPropertyChanged("BuildingFloor");
					this.OnBuildingFloorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KitchenFloorArea", DbType="Float")]
		public System.Nullable<double> KitchenFloorArea
		{
			get
			{
				return this._KitchenFloorArea;
			}
			set
			{
				if ((this._KitchenFloorArea != value))
				{
					this.OnKitchenFloorAreaChanging(value);
					this.SendPropertyChanging();
					this._KitchenFloorArea = value;
					this.SendPropertyChanged("KitchenFloorArea");
					this.OnKitchenFloorAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LandArea", DbType="Float")]
		public System.Nullable<double> LandArea
		{
			get
			{
				return this._LandArea;
			}
			set
			{
				if ((this._LandArea != value))
				{
					this.OnLandAreaChanging(value);
					this.SendPropertyChanging();
					this._LandArea = value;
					this.SendPropertyChanged("LandArea");
					this.OnLandAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LandFloorFactical", DbType="Float")]
		public System.Nullable<double> LandFloorFactical
		{
			get
			{
				return this._LandFloorFactical;
			}
			set
			{
				if ((this._LandFloorFactical != value))
				{
					this.OnLandFloorFacticalChanging(value);
					this.SendPropertyChanging();
					this._LandFloorFactical = value;
					this.SendPropertyChanged("LandFloorFactical");
					this.OnLandFloorFacticalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Loading", DbType="BigInt")]
		public System.Nullable<long> Loading
		{
			get
			{
				return this._Loading;
			}
			set
			{
				if ((this._Loading != value))
				{
					this.OnLoadingChanging(value);
					this.SendPropertyChanging();
					this._Loading = value;
					this.SendPropertyChanged("Loading");
					this.OnLoadingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullDescription", DbType="NVarChar(MAX)")]
		public string FullDescription
		{
			get
			{
				return this._FullDescription;
			}
			set
			{
				if ((this._FullDescription != value))
				{
					this.OnFullDescriptionChanging(value);
					this.SendPropertyChanging();
					this._FullDescription = value;
					this.SendPropertyChanged("FullDescription");
					this.OnFullDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntranceToObject", DbType="BigInt")]
		public System.Nullable<long> EntranceToObject
		{
			get
			{
				return this._EntranceToObject;
			}
			set
			{
				if ((this._EntranceToObject != value))
				{
					this.OnEntranceToObjectChanging(value);
					this.SendPropertyChanging();
					this._EntranceToObject = value;
					this.SendPropertyChanged("EntranceToObject");
					this.OnEntranceToObjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbilityForMachineryEntrance", DbType="Bit")]
		public System.Nullable<bool> AbilityForMachineryEntrance
		{
			get
			{
				return this._AbilityForMachineryEntrance;
			}
			set
			{
				if ((this._AbilityForMachineryEntrance != value))
				{
					this.OnAbilityForMachineryEntranceChanging(value);
					this.SendPropertyChanging();
					this._AbilityForMachineryEntrance = value;
					this.SendPropertyChanged("AbilityForMachineryEntrance");
					this.OnAbilityForMachineryEntranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Documents", DbType="NVarChar(MAX)")]
		public string Documents
		{
			get
			{
				return this._Documents;
			}
			set
			{
				if ((this._Documents != value))
				{
					this.OnDocumentsChanging(value);
					this.SendPropertyChanging();
					this._Documents = value;
					this.SendPropertyChanged("Documents");
					this.OnDocumentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prepayment", DbType="Bit")]
		public System.Nullable<bool> Prepayment
		{
			get
			{
				return this._Prepayment;
			}
			set
			{
				if ((this._Prepayment != value))
				{
					this.OnPrepaymentChanging(value);
					this.SendPropertyChanging();
					this._Prepayment = value;
					this.SendPropertyChanged("Prepayment");
					this.OnPrepaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemovalReason", DbType="BigInt")]
		public System.Nullable<long> RemovalReason
		{
			get
			{
				return this._RemovalReason;
			}
			set
			{
				if ((this._RemovalReason != value))
				{
					this.OnRemovalReasonChanging(value);
					this.SendPropertyChanging();
					this._RemovalReason = value;
					this.SendPropertyChanged("RemovalReason");
					this.OnRemovalReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LivingPeoples", DbType="NVarChar(255)")]
		public string LivingPeoples
		{
			get
			{
				return this._LivingPeoples;
			}
			set
			{
				if ((this._LivingPeoples != value))
				{
					this.OnLivingPeoplesChanging(value);
					this.SendPropertyChanging();
					this._LivingPeoples = value;
					this.SendPropertyChanged("LivingPeoples");
					this.OnLivingPeoplesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LivingPeolplesDescription", DbType="NVarChar(MAX)")]
		public string LivingPeolplesDescription
		{
			get
			{
				return this._LivingPeolplesDescription;
			}
			set
			{
				if ((this._LivingPeolplesDescription != value))
				{
					this.OnLivingPeolplesDescriptionChanging(value);
					this.SendPropertyChanging();
					this._LivingPeolplesDescription = value;
					this.SendPropertyChanged("LivingPeolplesDescription");
					this.OnLivingPeolplesDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryLocation", DbType="BigInt")]
		public System.Nullable<long> EntryLocation
		{
			get
			{
				return this._EntryLocation;
			}
			set
			{
				if ((this._EntryLocation != value))
				{
					this.OnEntryLocationChanging(value);
					this.SendPropertyChanging();
					this._EntryLocation = value;
					this.SendPropertyChanged("EntryLocation");
					this.OnEntryLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistanceToCity", DbType="Float")]
		public System.Nullable<double> DistanceToCity
		{
			get
			{
				return this._DistanceToCity;
			}
			set
			{
				if ((this._DistanceToCity != value))
				{
					this.OnDistanceToCityChanging(value);
					this.SendPropertyChanging();
					this._DistanceToCity = value;
					this.SendPropertyChanged("DistanceToCity");
					this.OnDistanceToCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistanceToSea", DbType="Float")]
		public System.Nullable<double> DistanceToSea
		{
			get
			{
				return this._DistanceToSea;
			}
			set
			{
				if ((this._DistanceToSea != value))
				{
					this.OnDistanceToSeaChanging(value);
					this.SendPropertyChanging();
					this._DistanceToSea = value;
					this.SendPropertyChanged("DistanceToSea");
					this.OnDistanceToSeaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FootageExplanation", DbType="NVarChar(MAX)")]
		public string FootageExplanation
		{
			get
			{
				return this._FootageExplanation;
			}
			set
			{
				if ((this._FootageExplanation != value))
				{
					this.OnFootageExplanationChanging(value);
					this.SendPropertyChanging();
					this._FootageExplanation = value;
					this.SendPropertyChanged("FootageExplanation");
					this.OnFootageExplanationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Advertising1", DbType="NVarChar(MAX)")]
		public string Advertising1
		{
			get
			{
				return this._Advertising1;
			}
			set
			{
				if ((this._Advertising1 != value))
				{
					this.OnAdvertising1Changing(value);
					this.SendPropertyChanging();
					this._Advertising1 = value;
					this.SendPropertyChanged("Advertising1");
					this.OnAdvertising1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Advertising2", DbType="NVarChar(MAX)")]
		public string Advertising2
		{
			get
			{
				return this._Advertising2;
			}
			set
			{
				if ((this._Advertising2 != value))
				{
					this.OnAdvertising2Changing(value);
					this.SendPropertyChanging();
					this._Advertising2 = value;
					this.SendPropertyChanged("Advertising2");
					this.OnAdvertising2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Advertising3", DbType="NVarChar(MAX)")]
		public string Advertising3
		{
			get
			{
				return this._Advertising3;
			}
			set
			{
				if ((this._Advertising3 != value))
				{
					this.OnAdvertising3Changing(value);
					this.SendPropertyChanging();
					this._Advertising3 = value;
					this.SendPropertyChanged("Advertising3");
					this.OnAdvertising3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Advertising4", DbType="NVarChar(MAX)")]
		public string Advertising4
		{
			get
			{
				return this._Advertising4;
			}
			set
			{
				if ((this._Advertising4 != value))
				{
					this.OnAdvertising4Changing(value);
					this.SendPropertyChanging();
					this._Advertising4 = value;
					this.SendPropertyChanged("Advertising4");
					this.OnAdvertising4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Advertising5", DbType="NVarChar(MAX)")]
		public string Advertising5
		{
			get
			{
				return this._Advertising5;
			}
			set
			{
				if ((this._Advertising5 != value))
				{
					this.OnAdvertising5Changing(value);
					this.SendPropertyChanging();
					this._Advertising5 = value;
					this.SendPropertyChanged("Advertising5");
					this.OnAdvertising5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Relief", DbType="BigInt")]
		public System.Nullable<long> Relief
		{
			get
			{
				return this._Relief;
			}
			set
			{
				if ((this._Relief != value))
				{
					this.OnReliefChanging(value);
					this.SendPropertyChanging();
					this._Relief = value;
					this.SendPropertyChanged("Relief");
					this.OnReliefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialOffer", DbType="Bit")]
		public System.Nullable<bool> SpecialOffer
		{
			get
			{
				return this._SpecialOffer;
			}
			set
			{
				if ((this._SpecialOffer != value))
				{
					this.OnSpecialOfferChanging(value);
					this.SendPropertyChanging();
					this._SpecialOffer = value;
					this.SendPropertyChanged("SpecialOffer");
					this.OnSpecialOfferChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialOfferDescription", DbType="NVarChar(MAX)")]
		public string SpecialOfferDescription
		{
			get
			{
				return this._SpecialOfferDescription;
			}
			set
			{
				if ((this._SpecialOfferDescription != value))
				{
					this.OnSpecialOfferDescriptionChanging(value);
					this.SendPropertyChanging();
					this._SpecialOfferDescription = value;
					this.SendPropertyChanged("SpecialOfferDescription");
					this.OnSpecialOfferDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaseTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LeaseTime
		{
			get
			{
				return this._LeaseTime;
			}
			set
			{
				if ((this._LeaseTime != value))
				{
					this.OnLeaseTimeChanging(value);
					this.SendPropertyChanging();
					this._LeaseTime = value;
					this.SendPropertyChanged("LeaseTime");
					this.OnLeaseTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Urgently", DbType="Bit")]
		public System.Nullable<bool> Urgently
		{
			get
			{
				return this._Urgently;
			}
			set
			{
				if ((this._Urgently != value))
				{
					this.OnUrgentlyChanging(value);
					this.SendPropertyChanging();
					this._Urgently = value;
					this.SendPropertyChanged("Urgently");
					this.OnUrgentlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingReadyPercent", DbType="Float")]
		public System.Nullable<double> BuildingReadyPercent
		{
			get
			{
				return this._BuildingReadyPercent;
			}
			set
			{
				if ((this._BuildingReadyPercent != value))
				{
					this.OnBuildingReadyPercentChanging(value);
					this.SendPropertyChanging();
					this._BuildingReadyPercent = value;
					this.SendPropertyChanged("BuildingReadyPercent");
					this.OnBuildingReadyPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HouseType", DbType="BigInt")]
		public System.Nullable<long> HouseType
		{
			get
			{
				return this._HouseType;
			}
			set
			{
				if ((this._HouseType != value))
				{
					this.OnHouseTypeChanging(value);
					this.SendPropertyChanging();
					this._HouseType = value;
					this.SendPropertyChanged("HouseType");
					this.OnHouseTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlatType", DbType="BigInt")]
		public System.Nullable<long> FlatType
		{
			get
			{
				return this._FlatType;
			}
			set
			{
				if ((this._FlatType != value))
				{
					this.OnFlatTypeChanging(value);
					this.SendPropertyChanging();
					this._FlatType = value;
					this.SendPropertyChanged("FlatType");
					this.OnFlatTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingType", DbType="BigInt")]
		public System.Nullable<long> BuildingType
		{
			get
			{
				return this._BuildingType;
			}
			set
			{
				if ((this._BuildingType != value))
				{
					this.OnBuildingTypeChanging(value);
					this.SendPropertyChanging();
					this._BuildingType = value;
					this.SendPropertyChanged("BuildingType");
					this.OnBuildingTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exchange", DbType="Bit")]
		public System.Nullable<bool> Exchange
		{
			get
			{
				return this._Exchange;
			}
			set
			{
				if ((this._Exchange != value))
				{
					this.OnExchangeChanging(value);
					this.SendPropertyChanging();
					this._Exchange = value;
					this.SendPropertyChanged("Exchange");
					this.OnExchangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeConditions", DbType="NVarChar(MAX)")]
		public string ExchangeConditions
		{
			get
			{
				return this._ExchangeConditions;
			}
			set
			{
				if ((this._ExchangeConditions != value))
				{
					this.OnExchangeConditionsChanging(value);
					this.SendPropertyChanging();
					this._ExchangeConditions = value;
					this.SendPropertyChanged("ExchangeConditions");
					this.OnExchangeConditionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HousingStock", DbType="Bit")]
		public System.Nullable<bool> HousingStock
		{
			get
			{
				return this._HousingStock;
			}
			set
			{
				if ((this._HousingStock != value))
				{
					this.OnHousingStockChanging(value);
					this.SendPropertyChanging();
					this._HousingStock = value;
					this.SendPropertyChanged("HousingStock");
					this.OnHousingStockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Foundation", DbType="BigInt")]
		public System.Nullable<long> Foundation
		{
			get
			{
				return this._Foundation;
			}
			set
			{
				if ((this._Foundation != value))
				{
					this.OnFoundationChanging(value);
					this.SendPropertyChanging();
					this._Foundation = value;
					this.SendPropertyChanged("Foundation");
					this.OnFoundationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float")]
		public System.Nullable<double> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PricePerUnit", DbType="Float")]
		public System.Nullable<double> PricePerUnit
		{
			get
			{
				return this._PricePerUnit;
			}
			set
			{
				if ((this._PricePerUnit != value))
				{
					this.OnPricePerUnitChanging(value);
					this.SendPropertyChanging();
					this._PricePerUnit = value;
					this.SendPropertyChanged("PricePerUnit");
					this.OnPricePerUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PricePerHundred", DbType="Float")]
		public System.Nullable<double> PricePerHundred
		{
			get
			{
				return this._PricePerHundred;
			}
			set
			{
				if ((this._PricePerHundred != value))
				{
					this.OnPricePerHundredChanging(value);
					this.SendPropertyChanging();
					this._PricePerHundred = value;
					this.SendPropertyChanged("PricePerHundred");
					this.OnPricePerHundredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerPrice", DbType="Float")]
		public System.Nullable<double> OwnerPrice
		{
			get
			{
				return this._OwnerPrice;
			}
			set
			{
				if ((this._OwnerPrice != value))
				{
					this.OnOwnerPriceChanging(value);
					this.SendPropertyChanging();
					this._OwnerPrice = value;
					this.SendPropertyChanged("OwnerPrice");
					this.OnOwnerPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PricingZone", DbType="Int")]
		public System.Nullable<int> PricingZone
		{
			get
			{
				return this._PricingZone;
			}
			set
			{
				if ((this._PricingZone != value))
				{
					this.OnPricingZoneChanging(value);
					this.SendPropertyChanging();
					this._PricingZone = value;
					this.SendPropertyChanged("PricingZone");
					this.OnPricingZoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HowToReach", DbType="BigInt")]
		public System.Nullable<long> HowToReach
		{
			get
			{
				return this._HowToReach;
			}
			set
			{
				if ((this._HowToReach != value))
				{
					this.OnHowToReachChanging(value);
					this.SendPropertyChanging();
					this._HowToReach = value;
					this.SendPropertyChanged("HowToReach");
					this.OnHowToReachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElectricPower", DbType="Float")]
		public System.Nullable<double> ElectricPower
		{
			get
			{
				return this._ElectricPower;
			}
			set
			{
				if ((this._ElectricPower != value))
				{
					this.OnElectricPowerChanging(value);
					this.SendPropertyChanging();
					this._ElectricPower = value;
					this.SendPropertyChanged("ElectricPower");
					this.OnElectricPowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FloorNumber", DbType="Int")]
		public System.Nullable<int> FloorNumber
		{
			get
			{
				return this._FloorNumber;
			}
			set
			{
				if ((this._FloorNumber != value))
				{
					this.OnFloorNumberChanging(value);
					this.SendPropertyChanging();
					this._FloorNumber = value;
					this.SendPropertyChanged("FloorNumber");
					this.OnFloorNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalFloors", DbType="Int")]
		public System.Nullable<int> TotalFloors
		{
			get
			{
				return this._TotalFloors;
			}
			set
			{
				if ((this._TotalFloors != value))
				{
					this.OnTotalFloorsChanging(value);
					this.SendPropertyChanging();
					this._TotalFloors = value;
					this.SendPropertyChanged("TotalFloors");
					this.OnTotalFloorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractorCompany", DbType="BigInt")]
		public System.Nullable<long> ContractorCompany
		{
			get
			{
				return this._ContractorCompany;
			}
			set
			{
				if ((this._ContractorCompany != value))
				{
					this.OnContractorCompanyChanging(value);
					this.SendPropertyChanging();
					this._ContractorCompany = value;
					this.SendPropertyChanged("ContractorCompany");
					this.OnContractorCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RentOverpayment", DbType="NVarChar(MAX)")]
		public string RentOverpayment
		{
			get
			{
				return this._RentOverpayment;
			}
			set
			{
				if ((this._RentOverpayment != value))
				{
					this.OnRentOverpaymentChanging(value);
					this.SendPropertyChanging();
					this._RentOverpayment = value;
					this.SendPropertyChanged("RentOverpayment");
					this.OnRentOverpaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RealPrice", DbType="Float")]
		public System.Nullable<double> RealPrice
		{
			get
			{
				return this._RealPrice;
			}
			set
			{
				if ((this._RealPrice != value))
				{
					this.OnRealPriceChanging(value);
					this.SendPropertyChanging();
					this._RealPrice = value;
					this.SendPropertyChanged("RealPrice");
					this.OnRealPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetricDescription", DbType="NVarChar(4000)")]
		public string MetricDescription
		{
			get
			{
				return this._MetricDescription;
			}
			set
			{
				if ((this._MetricDescription != value))
				{
					this.OnMetricDescriptionChanging(value);
					this.SendPropertyChanging();
					this._MetricDescription = value;
					this.SendPropertyChanged("MetricDescription");
					this.OnMetricDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellConditions", DbType="NVarChar(4000)")]
		public string SellConditions
		{
			get
			{
				return this._SellConditions;
			}
			set
			{
				if ((this._SellConditions != value))
				{
					this.OnSellConditionsChanging(value);
					this.SendPropertyChanging();
					this._SellConditions = value;
					this.SendPropertyChanged("SellConditions");
					this.OnSellConditionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exclusive", DbType="Bit")]
		public System.Nullable<bool> Exclusive
		{
			get
			{
				return this._Exclusive;
			}
			set
			{
				if ((this._Exclusive != value))
				{
					this.OnExclusiveChanging(value);
					this.SendPropertyChanging();
					this._Exclusive = value;
					this.SendPropertyChanged("Exclusive");
					this.OnExclusiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MultilistingBonus", DbType="float NULL")]
		public System.Nullable<double> MultilistingBonus
		{
			get
			{
				return this._MultilistingBonus;
			}
			set
			{
				if ((this._MultilistingBonus != value))
				{
					this.OnMultilistingBonusChanging(value);
					this.SendPropertyChanging();
					this._MultilistingBonus = value;
					this.SendPropertyChanged("MultilistingBonus");
					this.OnMultilistingBonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MultilistingBonusType", DbType="bigint NULL")]
		public System.Nullable<long> MultilistingBonusType
		{
			get
			{
				return this._MultilistingBonusType;
			}
			set
			{
				if ((this._MultilistingBonusType != value))
				{
					this.OnMultilistingBonusTypeChanging(value);
					this.SendPropertyChanging();
					this._MultilistingBonusType = value;
					this.SendPropertyChanged("MultilistingBonusType");
					this.OnMultilistingBonusTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSetNumberAgency")]
		public System.Nullable<bool> IsSetNumberAgency
		{
			get
			{
				return this._IsSetNumberAgency;
			}
			set
			{
				if ((this._IsSetNumberAgency != value))
				{
					this.OnIsSetNumberAgencyChanging(value);
					this.SendPropertyChanging();
					this._IsSetNumberAgency = value;
					this.SendPropertyChanged("IsSetNumberAgency");
					this.OnIsSetNumberAgencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPersonId")]
		public System.Nullable<long> ContactPersonId
		{
			get
			{
				return this._ContactPersonId;
			}
			set
			{
				if ((this._ContactPersonId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactPersonIdChanging(value);
					this.SendPropertyChanging();
					this._ContactPersonId = value;
					this.SendPropertyChanged("ContactPersonId");
					this.OnContactPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPhone")]
		public System.Nullable<short> ContactPhone
		{
			get
			{
				return this._ContactPhone;
			}
			set
			{
				if ((this._ContactPhone != value))
				{
					this.OnContactPhoneChanging(value);
					this.SendPropertyChanging();
					this._ContactPhone = value;
					this.SendPropertyChanged("ContactPhone");
					this.OnContactPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactCompanyId")]
		public System.Nullable<long> ContactCompanyId
		{
			get
			{
				return this._ContactCompanyId;
			}
			set
			{
				if ((this._ContactCompanyId != value))
				{
					this.OnContactCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._ContactCompanyId = value;
					this.SendPropertyChanged("ContactCompanyId");
					this.OnContactCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstateObject_ObjectMainProperty", Storage="_EstateObject", ThisKey="ObjectId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EstateObject EstateObject
		{
			get
			{
				return this._EstateObject.Entity;
			}
			set
			{
				EstateObject previousValue = this._EstateObject.Entity;
				if (((previousValue != value) 
							|| (this._EstateObject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EstateObject.Entity = null;
						previousValue.ObjectMainProperties = null;
					}
					this._EstateObject.Entity = value;
					if ((value != null))
					{
						value.ObjectMainProperties = this;
						this._ObjectId = value.Id;
					}
					else
					{
						this._ObjectId = default(long);
					}
					this.SendPropertyChanged("EstateObject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ObjectMainProperty", Storage="_User", ThisKey="ContactPersonId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ObjectMainProperties.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ObjectMainProperties.Add(this);
						this._ContactPersonId = value.Id;
					}
					else
					{
						this._ContactPersonId = default(Nullable<long>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ObjectRatingProperties")]
	public partial class ObjectRatingProperty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _ObjectId;
		
		private string _Balcony;
		
		private string _EntranceDoor;
		
		private string _Kitchen;
		
		private string _KitchenDescription;
		
		private string _Ladder;
		
		private string _Loggia;
		
		private System.Nullable<long> _CommonState;
		
		private string _WindowsDescription;
		
		private string _UtilityRooms;
		
		private string _Floor;
		
		private string _Ceiling;
		
		private string _Furniture;
		
		private string _WC;
		
		private string _WCDescription;
		
		private System.Nullable<int> _Rating;
		
		private string _Walls;
		
		private string _Carpentry;
		
		private string _Vestibule;
		
		private System.Nullable<bool> _Multilisting;
		
		private System.Nullable<long> _BuildingClass;
		
		private EntityRef<EstateObject> _EstateObject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnObjectIdChanging(long value);
    partial void OnObjectIdChanged();
    partial void OnBalconyChanging(string value);
    partial void OnBalconyChanged();
    partial void OnEntranceDoorChanging(string value);
    partial void OnEntranceDoorChanged();
    partial void OnKitchenChanging(string value);
    partial void OnKitchenChanged();
    partial void OnKitchenDescriptionChanging(string value);
    partial void OnKitchenDescriptionChanged();
    partial void OnLadderChanging(string value);
    partial void OnLadderChanged();
    partial void OnLoggiaChanging(string value);
    partial void OnLoggiaChanged();
    partial void OnCommonStateChanging(System.Nullable<long> value);
    partial void OnCommonStateChanged();
    partial void OnWindowsDescriptionChanging(string value);
    partial void OnWindowsDescriptionChanged();
    partial void OnUtilityRoomsChanging(string value);
    partial void OnUtilityRoomsChanged();
    partial void OnFloorChanging(string value);
    partial void OnFloorChanged();
    partial void OnCeilingChanging(string value);
    partial void OnCeilingChanged();
    partial void OnFurnitureChanging(string value);
    partial void OnFurnitureChanged();
    partial void OnWCChanging(string value);
    partial void OnWCChanged();
    partial void OnWCDescriptionChanging(string value);
    partial void OnWCDescriptionChanged();
    partial void OnRatingChanging(System.Nullable<int> value);
    partial void OnRatingChanged();
    partial void OnWallsChanging(string value);
    partial void OnWallsChanged();
    partial void OnCarpentryChanging(string value);
    partial void OnCarpentryChanged();
    partial void OnVestibuleChanging(string value);
    partial void OnVestibuleChanged();
    partial void OnMultilistingChanging(System.Nullable<bool> value);
    partial void OnMultilistingChanged();
    partial void OnBuildingClassChanging(System.Nullable<long> value);
    partial void OnBuildingClassChanged();
    #endregion
		
		public ObjectRatingProperty()
		{
			this._EstateObject = default(EntityRef<EstateObject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectId", DbType="BigInt NOT NULL")]
		public long ObjectId
		{
			get
			{
				return this._ObjectId;
			}
			set
			{
				if ((this._ObjectId != value))
				{
					if (this._EstateObject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectIdChanging(value);
					this.SendPropertyChanging();
					this._ObjectId = value;
					this.SendPropertyChanged("ObjectId");
					this.OnObjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balcony", DbType="NVarChar(255)")]
		public string Balcony
		{
			get
			{
				return this._Balcony;
			}
			set
			{
				if ((this._Balcony != value))
				{
					this.OnBalconyChanging(value);
					this.SendPropertyChanging();
					this._Balcony = value;
					this.SendPropertyChanged("Balcony");
					this.OnBalconyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntranceDoor", DbType="NVarChar(255)")]
		public string EntranceDoor
		{
			get
			{
				return this._EntranceDoor;
			}
			set
			{
				if ((this._EntranceDoor != value))
				{
					this.OnEntranceDoorChanging(value);
					this.SendPropertyChanging();
					this._EntranceDoor = value;
					this.SendPropertyChanged("EntranceDoor");
					this.OnEntranceDoorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kitchen", DbType="NVarChar(255)")]
		public string Kitchen
		{
			get
			{
				return this._Kitchen;
			}
			set
			{
				if ((this._Kitchen != value))
				{
					this.OnKitchenChanging(value);
					this.SendPropertyChanging();
					this._Kitchen = value;
					this.SendPropertyChanged("Kitchen");
					this.OnKitchenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KitchenDescription", DbType="NVarChar(MAX)")]
		public string KitchenDescription
		{
			get
			{
				return this._KitchenDescription;
			}
			set
			{
				if ((this._KitchenDescription != value))
				{
					this.OnKitchenDescriptionChanging(value);
					this.SendPropertyChanging();
					this._KitchenDescription = value;
					this.SendPropertyChanged("KitchenDescription");
					this.OnKitchenDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ladder", DbType="NVarChar(255)")]
		public string Ladder
		{
			get
			{
				return this._Ladder;
			}
			set
			{
				if ((this._Ladder != value))
				{
					this.OnLadderChanging(value);
					this.SendPropertyChanging();
					this._Ladder = value;
					this.SendPropertyChanged("Ladder");
					this.OnLadderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Loggia", DbType="NVarChar(255)")]
		public string Loggia
		{
			get
			{
				return this._Loggia;
			}
			set
			{
				if ((this._Loggia != value))
				{
					this.OnLoggiaChanging(value);
					this.SendPropertyChanging();
					this._Loggia = value;
					this.SendPropertyChanged("Loggia");
					this.OnLoggiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommonState", DbType="BigInt")]
		public System.Nullable<long> CommonState
		{
			get
			{
				return this._CommonState;
			}
			set
			{
				if ((this._CommonState != value))
				{
					this.OnCommonStateChanging(value);
					this.SendPropertyChanging();
					this._CommonState = value;
					this.SendPropertyChanged("CommonState");
					this.OnCommonStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WindowsDescription", DbType="NVarChar(MAX)")]
		public string WindowsDescription
		{
			get
			{
				return this._WindowsDescription;
			}
			set
			{
				if ((this._WindowsDescription != value))
				{
					this.OnWindowsDescriptionChanging(value);
					this.SendPropertyChanging();
					this._WindowsDescription = value;
					this.SendPropertyChanged("WindowsDescription");
					this.OnWindowsDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UtilityRooms", DbType="NVarChar(MAX)")]
		public string UtilityRooms
		{
			get
			{
				return this._UtilityRooms;
			}
			set
			{
				if ((this._UtilityRooms != value))
				{
					this.OnUtilityRoomsChanging(value);
					this.SendPropertyChanging();
					this._UtilityRooms = value;
					this.SendPropertyChanged("UtilityRooms");
					this.OnUtilityRoomsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Floor", DbType="NVarChar(255)")]
		public string Floor
		{
			get
			{
				return this._Floor;
			}
			set
			{
				if ((this._Floor != value))
				{
					this.OnFloorChanging(value);
					this.SendPropertyChanging();
					this._Floor = value;
					this.SendPropertyChanged("Floor");
					this.OnFloorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ceiling", DbType="NVarChar(255)")]
		public string Ceiling
		{
			get
			{
				return this._Ceiling;
			}
			set
			{
				if ((this._Ceiling != value))
				{
					this.OnCeilingChanging(value);
					this.SendPropertyChanging();
					this._Ceiling = value;
					this.SendPropertyChanged("Ceiling");
					this.OnCeilingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Furniture", DbType="NVarChar(255)")]
		public string Furniture
		{
			get
			{
				return this._Furniture;
			}
			set
			{
				if ((this._Furniture != value))
				{
					this.OnFurnitureChanging(value);
					this.SendPropertyChanging();
					this._Furniture = value;
					this.SendPropertyChanged("Furniture");
					this.OnFurnitureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WC", DbType="NVarChar(255)")]
		public string WC
		{
			get
			{
				return this._WC;
			}
			set
			{
				if ((this._WC != value))
				{
					this.OnWCChanging(value);
					this.SendPropertyChanging();
					this._WC = value;
					this.SendPropertyChanged("WC");
					this.OnWCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WCDescription", DbType="NVarChar(MAX)")]
		public string WCDescription
		{
			get
			{
				return this._WCDescription;
			}
			set
			{
				if ((this._WCDescription != value))
				{
					this.OnWCDescriptionChanging(value);
					this.SendPropertyChanging();
					this._WCDescription = value;
					this.SendPropertyChanged("WCDescription");
					this.OnWCDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="Int")]
		public System.Nullable<int> Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Walls", DbType="NVarChar(255)")]
		public string Walls
		{
			get
			{
				return this._Walls;
			}
			set
			{
				if ((this._Walls != value))
				{
					this.OnWallsChanging(value);
					this.SendPropertyChanging();
					this._Walls = value;
					this.SendPropertyChanged("Walls");
					this.OnWallsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Carpentry", DbType="NVarChar(255)")]
		public string Carpentry
		{
			get
			{
				return this._Carpentry;
			}
			set
			{
				if ((this._Carpentry != value))
				{
					this.OnCarpentryChanging(value);
					this.SendPropertyChanging();
					this._Carpentry = value;
					this.SendPropertyChanged("Carpentry");
					this.OnCarpentryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vestibule", DbType="NVarChar(255)")]
		public string Vestibule
		{
			get
			{
				return this._Vestibule;
			}
			set
			{
				if ((this._Vestibule != value))
				{
					this.OnVestibuleChanging(value);
					this.SendPropertyChanging();
					this._Vestibule = value;
					this.SendPropertyChanged("Vestibule");
					this.OnVestibuleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Multilisting", DbType="Bit")]
		public System.Nullable<bool> Multilisting
		{
			get
			{
				return this._Multilisting;
			}
			set
			{
				if ((this._Multilisting != value))
				{
					this.OnMultilistingChanging(value);
					this.SendPropertyChanging();
					this._Multilisting = value;
					this.SendPropertyChanged("Multilisting");
					this.OnMultilistingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingClass", DbType="BigInt")]
		public System.Nullable<long> BuildingClass
		{
			get
			{
				return this._BuildingClass;
			}
			set
			{
				if ((this._BuildingClass != value))
				{
					this.OnBuildingClassChanging(value);
					this.SendPropertyChanging();
					this._BuildingClass = value;
					this.SendPropertyChanged("BuildingClass");
					this.OnBuildingClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstateObject_ObjectRatingProperty", Storage="_EstateObject", ThisKey="ObjectId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EstateObject EstateObject
		{
			get
			{
				return this._EstateObject.Entity;
			}
			set
			{
				EstateObject previousValue = this._EstateObject.Entity;
				if (((previousValue != value) 
							|| (this._EstateObject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EstateObject.Entity = null;
						previousValue.ObjectRatingProperties = null;
					}
					this._EstateObject.Entity = value;
					if ((value != null))
					{
						value.ObjectRatingProperties = this;
						this._ObjectId = value.Id;
					}
					else
					{
						this._ObjectId = default(long);
					}
					this.SendPropertyChanged("EstateObject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Addresses")]
	public partial class Address : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _ObjectId;
		
		private System.Nullable<long> _CountryId;
		
		private System.Nullable<long> _RegionId;
		
		private System.Nullable<long> _CityId;
		
		private System.Nullable<long> _RegionDistrictId;
		
		private System.Nullable<long> _CityDistrictId;
		
		private System.Nullable<long> _DistrictResidentialAreaId;
		
		private System.Nullable<long> _StreetId;
		
		private string _House;
		
		private string _Block;
		
		private string _Flat;
		
		private string _Land;
		
		private System.Nullable<double> _Latitude;
		
		private System.Nullable<double> _Logitude;
		
		private EntityRef<GeoCity> _GeoCity;
		
		private EntityRef<GeoCountry> _GeoCountry;
		
		private EntityRef<GeoRegionDistrict> _GeoRegionDistrict;
		
		private EntityRef<GeoRegion> _GeoRegion;
		
		private EntityRef<GeoStreet> _GeoStreet;
		
		private EntityRef<EstateObject> _EstateObject;
		
		private EntityRef<GeoResidentialArea> _GeoResidentialArea;
		
		private EntityRef<GeoDistrict> _GeoDistrict;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnObjectIdChanging(long value);
    partial void OnObjectIdChanged();
    partial void OnCountryIdChanging(System.Nullable<long> value);
    partial void OnCountryIdChanged();
    partial void OnRegionIdChanging(System.Nullable<long> value);
    partial void OnRegionIdChanged();
    partial void OnCityIdChanging(System.Nullable<long> value);
    partial void OnCityIdChanged();
    partial void OnRegionDistrictIdChanging(System.Nullable<long> value);
    partial void OnRegionDistrictIdChanged();
    partial void OnCityDistrictIdChanging(System.Nullable<long> value);
    partial void OnCityDistrictIdChanged();
    partial void OnDistrictResidentialAreaIdChanging(System.Nullable<long> value);
    partial void OnDistrictResidentialAreaIdChanged();
    partial void OnStreetIdChanging(System.Nullable<long> value);
    partial void OnStreetIdChanged();
    partial void OnHouseChanging(string value);
    partial void OnHouseChanged();
    partial void OnBlockChanging(string value);
    partial void OnBlockChanged();
    partial void OnFlatChanging(string value);
    partial void OnFlatChanged();
    partial void OnLandChanging(string value);
    partial void OnLandChanged();
    partial void OnLatitudeChanging(System.Nullable<double> value);
    partial void OnLatitudeChanged();
    partial void OnLogitudeChanging(System.Nullable<double> value);
    partial void OnLogitudeChanged();
    #endregion
		
		public Address()
		{
			this._GeoCity = default(EntityRef<GeoCity>);
			this._GeoCountry = default(EntityRef<GeoCountry>);
			this._GeoRegionDistrict = default(EntityRef<GeoRegionDistrict>);
			this._GeoRegion = default(EntityRef<GeoRegion>);
			this._GeoStreet = default(EntityRef<GeoStreet>);
			this._EstateObject = default(EntityRef<EstateObject>);
			this._GeoResidentialArea = default(EntityRef<GeoResidentialArea>);
			this._GeoDistrict = default(EntityRef<GeoDistrict>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectId", DbType="BigInt NOT NULL")]
		public long ObjectId
		{
			get
			{
				return this._ObjectId;
			}
			set
			{
				if ((this._ObjectId != value))
				{
					if (this._EstateObject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectIdChanging(value);
					this.SendPropertyChanging();
					this._ObjectId = value;
					this.SendPropertyChanged("ObjectId");
					this.OnObjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="BigInt NULL")]
		public System.Nullable<long> CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					if (this._GeoCountry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionId", DbType="BigInt NULL")]
		public System.Nullable<long> RegionId
		{
			get
			{
				return this._RegionId;
			}
			set
			{
				if ((this._RegionId != value))
				{
					if (this._GeoRegion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegionIdChanging(value);
					this.SendPropertyChanging();
					this._RegionId = value;
					this.SendPropertyChanged("RegionId");
					this.OnRegionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityId", DbType="BigInt NULL")]
		public System.Nullable<long> CityId
		{
			get
			{
				return this._CityId;
			}
			set
			{
				if ((this._CityId != value))
				{
					if (this._GeoCity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCityIdChanging(value);
					this.SendPropertyChanging();
					this._CityId = value;
					this.SendPropertyChanged("CityId");
					this.OnCityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionDistrictId", DbType="BigInt NULL")]
		public System.Nullable<long> RegionDistrictId
		{
			get
			{
				return this._RegionDistrictId;
			}
			set
			{
				if ((this._RegionDistrictId != value))
				{
					if (this._GeoRegionDistrict.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegionDistrictIdChanging(value);
					this.SendPropertyChanging();
					this._RegionDistrictId = value;
					this.SendPropertyChanged("RegionDistrictId");
					this.OnRegionDistrictIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityDistrictId", DbType="BigInt NULL")]
		public System.Nullable<long> CityDistrictId
		{
			get
			{
				return this._CityDistrictId;
			}
			set
			{
				if ((this._CityDistrictId != value))
				{
					if (this._GeoDistrict.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCityDistrictIdChanging(value);
					this.SendPropertyChanging();
					this._CityDistrictId = value;
					this.SendPropertyChanged("CityDistrictId");
					this.OnCityDistrictIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictResidentialAreaId", DbType="BigInt NULL")]
		public System.Nullable<long> DistrictResidentialAreaId
		{
			get
			{
				return this._DistrictResidentialAreaId;
			}
			set
			{
				if ((this._DistrictResidentialAreaId != value))
				{
					if (this._GeoResidentialArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDistrictResidentialAreaIdChanging(value);
					this.SendPropertyChanging();
					this._DistrictResidentialAreaId = value;
					this.SendPropertyChanged("DistrictResidentialAreaId");
					this.OnDistrictResidentialAreaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreetId", DbType="BigInt NULL")]
		public System.Nullable<long> StreetId
		{
			get
			{
				return this._StreetId;
			}
			set
			{
				if ((this._StreetId != value))
				{
					if (this._GeoStreet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStreetIdChanging(value);
					this.SendPropertyChanging();
					this._StreetId = value;
					this.SendPropertyChanged("StreetId");
					this.OnStreetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_House", DbType="NVarChar(50)")]
		public string House
		{
			get
			{
				return this._House;
			}
			set
			{
				if ((this._House != value))
				{
					this.OnHouseChanging(value);
					this.SendPropertyChanging();
					this._House = value;
					this.SendPropertyChanged("House");
					this.OnHouseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Block", DbType="NVarChar(50)")]
		public string Block
		{
			get
			{
				return this._Block;
			}
			set
			{
				if ((this._Block != value))
				{
					this.OnBlockChanging(value);
					this.SendPropertyChanging();
					this._Block = value;
					this.SendPropertyChanged("Block");
					this.OnBlockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flat", DbType="NVarChar(50)")]
		public string Flat
		{
			get
			{
				return this._Flat;
			}
			set
			{
				if ((this._Flat != value))
				{
					this.OnFlatChanging(value);
					this.SendPropertyChanging();
					this._Flat = value;
					this.SendPropertyChanged("Flat");
					this.OnFlatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Land", DbType="NVarChar(50)")]
		public string Land
		{
			get
			{
				return this._Land;
			}
			set
			{
				if ((this._Land != value))
				{
					this.OnLandChanging(value);
					this.SendPropertyChanging();
					this._Land = value;
					this.SendPropertyChanged("Land");
					this.OnLandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float")]
		public System.Nullable<double> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logitude", DbType="Float")]
		public System.Nullable<double> Logitude
		{
			get
			{
				return this._Logitude;
			}
			set
			{
				if ((this._Logitude != value))
				{
					this.OnLogitudeChanging(value);
					this.SendPropertyChanging();
					this._Logitude = value;
					this.SendPropertyChanged("Logitude");
					this.OnLogitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoCity_Address", Storage="_GeoCity", ThisKey="CityId", OtherKey="Id", IsForeignKey=true)]
		public GeoCity GeoCity
		{
			get
			{
				return this._GeoCity.Entity;
			}
			set
			{
				GeoCity previousValue = this._GeoCity.Entity;
				if (((previousValue != value) 
							|| (this._GeoCity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GeoCity.Entity = null;
						previousValue.Addresses.Remove(this);
					}
					this._GeoCity.Entity = value;
					if ((value != null))
					{
						value.Addresses.Add(this);
						this._CityId = value.Id;
					}
					else
					{
						this._CityId = default(Nullable<long>);
					}
					this.SendPropertyChanged("GeoCity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoCountry_Address", Storage="_GeoCountry", ThisKey="CountryId", OtherKey="Id", IsForeignKey=true)]
		public GeoCountry GeoCountry
		{
			get
			{
				return this._GeoCountry.Entity;
			}
			set
			{
				GeoCountry previousValue = this._GeoCountry.Entity;
				if (((previousValue != value) 
							|| (this._GeoCountry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GeoCountry.Entity = null;
						previousValue.Addresses.Remove(this);
					}
					this._GeoCountry.Entity = value;
					if ((value != null))
					{
						value.Addresses.Add(this);
						this._CountryId = value.Id;
					}
					else
					{
						this._CountryId = default(Nullable<long>);
					}
					this.SendPropertyChanged("GeoCountry");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoRegionDistrict_Address", Storage="_GeoRegionDistrict", ThisKey="RegionDistrictId", OtherKey="Id", IsForeignKey=true)]
		public GeoRegionDistrict GeoRegionDistrict
		{
			get
			{
				return this._GeoRegionDistrict.Entity;
			}
			set
			{
				GeoRegionDistrict previousValue = this._GeoRegionDistrict.Entity;
				if (((previousValue != value) 
							|| (this._GeoRegionDistrict.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GeoRegionDistrict.Entity = null;
						previousValue.Addresses.Remove(this);
					}
					this._GeoRegionDistrict.Entity = value;
					if ((value != null))
					{
						value.Addresses.Add(this);
						this._RegionDistrictId = value.Id;
					}
					else
					{
						this._RegionDistrictId = default(Nullable<long>);
					}
					this.SendPropertyChanged("GeoRegionDistrict");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoRegion_Address", Storage="_GeoRegion", ThisKey="RegionId", OtherKey="Id", IsForeignKey=true)]
		public GeoRegion GeoRegion
		{
			get
			{
				return this._GeoRegion.Entity;
			}
			set
			{
				GeoRegion previousValue = this._GeoRegion.Entity;
				if (((previousValue != value) 
							|| (this._GeoRegion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GeoRegion.Entity = null;
						previousValue.Addresses.Remove(this);
					}
					this._GeoRegion.Entity = value;
					if ((value != null))
					{
						value.Addresses.Add(this);
						this._RegionId = value.Id;
					}
					else
					{
						this._RegionId = default(Nullable<long>);
					}
					this.SendPropertyChanged("GeoRegion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoStreet_Address", Storage="_GeoStreet", ThisKey="StreetId", OtherKey="Id", IsForeignKey=true)]
		public GeoStreet GeoStreet
		{
			get
			{
				return this._GeoStreet.Entity;
			}
			set
			{
				GeoStreet previousValue = this._GeoStreet.Entity;
				if (((previousValue != value) 
							|| (this._GeoStreet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GeoStreet.Entity = null;
						previousValue.Addresses.Remove(this);
					}
					this._GeoStreet.Entity = value;
					if ((value != null))
					{
						value.Addresses.Add(this);
						this._StreetId = value.Id;
					}
					else
					{
						this._StreetId = default(Nullable<long>);
					}
					this.SendPropertyChanged("GeoStreet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstateObject_Address", Storage="_EstateObject", ThisKey="ObjectId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EstateObject EstateObject
		{
			get
			{
				return this._EstateObject.Entity;
			}
			set
			{
				EstateObject previousValue = this._EstateObject.Entity;
				if (((previousValue != value) 
							|| (this._EstateObject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EstateObject.Entity = null;
						previousValue.Address = null;
					}
					this._EstateObject.Entity = value;
					if ((value != null))
					{
						value.Address = this;
						this._ObjectId = value.Id;
					}
					else
					{
						this._ObjectId = default(long);
					}
					this.SendPropertyChanged("EstateObject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoResidentialArea_Address", Storage="_GeoResidentialArea", ThisKey="DistrictResidentialAreaId", OtherKey="Id", IsForeignKey=true)]
		public GeoResidentialArea GeoResidentialArea
		{
			get
			{
				return this._GeoResidentialArea.Entity;
			}
			set
			{
				GeoResidentialArea previousValue = this._GeoResidentialArea.Entity;
				if (((previousValue != value) 
							|| (this._GeoResidentialArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GeoResidentialArea.Entity = null;
						previousValue.Addresses.Remove(this);
					}
					this._GeoResidentialArea.Entity = value;
					if ((value != null))
					{
						value.Addresses.Add(this);
						this._DistrictResidentialAreaId = value.Id;
					}
					else
					{
						this._DistrictResidentialAreaId = default(Nullable<long>);
					}
					this.SendPropertyChanged("GeoResidentialArea");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoDistrict_Address", Storage="_GeoDistrict", ThisKey="CityDistrictId", OtherKey="Id", IsForeignKey=true)]
		public GeoDistrict GeoDistrict
		{
			get
			{
				return this._GeoDistrict.Entity;
			}
			set
			{
				GeoDistrict previousValue = this._GeoDistrict.Entity;
				if (((previousValue != value) 
							|| (this._GeoDistrict.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GeoDistrict.Entity = null;
						previousValue.Addresses.Remove(this);
					}
					this._GeoDistrict.Entity = value;
					if ((value != null))
					{
						value.Addresses.Add(this);
						this._CityDistrictId = value.Id;
					}
					else
					{
						this._CityDistrictId = default(Nullable<long>);
					}
					this.SendPropertyChanged("GeoDistrict");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Clients")]
	public partial class Client : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _CompanyId;
		
		private string _Email;
		
		private string _Address;
		
		private System.Nullable<System.DateTime> _AgreementDate;
		
		private System.Nullable<System.DateTime> _AgreementEndDate;
		
		private System.Nullable<System.DateTime> _Birthday;
		
		private bool _Blacklisted;
		
		private string _Commision;
		
		private string _ICQ;
		
		private string _AgreementNumber;
		
		private bool _AgencyPayment;
		
		private string _Notes;
		
		private string _Phone;
		
		private short _AgreementType;
		
		private short _ClientType;
		
		private string _PaymentConditions;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _SurName;
		
		private long _PassportId;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private long _CreatedBy;
		
		private long _ModifiedBy;
		
		private EntitySet<ObjectClient> _ObjectClients;
		
		private EntitySet<EstateObject> _EstateObjects;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<Passport> _Passport;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCompanyIdChanging(long value);
    partial void OnCompanyIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnAgreementDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAgreementDateChanged();
    partial void OnAgreementEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAgreementEndDateChanged();
    partial void OnBirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthdayChanged();
    partial void OnBlacklistedChanging(bool value);
    partial void OnBlacklistedChanged();
    partial void OnCommisionChanging(string value);
    partial void OnCommisionChanged();
    partial void OnICQChanging(string value);
    partial void OnICQChanged();
    partial void OnAgreementNumberChanging(string value);
    partial void OnAgreementNumberChanged();
    partial void OnAgencyPaymentChanging(bool value);
    partial void OnAgencyPaymentChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnAgreementTypeChanging(short value);
    partial void OnAgreementTypeChanged();
    partial void OnClientTypeChanging(short value);
    partial void OnClientTypeChanged();
    partial void OnPaymentConditionsChanging(string value);
    partial void OnPaymentConditionsChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnSurNameChanging(string value);
    partial void OnSurNameChanged();
    partial void OnPassportIdChanging(long value);
    partial void OnPassportIdChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnCreatedByChanging(long value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(long value);
    partial void OnModifiedByChanged();
    #endregion
		
		public Client()
		{
			this._ObjectClients = new EntitySet<ObjectClient>(new Action<ObjectClient>(this.attach_ObjectClients), new Action<ObjectClient>(this.detach_ObjectClients));
			this._EstateObjects = new EntitySet<EstateObject>(new Action<EstateObject>(this.attach_EstateObjects), new Action<EstateObject>(this.detach_EstateObjects));
			this._Company = default(EntityRef<Company>);
			this._Passport = default(EntityRef<Passport>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgreementDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> AgreementDate
		{
			get
			{
				return this._AgreementDate;
			}
			set
			{
				if ((this._AgreementDate != value))
				{
					this.OnAgreementDateChanging(value);
					this.SendPropertyChanging();
					this._AgreementDate = value;
					this.SendPropertyChanged("AgreementDate");
					this.OnAgreementDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgreementEndDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> AgreementEndDate
		{
			get
			{
				return this._AgreementEndDate;
			}
			set
			{
				if ((this._AgreementEndDate != value))
				{
					this.OnAgreementEndDateChanging(value);
					this.SendPropertyChanging();
					this._AgreementEndDate = value;
					this.SendPropertyChanged("AgreementEndDate");
					this.OnAgreementEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="Date", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this.OnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._Birthday = value;
					this.SendPropertyChanged("Birthday");
					this.OnBirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Blacklisted", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Blacklisted
		{
			get
			{
				return this._Blacklisted;
			}
			set
			{
				if ((this._Blacklisted != value))
				{
					this.OnBlacklistedChanging(value);
					this.SendPropertyChanging();
					this._Blacklisted = value;
					this.SendPropertyChanged("Blacklisted");
					this.OnBlacklistedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commision", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string Commision
		{
			get
			{
				return this._Commision;
			}
			set
			{
				if ((this._Commision != value))
				{
					this.OnCommisionChanging(value);
					this.SendPropertyChanging();
					this._Commision = value;
					this.SendPropertyChanged("Commision");
					this.OnCommisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ICQ", DbType="NVarChar(255)", UpdateCheck=UpdateCheck.Never)]
		public string ICQ
		{
			get
			{
				return this._ICQ;
			}
			set
			{
				if ((this._ICQ != value))
				{
					this.OnICQChanging(value);
					this.SendPropertyChanging();
					this._ICQ = value;
					this.SendPropertyChanged("ICQ");
					this.OnICQChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgreementNumber", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string AgreementNumber
		{
			get
			{
				return this._AgreementNumber;
			}
			set
			{
				if ((this._AgreementNumber != value))
				{
					this.OnAgreementNumberChanging(value);
					this.SendPropertyChanging();
					this._AgreementNumber = value;
					this.SendPropertyChanged("AgreementNumber");
					this.OnAgreementNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgencyPayment", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AgencyPayment
		{
			get
			{
				return this._AgencyPayment;
			}
			set
			{
				if ((this._AgencyPayment != value))
				{
					this.OnAgencyPaymentChanging(value);
					this.SendPropertyChanging();
					this._AgencyPayment = value;
					this.SendPropertyChanged("AgencyPayment");
					this.OnAgencyPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(255) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgreementType", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short AgreementType
		{
			get
			{
				return this._AgreementType;
			}
			set
			{
				if ((this._AgreementType != value))
				{
					this.OnAgreementTypeChanging(value);
					this.SendPropertyChanging();
					this._AgreementType = value;
					this.SendPropertyChanged("AgreementType");
					this.OnAgreementTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientType", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short ClientType
		{
			get
			{
				return this._ClientType;
			}
			set
			{
				if ((this._ClientType != value))
				{
					this.OnClientTypeChanging(value);
					this.SendPropertyChanging();
					this._ClientType = value;
					this.SendPropertyChanged("ClientType");
					this.OnClientTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentConditions", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string PaymentConditions
		{
			get
			{
				return this._PaymentConditions;
			}
			set
			{
				if ((this._PaymentConditions != value))
				{
					this.OnPaymentConditionsChanging(value);
					this.SendPropertyChanging();
					this._PaymentConditions = value;
					this.SendPropertyChanged("PaymentConditions");
					this.OnPaymentConditionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurName", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string SurName
		{
			get
			{
				return this._SurName;
			}
			set
			{
				if ((this._SurName != value))
				{
					this.OnSurNameChanging(value);
					this.SendPropertyChanging();
					this._SurName = value;
					this.SendPropertyChanged("SurName");
					this.OnSurNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportId", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long PassportId
		{
			get
			{
				return this._PassportId;
			}
			set
			{
				if ((this._PassportId != value))
				{
					if (this._Passport.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPassportIdChanging(value);
					this.SendPropertyChanging();
					this._PassportId = value;
					this.SendPropertyChanged("PassportId");
					this.OnPassportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_ObjectClient", Storage="_ObjectClients", ThisKey="Id", OtherKey="ClientId")]
		public EntitySet<ObjectClient> ObjectClients
		{
			get
			{
				return this._ObjectClients;
			}
			set
			{
				this._ObjectClients.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_EstateObject", Storage="_EstateObjects", ThisKey="Id", OtherKey="ClientId")]
		public EntitySet<EstateObject> EstateObjects
		{
			get
			{
				return this._EstateObjects;
			}
			set
			{
				this._EstateObjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Client", Storage="_Company", ThisKey="CompanyId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Clients.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Clients.Add(this);
						this._CompanyId = value.Id;
					}
					else
					{
						this._CompanyId = default(long);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Passport_Client", Storage="_Passport", ThisKey="PassportId", OtherKey="Id", IsForeignKey=true)]
		public Passport Passport
		{
			get
			{
				return this._Passport.Entity;
			}
			set
			{
				Passport previousValue = this._Passport.Entity;
				if (((previousValue != value) 
							|| (this._Passport.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Passport.Entity = null;
						previousValue.Clients.Remove(this);
					}
					this._Passport.Entity = value;
					if ((value != null))
					{
						value.Clients.Add(this);
						this._PassportId = value.Id;
					}
					else
					{
						this._PassportId = default(long);
					}
					this.SendPropertyChanged("Passport");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ObjectClients(ObjectClient entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_ObjectClients(ObjectClient entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
		
		private void attach_EstateObjects(EstateObject entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_EstateObjects(EstateObject entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EstateObjects")]
	public partial class EstateObject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _UserId;
		
		private long _ClientId;
		
		private short _ObjectType;
		
		private short _Operation;
		
		private short _Status;
		
		private bool _Filled;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private long _CreatedBy;
		
		private long _ModifiedBy;
		
		private EntitySet<ObjectClient> _ObjectClients;
		
		private EntityRef<ObjectCommunication> _ObjectCommunications;
		
		private EntityRef<ObjectMainProperty> _ObjectMainProperties;
		
		private EntityRef<ObjectRatingProperty> _ObjectRatingProperties;
		
		private EntityRef<Address> _Address;
		
		private EntitySet<ObjectPriceChangement> _ObjectPriceChangements;
		
		private EntityRef<ObjectChangementProperty> _ObjectChangementProperties;
		
		private EntitySet<ObjectManagerNotification> _ObjectManagerNotifications;
		
		private EntitySet<SearchRequestObject> _SearchRequestObjects;
		
		private EntitySet<ObjectMedia> _ObjectMedias;
		
		private EntityRef<ObjectAdditionalProperty> _ObjectAdditionalProperties;
		
		private EntitySet<ObjectHistoryItem> _ObjectHistoryItems;
		
		private EntitySet<EstateObjectMatchedSearchRequest> _EstateObjectMatchedSearchRequests;
		
		private EntityRef<Client> _Client;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnClientIdChanging(long value);
    partial void OnClientIdChanged();
    partial void OnObjectTypeChanging(short value);
    partial void OnObjectTypeChanged();
    partial void OnOperationChanging(short value);
    partial void OnOperationChanged();
    partial void OnStatusChanging(short value);
    partial void OnStatusChanged();
    partial void OnFilledChanging(bool value);
    partial void OnFilledChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnCreatedByChanging(long value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(long value);
    partial void OnModifiedByChanged();
    #endregion
		
		public EstateObject()
		{
			this._ObjectClients = new EntitySet<ObjectClient>(new Action<ObjectClient>(this.attach_ObjectClients), new Action<ObjectClient>(this.detach_ObjectClients));
			this._ObjectCommunications = default(EntityRef<ObjectCommunication>);
			this._ObjectMainProperties = default(EntityRef<ObjectMainProperty>);
			this._ObjectRatingProperties = default(EntityRef<ObjectRatingProperty>);
			this._Address = default(EntityRef<Address>);
			this._ObjectPriceChangements = new EntitySet<ObjectPriceChangement>(new Action<ObjectPriceChangement>(this.attach_ObjectPriceChangements), new Action<ObjectPriceChangement>(this.detach_ObjectPriceChangements));
			this._ObjectChangementProperties = default(EntityRef<ObjectChangementProperty>);
			this._ObjectManagerNotifications = new EntitySet<ObjectManagerNotification>(new Action<ObjectManagerNotification>(this.attach_ObjectManagerNotifications), new Action<ObjectManagerNotification>(this.detach_ObjectManagerNotifications));
			this._SearchRequestObjects = new EntitySet<SearchRequestObject>(new Action<SearchRequestObject>(this.attach_SearchRequestObjects), new Action<SearchRequestObject>(this.detach_SearchRequestObjects));
			this._ObjectMedias = new EntitySet<ObjectMedia>(new Action<ObjectMedia>(this.attach_ObjectMedias), new Action<ObjectMedia>(this.detach_ObjectMedias));
			this._ObjectAdditionalProperties = default(EntityRef<ObjectAdditionalProperty>);
			this._ObjectHistoryItems = new EntitySet<ObjectHistoryItem>(new Action<ObjectHistoryItem>(this.attach_ObjectHistoryItems), new Action<ObjectHistoryItem>(this.detach_ObjectHistoryItems));
			this._EstateObjectMatchedSearchRequests = new EntitySet<EstateObjectMatchedSearchRequest>(new Action<EstateObjectMatchedSearchRequest>(this.attach_EstateObjectMatchedSearchRequests), new Action<EstateObjectMatchedSearchRequest>(this.detach_EstateObjectMatchedSearchRequests));
			this._Client = default(EntityRef<Client>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="BigInt NOT NULL")]
		public long ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClientIdChanging(value);
					this.SendPropertyChanging();
					this._ClientId = value;
					this.SendPropertyChanged("ClientId");
					this.OnClientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectType", DbType="SmallInt NOT NULL")]
		public short ObjectType
		{
			get
			{
				return this._ObjectType;
			}
			set
			{
				if ((this._ObjectType != value))
				{
					this.OnObjectTypeChanging(value);
					this.SendPropertyChanging();
					this._ObjectType = value;
					this.SendPropertyChanged("ObjectType");
					this.OnObjectTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Operation", DbType="SmallInt NOT NULL")]
		public short Operation
		{
			get
			{
				return this._Operation;
			}
			set
			{
				if ((this._Operation != value))
				{
					this.OnOperationChanging(value);
					this.SendPropertyChanging();
					this._Operation = value;
					this.SendPropertyChanged("Operation");
					this.OnOperationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt NOT NULL")]
		public short Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filled", DbType="Bit NOT NULL")]
		public bool Filled
		{
			get
			{
				return this._Filled;
			}
			set
			{
				if ((this._Filled != value))
				{
					this.OnFilledChanging(value);
					this.SendPropertyChanging();
					this._Filled = value;
					this.SendPropertyChanged("Filled");
					this.OnFilledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt NOT NULL")]
		public long CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt NOT NULL")]
		public long ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstateObject_ObjectClient", Storage="_ObjectClients", ThisKey="Id", OtherKey="ObjectId")]
		public EntitySet<ObjectClient> ObjectClients
		{
			get
			{
				return this._ObjectClients;
			}
			set
			{
				this._ObjectClients.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstateObject_ObjectCommunication", Storage="_ObjectCommunications", ThisKey="Id", OtherKey="ObjectId", IsUnique=true, IsForeignKey=false)]
		public ObjectCommunication ObjectCommunications
		{
			get
			{
				return this._ObjectCommunications.Entity;
			}
			set
			{
				ObjectCommunication previousValue = this._ObjectCommunications.Entity;
				if (((previousValue != value) 
							|| (this._ObjectCommunications.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ObjectCommunications.Entity = null;
						previousValue.EstateObject = null;
					}
					this._ObjectCommunications.Entity = value;
					if ((value != null))
					{
						value.EstateObject = this;
					}
					this.SendPropertyChanged("ObjectCommunications");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstateObject_ObjectMainProperty", Storage="_ObjectMainProperties", ThisKey="Id", OtherKey="ObjectId", IsUnique=true, IsForeignKey=false)]
		public ObjectMainProperty ObjectMainProperties
		{
			get
			{
				return this._ObjectMainProperties.Entity;
			}
			set
			{
				ObjectMainProperty previousValue = this._ObjectMainProperties.Entity;
				if (((previousValue != value) 
							|| (this._ObjectMainProperties.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ObjectMainProperties.Entity = null;
						previousValue.EstateObject = null;
					}
					this._ObjectMainProperties.Entity = value;
					if ((value != null))
					{
						value.EstateObject = this;
					}
					this.SendPropertyChanged("ObjectMainProperties");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstateObject_ObjectRatingProperty", Storage="_ObjectRatingProperties", ThisKey="Id", OtherKey="ObjectId", IsUnique=true, IsForeignKey=false)]
		public ObjectRatingProperty ObjectRatingProperties
		{
			get
			{
				return this._ObjectRatingProperties.Entity;
			}
			set
			{
				ObjectRatingProperty previousValue = this._ObjectRatingProperties.Entity;
				if (((previousValue != value) 
							|| (this._ObjectRatingProperties.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ObjectRatingProperties.Entity = null;
						previousValue.EstateObject = null;
					}
					this._ObjectRatingProperties.Entity = value;
					if ((value != null))
					{
						value.EstateObject = this;
					}
					this.SendPropertyChanged("ObjectRatingProperties");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstateObject_Address", Storage="_Address", ThisKey="Id", OtherKey="ObjectId", IsUnique=true, IsForeignKey=false)]
		public Address Address
		{
			get
			{
				return this._Address.Entity;
			}
			set
			{
				Address previousValue = this._Address.Entity;
				if (((previousValue != value) 
							|| (this._Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address.Entity = null;
						previousValue.EstateObject = null;
					}
					this._Address.Entity = value;
					if ((value != null))
					{
						value.EstateObject = this;
					}
					this.SendPropertyChanged("Address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstateObject_ObjectPriceChangement", Storage="_ObjectPriceChangements", ThisKey="Id", OtherKey="ObjectId")]
		public EntitySet<ObjectPriceChangement> ObjectPriceChangements
		{
			get
			{
				return this._ObjectPriceChangements;
			}
			set
			{
				this._ObjectPriceChangements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstateObject_ObjectChangementProperty", Storage="_ObjectChangementProperties", ThisKey="Id", OtherKey="ObjectId", IsUnique=true, IsForeignKey=false)]
		public ObjectChangementProperty ObjectChangementProperties
		{
			get
			{
				return this._ObjectChangementProperties.Entity;
			}
			set
			{
				ObjectChangementProperty previousValue = this._ObjectChangementProperties.Entity;
				if (((previousValue != value) 
							|| (this._ObjectChangementProperties.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ObjectChangementProperties.Entity = null;
						previousValue.EstateObject = null;
					}
					this._ObjectChangementProperties.Entity = value;
					if ((value != null))
					{
						value.EstateObject = this;
					}
					this.SendPropertyChanged("ObjectChangementProperties");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstateObject_ObjectManagerNotification", Storage="_ObjectManagerNotifications", ThisKey="Id", OtherKey="ObjectId")]
		public EntitySet<ObjectManagerNotification> ObjectManagerNotifications
		{
			get
			{
				return this._ObjectManagerNotifications;
			}
			set
			{
				this._ObjectManagerNotifications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstateObject_SearchRequestObject", Storage="_SearchRequestObjects", ThisKey="Id", OtherKey="EstateObjectId")]
		public EntitySet<SearchRequestObject> SearchRequestObjects
		{
			get
			{
				return this._SearchRequestObjects;
			}
			set
			{
				this._SearchRequestObjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstateObject_ObjectMedia", Storage="_ObjectMedias", ThisKey="Id", OtherKey="ObjectId")]
		public EntitySet<ObjectMedia> ObjectMedias
		{
			get
			{
				return this._ObjectMedias;
			}
			set
			{
				this._ObjectMedias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstateObject_ObjectAdditionalProperty", Storage="_ObjectAdditionalProperties", ThisKey="Id", OtherKey="ObjectId", IsUnique=true, IsForeignKey=false)]
		public ObjectAdditionalProperty ObjectAdditionalProperties
		{
			get
			{
				return this._ObjectAdditionalProperties.Entity;
			}
			set
			{
				ObjectAdditionalProperty previousValue = this._ObjectAdditionalProperties.Entity;
				if (((previousValue != value) 
							|| (this._ObjectAdditionalProperties.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ObjectAdditionalProperties.Entity = null;
						previousValue.EstateObject = null;
					}
					this._ObjectAdditionalProperties.Entity = value;
					if ((value != null))
					{
						value.EstateObject = this;
					}
					this.SendPropertyChanged("ObjectAdditionalProperties");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstateObject_ObjectHistoryItem", Storage="_ObjectHistoryItems", ThisKey="Id", OtherKey="ObjectId")]
		public EntitySet<ObjectHistoryItem> ObjectHistoryItems
		{
			get
			{
				return this._ObjectHistoryItems;
			}
			set
			{
				this._ObjectHistoryItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstateObject_EstateObjectMatchedSearchRequest", Storage="_EstateObjectMatchedSearchRequests", ThisKey="Id", OtherKey="ObjectId")]
		public EntitySet<EstateObjectMatchedSearchRequest> EstateObjectMatchedSearchRequests
		{
			get
			{
				return this._EstateObjectMatchedSearchRequests;
			}
			set
			{
				this._EstateObjectMatchedSearchRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_EstateObject", Storage="_Client", ThisKey="ClientId", OtherKey="Id", IsForeignKey=true, DeleteRule="SET DEFAULT")]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.EstateObjects.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.EstateObjects.Add(this);
						this._ClientId = value.Id;
					}
					else
					{
						this._ClientId = default(long);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_EstateObject", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.EstateObjects.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.EstateObjects.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ObjectClients(ObjectClient entity)
		{
			this.SendPropertyChanging();
			entity.EstateObject = this;
		}
		
		private void detach_ObjectClients(ObjectClient entity)
		{
			this.SendPropertyChanging();
			entity.EstateObject = null;
		}
		
		private void attach_ObjectPriceChangements(ObjectPriceChangement entity)
		{
			this.SendPropertyChanging();
			entity.EstateObject = this;
		}
		
		private void detach_ObjectPriceChangements(ObjectPriceChangement entity)
		{
			this.SendPropertyChanging();
			entity.EstateObject = null;
		}
		
		private void attach_ObjectManagerNotifications(ObjectManagerNotification entity)
		{
			this.SendPropertyChanging();
			entity.EstateObject = this;
		}
		
		private void detach_ObjectManagerNotifications(ObjectManagerNotification entity)
		{
			this.SendPropertyChanging();
			entity.EstateObject = null;
		}
		
		private void attach_SearchRequestObjects(SearchRequestObject entity)
		{
			this.SendPropertyChanging();
			entity.EstateObject = this;
		}
		
		private void detach_SearchRequestObjects(SearchRequestObject entity)
		{
			this.SendPropertyChanging();
			entity.EstateObject = null;
		}
		
		private void attach_ObjectMedias(ObjectMedia entity)
		{
			this.SendPropertyChanging();
			entity.EstateObject = this;
		}
		
		private void detach_ObjectMedias(ObjectMedia entity)
		{
			this.SendPropertyChanging();
			entity.EstateObject = null;
		}
		
		private void attach_ObjectHistoryItems(ObjectHistoryItem entity)
		{
			this.SendPropertyChanging();
			entity.EstateObject = this;
		}
		
		private void detach_ObjectHistoryItems(ObjectHistoryItem entity)
		{
			this.SendPropertyChanging();
			entity.EstateObject = null;
		}
		
		private void attach_EstateObjectMatchedSearchRequests(EstateObjectMatchedSearchRequest entity)
		{
			this.SendPropertyChanging();
			entity.EstateObject = this;
		}
		
		private void detach_EstateObjectMatchedSearchRequests(EstateObjectMatchedSearchRequest entity)
		{
			this.SendPropertyChanging();
			entity.EstateObject = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ObjectPriceChangements")]
	public partial class ObjectPriceChangement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _ObjectId;
		
		private System.Nullable<long> _Currency;
		
		private System.Nullable<double> _Value;
		
		private System.Nullable<System.DateTime> _DateChanged;
		
		private System.Nullable<long> _ChangedBy;
		
		private EntityRef<EstateObject> _EstateObject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnObjectIdChanging(long value);
    partial void OnObjectIdChanged();
    partial void OnCurrencyChanging(System.Nullable<long> value);
    partial void OnCurrencyChanged();
    partial void OnValueChanging(System.Nullable<double> value);
    partial void OnValueChanged();
    partial void OnDateChangedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChangedChanged();
    partial void OnChangedByChanging(System.Nullable<long> value);
    partial void OnChangedByChanged();
    #endregion
		
		public ObjectPriceChangement()
		{
			this._EstateObject = default(EntityRef<EstateObject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectId", DbType="BigInt NOT NULL")]
		public long ObjectId
		{
			get
			{
				return this._ObjectId;
			}
			set
			{
				if ((this._ObjectId != value))
				{
					if (this._EstateObject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectIdChanging(value);
					this.SendPropertyChanging();
					this._ObjectId = value;
					this.SendPropertyChanged("ObjectId");
					this.OnObjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="BigInt")]
		public System.Nullable<long> Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Float")]
		public System.Nullable<double> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateChanged", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateChanged
		{
			get
			{
				return this._DateChanged;
			}
			set
			{
				if ((this._DateChanged != value))
				{
					this.OnDateChangedChanging(value);
					this.SendPropertyChanging();
					this._DateChanged = value;
					this.SendPropertyChanged("DateChanged");
					this.OnDateChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedBy", DbType="BigInt")]
		public System.Nullable<long> ChangedBy
		{
			get
			{
				return this._ChangedBy;
			}
			set
			{
				if ((this._ChangedBy != value))
				{
					this.OnChangedByChanging(value);
					this.SendPropertyChanging();
					this._ChangedBy = value;
					this.SendPropertyChanged("ChangedBy");
					this.OnChangedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstateObject_ObjectPriceChangement", Storage="_EstateObject", ThisKey="ObjectId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EstateObject EstateObject
		{
			get
			{
				return this._EstateObject.Entity;
			}
			set
			{
				EstateObject previousValue = this._EstateObject.Entity;
				if (((previousValue != value) 
							|| (this._EstateObject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EstateObject.Entity = null;
						previousValue.ObjectPriceChangements.Remove(this);
					}
					this._EstateObject.Entity = value;
					if ((value != null))
					{
						value.ObjectPriceChangements.Add(this);
						this._ObjectId = value.Id;
					}
					else
					{
						this._ObjectId = default(long);
					}
					this.SendPropertyChanged("EstateObject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _CompanyId;
		
		private long _RoleId;
		
		private string _Login;
		
		private string _PasswordHash;
		
		private string _FirstName;
		
		private string _SurName;
		
		private string _LastName;
		
		private string _Phone;
		
		private string _Phone2;
		
		private string _Email;
		
		private string _ICQ;
		
		private string _Appointment;
		
		private string _PhotoUrl;
		
		private bool _Blocked;
		
		private bool _Activated;
		
		private string _CertificateNumber;
		
		private System.Nullable<System.DateTime> _CertificationDate;
		
		private System.Nullable<System.DateTime> _SeniorityStartDate;
		
		private System.Nullable<System.DateTime> _Birthdate;
		
		private long _PassportId;
		
		private System.Nullable<System.DateTime> _LastLogin;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private long _CreatedBy;
		
		private long _ModifiedBy;
		
		private int _Status;
		
		private string _AdditionalInformation;
		
		private string _PublicLoading;
		
		private System.Nullable<System.DateTime> _SeniorityEndDate;
		
		private short _Notifications;
		
		private EntitySet<Company> _OwnedCompanies;
		
		private EntitySet<AuditEvent> _AuditEvents;
		
		private EntitySet<ObjectMainProperty> _ObjectMainProperties;
		
		private EntitySet<EstateObject> _EstateObjects;
		
		private EntitySet<Comment> _Comments;
		
		private EntitySet<SearchRequest> _SearchRequests;
		
		private EntitySet<TrainingProgram> _TrainingPrograms;
		
		private EntitySet<Achievment> _Achievments;
		
		private EntitySet<Payment> _Payments;
		
		private EntitySet<ClientReview> _ClientReviews;
		
		private EntitySet<ServiceLogItem> _ProvidedServices;
		
		private EntitySet<ObjectHistoryItem> _ObjectHistoryItems;
		
		private EntitySet<EstateObjectMatchedSearchRequest> _EstateObjectMatchedSearchRequests;
		
		private EntitySet<SearchRequestObjectComment> _SearchRequestObjectComments;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<Passport> _Passport;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCompanyIdChanging(long value);
    partial void OnCompanyIdChanged();
    partial void OnRoleIdChanging(long value);
    partial void OnRoleIdChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnSurNameChanging(string value);
    partial void OnSurNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnPhone2Changing(string value);
    partial void OnPhone2Changed();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnICQChanging(string value);
    partial void OnICQChanged();
    partial void OnAppointmentChanging(string value);
    partial void OnAppointmentChanged();
    partial void OnPhotoUrlChanging(string value);
    partial void OnPhotoUrlChanged();
    partial void OnBlockedChanging(bool value);
    partial void OnBlockedChanged();
    partial void OnActivatedChanging(bool value);
    partial void OnActivatedChanged();
    partial void OnCertificateNumberChanging(string value);
    partial void OnCertificateNumberChanged();
    partial void OnCertificationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCertificationDateChanged();
    partial void OnSeniorityStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSeniorityStartDateChanged();
    partial void OnBirthdateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthdateChanged();
    partial void OnPassportIdChanging(long value);
    partial void OnPassportIdChanged();
    partial void OnLastLoginChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLoginChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnCreatedByChanging(long value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(long value);
    partial void OnModifiedByChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnAdditionalInformationChanging(string value);
    partial void OnAdditionalInformationChanged();
    partial void OnPublicLoadingChanging(string value);
    partial void OnPublicLoadingChanged();
    partial void OnCertificateEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCertificateEndDateChanged();
    partial void OnNotificationsChanging(short value);
    partial void OnNotificationsChanged();
    #endregion
		
		public User()
		{
			this._OwnedCompanies = new EntitySet<Company>(new Action<Company>(this.attach_OwnedCompanies), new Action<Company>(this.detach_OwnedCompanies));
			this._AuditEvents = new EntitySet<AuditEvent>(new Action<AuditEvent>(this.attach_AuditEvents), new Action<AuditEvent>(this.detach_AuditEvents));
			this._ObjectMainProperties = new EntitySet<ObjectMainProperty>(new Action<ObjectMainProperty>(this.attach_ObjectMainProperties), new Action<ObjectMainProperty>(this.detach_ObjectMainProperties));
			this._EstateObjects = new EntitySet<EstateObject>(new Action<EstateObject>(this.attach_EstateObjects), new Action<EstateObject>(this.detach_EstateObjects));
			this._Comments = new EntitySet<Comment>(new Action<Comment>(this.attach_Comments), new Action<Comment>(this.detach_Comments));
			this._SearchRequests = new EntitySet<SearchRequest>(new Action<SearchRequest>(this.attach_SearchRequests), new Action<SearchRequest>(this.detach_SearchRequests));
			this._TrainingPrograms = new EntitySet<TrainingProgram>(new Action<TrainingProgram>(this.attach_TrainingPrograms), new Action<TrainingProgram>(this.detach_TrainingPrograms));
			this._Achievments = new EntitySet<Achievment>(new Action<Achievment>(this.attach_Achievments), new Action<Achievment>(this.detach_Achievments));
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			this._ClientReviews = new EntitySet<ClientReview>(new Action<ClientReview>(this.attach_ClientReviews), new Action<ClientReview>(this.detach_ClientReviews));
			this._ProvidedServices = new EntitySet<ServiceLogItem>(new Action<ServiceLogItem>(this.attach_ProvidedServices), new Action<ServiceLogItem>(this.detach_ProvidedServices));
			this._ObjectHistoryItems = new EntitySet<ObjectHistoryItem>(new Action<ObjectHistoryItem>(this.attach_ObjectHistoryItems), new Action<ObjectHistoryItem>(this.detach_ObjectHistoryItems));
			this._EstateObjectMatchedSearchRequests = new EntitySet<EstateObjectMatchedSearchRequest>(new Action<EstateObjectMatchedSearchRequest>(this.attach_EstateObjectMatchedSearchRequests), new Action<EstateObjectMatchedSearchRequest>(this.detach_EstateObjectMatchedSearchRequests));
			this._SearchRequestObjectComments = new EntitySet<SearchRequestObjectComment>(new Action<SearchRequestObjectComment>(this.attach_SearchRequestObjectComments), new Action<SearchRequestObjectComment>(this.detach_SearchRequestObjectComments));
			this._Company = default(EntityRef<Company>);
			this._Passport = default(EntityRef<Passport>);
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="BigInt NOT NULL")]
		public long CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="BigInt NOT NULL")]
		public long RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PasswordHash
		{
			get
			{
				return this._PasswordHash;
			}
			set
			{
				if ((this._PasswordHash != value))
				{
					this.OnPasswordHashChanging(value);
					this.SendPropertyChanging();
					this._PasswordHash = value;
					this.SendPropertyChanged("PasswordHash");
					this.OnPasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SurName
		{
			get
			{
				return this._SurName;
			}
			set
			{
				if ((this._SurName != value))
				{
					this.OnSurNameChanging(value);
					this.SendPropertyChanging();
					this._SurName = value;
					this.SendPropertyChanged("SurName");
					this.OnSurNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone2", DbType="NVarChar(100)")]
		public string Phone2
		{
			get
			{
				return this._Phone2;
			}
			set
			{
				if ((this._Phone2 != value))
				{
					this.OnPhone2Changing(value);
					this.SendPropertyChanging();
					this._Phone2 = value;
					this.SendPropertyChanged("Phone2");
					this.OnPhone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ICQ", DbType="NVarChar(MAX)")]
		public string ICQ
		{
			get
			{
				return this._ICQ;
			}
			set
			{
				if ((this._ICQ != value))
				{
					this.OnICQChanging(value);
					this.SendPropertyChanging();
					this._ICQ = value;
					this.SendPropertyChanged("ICQ");
					this.OnICQChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Appointment", DbType="NVarChar(255)")]
		public string Appointment
		{
			get
			{
				return this._Appointment;
			}
			set
			{
				if ((this._Appointment != value))
				{
					this.OnAppointmentChanging(value);
					this.SendPropertyChanging();
					this._Appointment = value;
					this.SendPropertyChanged("Appointment");
					this.OnAppointmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoUrl", DbType="NVarChar(MAX)")]
		public string PhotoUrl
		{
			get
			{
				return this._PhotoUrl;
			}
			set
			{
				if ((this._PhotoUrl != value))
				{
					this.OnPhotoUrlChanging(value);
					this.SendPropertyChanging();
					this._PhotoUrl = value;
					this.SendPropertyChanged("PhotoUrl");
					this.OnPhotoUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Blocked", DbType="Bit NOT NULL")]
		public bool Blocked
		{
			get
			{
				return this._Blocked;
			}
			set
			{
				if ((this._Blocked != value))
				{
					this.OnBlockedChanging(value);
					this.SendPropertyChanging();
					this._Blocked = value;
					this.SendPropertyChanged("Blocked");
					this.OnBlockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activated", DbType="Bit NOT NULL")]
		public bool Activated
		{
			get
			{
				return this._Activated;
			}
			set
			{
				if ((this._Activated != value))
				{
					this.OnActivatedChanging(value);
					this.SendPropertyChanging();
					this._Activated = value;
					this.SendPropertyChanged("Activated");
					this.OnActivatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateNumber", DbType="NVarChar(MAX)")]
		public string CertificateNumber
		{
			get
			{
				return this._CertificateNumber;
			}
			set
			{
				if ((this._CertificateNumber != value))
				{
					this.OnCertificateNumberChanging(value);
					this.SendPropertyChanging();
					this._CertificateNumber = value;
					this.SendPropertyChanged("CertificateNumber");
					this.OnCertificateNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificationDate", DbType="Date")]
		public System.Nullable<System.DateTime> CertificationDate
		{
			get
			{
				return this._CertificationDate;
			}
			set
			{
				if ((this._CertificationDate != value))
				{
					this.OnCertificationDateChanging(value);
					this.SendPropertyChanging();
					this._CertificationDate = value;
					this.SendPropertyChanged("CertificationDate");
					this.OnCertificationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeniorityStartDate", DbType="Date")]
		public System.Nullable<System.DateTime> SeniorityStartDate
		{
			get
			{
				return this._SeniorityStartDate;
			}
			set
			{
				if ((this._SeniorityStartDate != value))
				{
					this.OnSeniorityStartDateChanging(value);
					this.SendPropertyChanging();
					this._SeniorityStartDate = value;
					this.SendPropertyChanged("SeniorityStartDate");
					this.OnSeniorityStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthdate", DbType="Date")]
		public System.Nullable<System.DateTime> Birthdate
		{
			get
			{
				return this._Birthdate;
			}
			set
			{
				if ((this._Birthdate != value))
				{
					this.OnBirthdateChanging(value);
					this.SendPropertyChanging();
					this._Birthdate = value;
					this.SendPropertyChanged("Birthdate");
					this.OnBirthdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportId", DbType="BigInt NOT NULL")]
		public long PassportId
		{
			get
			{
				return this._PassportId;
			}
			set
			{
				if ((this._PassportId != value))
				{
					if (this._Passport.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPassportIdChanging(value);
					this.SendPropertyChanging();
					this._PassportId = value;
					this.SendPropertyChanged("PassportId");
					this.OnPassportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLogin", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLogin
		{
			get
			{
				return this._LastLogin;
			}
			set
			{
				if ((this._LastLogin != value))
				{
					this.OnLastLoginChanging(value);
					this.SendPropertyChanging();
					this._LastLogin = value;
					this.SendPropertyChanged("LastLogin");
					this.OnLastLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt NOT NULL")]
		public long CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt NOT NULL")]
		public long ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalInformation", DbType="NVarChar(MAX)")]
		public string AdditionalInformation
		{
			get
			{
				return this._AdditionalInformation;
			}
			set
			{
				if ((this._AdditionalInformation != value))
				{
					this.OnAdditionalInformationChanging(value);
					this.SendPropertyChanging();
					this._AdditionalInformation = value;
					this.SendPropertyChanged("AdditionalInformation");
					this.OnAdditionalInformationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicLoading", DbType="NVarChar(MAX)")]
		public string PublicLoading
		{
			get
			{
				return this._PublicLoading;
			}
			set
			{
				if ((this._PublicLoading != value))
				{
					this.OnPublicLoadingChanging(value);
					this.SendPropertyChanging();
					this._PublicLoading = value;
					this.SendPropertyChanged("PublicLoading");
					this.OnPublicLoadingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeniorityEndDate", DbType="Date")]
		public System.Nullable<System.DateTime> CertificateEndDate
		{
			get
			{
				return this._SeniorityEndDate;
			}
			set
			{
				if ((this._SeniorityEndDate != value))
				{
					this.OnCertificateEndDateChanging(value);
					this.SendPropertyChanging();
					this._SeniorityEndDate = value;
					this.SendPropertyChanged("CertificateEndDate");
					this.OnCertificateEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notifications", DbType="smallint")]
		public short Notifications
		{
			get
			{
				return this._Notifications;
			}
			set
			{
				if ((this._Notifications != value))
				{
					this.OnNotificationsChanging(value);
					this.SendPropertyChanging();
					this._Notifications = value;
					this.SendPropertyChanged("Notifications");
					this.OnNotificationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Company", Storage="_OwnedCompanies", ThisKey="Id", OtherKey="DirectorId")]
		public EntitySet<Company> OwnedCompanies
		{
			get
			{
				return this._OwnedCompanies;
			}
			set
			{
				this._OwnedCompanies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_AuditEvent", Storage="_AuditEvents", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<AuditEvent> AuditEvents
		{
			get
			{
				return this._AuditEvents;
			}
			set
			{
				this._AuditEvents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ObjectMainProperty", Storage="_ObjectMainProperties", ThisKey="Id", OtherKey="ContactPersonId")]
		public EntitySet<ObjectMainProperty> ObjectMainProperties
		{
			get
			{
				return this._ObjectMainProperties;
			}
			set
			{
				this._ObjectMainProperties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_EstateObject", Storage="_EstateObjects", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<EstateObject> EstateObjects
		{
			get
			{
				return this._EstateObjects;
			}
			set
			{
				this._EstateObjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Comment", Storage="_Comments", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<Comment> Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				this._Comments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SearchRequest", Storage="_SearchRequests", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<SearchRequest> SearchRequests
		{
			get
			{
				return this._SearchRequests;
			}
			set
			{
				this._SearchRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TrainingProgram", Storage="_TrainingPrograms", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<TrainingProgram> TrainingPrograms
		{
			get
			{
				return this._TrainingPrograms;
			}
			set
			{
				this._TrainingPrograms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Achievment", Storage="_Achievments", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<Achievment> Achievments
		{
			get
			{
				return this._Achievments;
			}
			set
			{
				this._Achievments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Payment", Storage="_Payments", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ClientReview", Storage="_ClientReviews", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<ClientReview> ClientReviews
		{
			get
			{
				return this._ClientReviews;
			}
			set
			{
				this._ClientReviews.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ServiceLogItem", Storage="_ProvidedServices", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<ServiceLogItem> ProvidedServices
		{
			get
			{
				return this._ProvidedServices;
			}
			set
			{
				this._ProvidedServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ObjectHistoryItem", Storage="_ObjectHistoryItems", ThisKey="Id", OtherKey="RDVAgentId")]
		public EntitySet<ObjectHistoryItem> ObjectHistoryItems
		{
			get
			{
				return this._ObjectHistoryItems;
			}
			set
			{
				this._ObjectHistoryItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_EstateObjectMatchedSearchRequest", Storage="_EstateObjectMatchedSearchRequests", ThisKey="Id", OtherKey="RequestUserId")]
		public EntitySet<EstateObjectMatchedSearchRequest> EstateObjectMatchedSearchRequests
		{
			get
			{
				return this._EstateObjectMatchedSearchRequests;
			}
			set
			{
				this._EstateObjectMatchedSearchRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SearchRequestObjectComment", Storage="_SearchRequestObjectComments", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<SearchRequestObjectComment> SearchRequestObjectComments
		{
			get
			{
				return this._SearchRequestObjectComments;
			}
			set
			{
				this._SearchRequestObjectComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_User", Storage="_Company", ThisKey="CompanyId", OtherKey="Id", IsForeignKey=true, DeleteRule="SET DEFAULT")]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._CompanyId = value.Id;
					}
					else
					{
						this._CompanyId = default(long);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Passport_User", Storage="_Passport", ThisKey="PassportId", OtherKey="Id", IsForeignKey=true, DeleteRule="SET DEFAULT")]
		public Passport Passport
		{
			get
			{
				return this._Passport.Entity;
			}
			set
			{
				Passport previousValue = this._Passport.Entity;
				if (((previousValue != value) 
							|| (this._Passport.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Passport.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Passport.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._PassportId = value.Id;
					}
					else
					{
						this._PassportId = default(long);
					}
					this.SendPropertyChanged("Passport");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_User", Storage="_Role", ThisKey="RoleId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._RoleId = value.Id;
					}
					else
					{
						this._RoleId = default(long);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OwnedCompanies(Company entity)
		{
			this.SendPropertyChanging();
			entity.Director = this;
		}
		
		private void detach_OwnedCompanies(Company entity)
		{
			this.SendPropertyChanging();
			entity.Director = null;
		}
		
		private void attach_AuditEvents(AuditEvent entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_AuditEvents(AuditEvent entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ObjectMainProperties(ObjectMainProperty entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ObjectMainProperties(ObjectMainProperty entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_EstateObjects(EstateObject entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_EstateObjects(EstateObject entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_SearchRequests(SearchRequest entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_SearchRequests(SearchRequest entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_TrainingPrograms(TrainingProgram entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_TrainingPrograms(TrainingProgram entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Achievments(Achievment entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Achievments(Achievment entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ClientReviews(ClientReview entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ClientReviews(ClientReview entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ProvidedServices(ServiceLogItem entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ProvidedServices(ServiceLogItem entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ObjectHistoryItems(ObjectHistoryItem entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ObjectHistoryItems(ObjectHistoryItem entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_EstateObjectMatchedSearchRequests(EstateObjectMatchedSearchRequest entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_EstateObjectMatchedSearchRequests(EstateObjectMatchedSearchRequest entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_SearchRequestObjectComments(SearchRequestObjectComment entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_SearchRequestObjectComments(SearchRequestObjectComment entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ObjectChangementProperties")]
	public partial class ObjectChangementProperty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _ObjectId;
		
		private System.Nullable<double> _PriceChanging;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private System.Nullable<System.DateTime> _ViewDate;
		
		private System.Nullable<System.DateTime> _DateMoved;
		
		private System.Nullable<System.DateTime> _DateRegisted;
		
		private System.Nullable<System.DateTime> _DealDate;
		
		private System.Nullable<System.DateTime> _DelayToDate;
		
		private System.Nullable<System.DateTime> _PriceChanged;
		
		private System.Nullable<System.DateTime> _AdvanceDate;
		
		private long _CreatedBy;
		
		private long _ChangedBy;
		
		private long _StatusChangedBy;
		
		private EntityRef<EstateObject> _EstateObject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnObjectIdChanging(long value);
    partial void OnObjectIdChanged();
    partial void OnPriceChangingChanging(System.Nullable<double> value);
    partial void OnPriceChangingChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnViewDateChanging(System.Nullable<System.DateTime> value);
    partial void OnViewDateChanged();
    partial void OnDateMovedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateMovedChanged();
    partial void OnDateRegistedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateRegistedChanged();
    partial void OnDealDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDealDateChanged();
    partial void OnDelayToDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDelayToDateChanged();
    partial void OnPriceChangedChanging(System.Nullable<System.DateTime> value);
    partial void OnPriceChangedChanged();
    partial void OnAdvanceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAdvanceDateChanged();
    partial void OnCreatedByChanging(long value);
    partial void OnCreatedByChanged();
    partial void OnChangedByChanging(long value);
    partial void OnChangedByChanged();
    partial void OnStatusChangedByChanging(long value);
    partial void OnStatusChangedByChanged();
    #endregion
		
		public ObjectChangementProperty()
		{
			this._EstateObject = default(EntityRef<EstateObject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectId", DbType="BigInt NOT NULL")]
		public long ObjectId
		{
			get
			{
				return this._ObjectId;
			}
			set
			{
				if ((this._ObjectId != value))
				{
					if (this._EstateObject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectIdChanging(value);
					this.SendPropertyChanging();
					this._ObjectId = value;
					this.SendPropertyChanged("ObjectId");
					this.OnObjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceChanging", DbType="Float")]
		public System.Nullable<double> PriceChanging
		{
			get
			{
				return this._PriceChanging;
			}
			set
			{
				if ((this._PriceChanging != value))
				{
					this.OnPriceChangingChanging(value);
					this.SendPropertyChanging();
					this._PriceChanging = value;
					this.SendPropertyChanged("PriceChanging");
					this.OnPriceChangingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ViewDate
		{
			get
			{
				return this._ViewDate;
			}
			set
			{
				if ((this._ViewDate != value))
				{
					this.OnViewDateChanging(value);
					this.SendPropertyChanging();
					this._ViewDate = value;
					this.SendPropertyChanged("ViewDate");
					this.OnViewDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateMoved", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateMoved
		{
			get
			{
				return this._DateMoved;
			}
			set
			{
				if ((this._DateMoved != value))
				{
					this.OnDateMovedChanging(value);
					this.SendPropertyChanging();
					this._DateMoved = value;
					this.SendPropertyChanged("DateMoved");
					this.OnDateMovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateRegisted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateRegisted
		{
			get
			{
				return this._DateRegisted;
			}
			set
			{
				if ((this._DateRegisted != value))
				{
					this.OnDateRegistedChanging(value);
					this.SendPropertyChanging();
					this._DateRegisted = value;
					this.SendPropertyChanged("DateRegisted");
					this.OnDateRegistedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DealDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DealDate
		{
			get
			{
				return this._DealDate;
			}
			set
			{
				if ((this._DealDate != value))
				{
					this.OnDealDateChanging(value);
					this.SendPropertyChanging();
					this._DealDate = value;
					this.SendPropertyChanged("DealDate");
					this.OnDealDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelayToDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DelayToDate
		{
			get
			{
				return this._DelayToDate;
			}
			set
			{
				if ((this._DelayToDate != value))
				{
					this.OnDelayToDateChanging(value);
					this.SendPropertyChanging();
					this._DelayToDate = value;
					this.SendPropertyChanged("DelayToDate");
					this.OnDelayToDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceChanged", DbType="DateTime")]
		public System.Nullable<System.DateTime> PriceChanged
		{
			get
			{
				return this._PriceChanged;
			}
			set
			{
				if ((this._PriceChanged != value))
				{
					this.OnPriceChangedChanging(value);
					this.SendPropertyChanging();
					this._PriceChanged = value;
					this.SendPropertyChanged("PriceChanged");
					this.OnPriceChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvanceDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AdvanceDate
		{
			get
			{
				return this._AdvanceDate;
			}
			set
			{
				if ((this._AdvanceDate != value))
				{
					this.OnAdvanceDateChanging(value);
					this.SendPropertyChanging();
					this._AdvanceDate = value;
					this.SendPropertyChanged("AdvanceDate");
					this.OnAdvanceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt NOT NULL")]
		public long CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedBy", DbType="BigInt NOT NULL")]
		public long ChangedBy
		{
			get
			{
				return this._ChangedBy;
			}
			set
			{
				if ((this._ChangedBy != value))
				{
					this.OnChangedByChanging(value);
					this.SendPropertyChanging();
					this._ChangedBy = value;
					this.SendPropertyChanged("ChangedBy");
					this.OnChangedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusChangedBy", DbType="BigInt NOT NULL")]
		public long StatusChangedBy
		{
			get
			{
				return this._StatusChangedBy;
			}
			set
			{
				if ((this._StatusChangedBy != value))
				{
					this.OnStatusChangedByChanging(value);
					this.SendPropertyChanging();
					this._StatusChangedBy = value;
					this.SendPropertyChanged("StatusChangedBy");
					this.OnStatusChangedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstateObject_ObjectChangementProperty", Storage="_EstateObject", ThisKey="ObjectId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EstateObject EstateObject
		{
			get
			{
				return this._EstateObject.Entity;
			}
			set
			{
				EstateObject previousValue = this._EstateObject.Entity;
				if (((previousValue != value) 
							|| (this._EstateObject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EstateObject.Entity = null;
						previousValue.ObjectChangementProperties = null;
					}
					this._EstateObject.Entity = value;
					if ((value != null))
					{
						value.ObjectChangementProperties = this;
						this._ObjectId = value.Id;
					}
					else
					{
						this._ObjectId = default(long);
					}
					this.SendPropertyChanged("EstateObject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SMSNotificationMessages")]
	public partial class SMSNotificationMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Recipient;
		
		private string _Message;
		
		private bool _Sended;
		
		private System.Nullable<System.DateTime> _DateEnqueued;
		
		private System.Nullable<System.DateTime> _DateSended;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnRecipientChanging(string value);
    partial void OnRecipientChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnSendedChanging(bool value);
    partial void OnSendedChanged();
    partial void OnDateEnqueuedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEnqueuedChanged();
    partial void OnDateSendedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateSendedChanged();
    #endregion
		
		public SMSNotificationMessage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recipient", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Recipient
		{
			get
			{
				return this._Recipient;
			}
			set
			{
				if ((this._Recipient != value))
				{
					this.OnRecipientChanging(value);
					this.SendPropertyChanging();
					this._Recipient = value;
					this.SendPropertyChanged("Recipient");
					this.OnRecipientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sended", DbType="Bit NOT NULL")]
		public bool Sended
		{
			get
			{
				return this._Sended;
			}
			set
			{
				if ((this._Sended != value))
				{
					this.OnSendedChanging(value);
					this.SendPropertyChanging();
					this._Sended = value;
					this.SendPropertyChanged("Sended");
					this.OnSendedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnqueued", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEnqueued
		{
			get
			{
				return this._DateEnqueued;
			}
			set
			{
				if ((this._DateEnqueued != value))
				{
					this.OnDateEnqueuedChanging(value);
					this.SendPropertyChanging();
					this._DateEnqueued = value;
					this.SendPropertyChanged("DateEnqueued");
					this.OnDateEnqueuedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSended", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateSended
		{
			get
			{
				return this._DateSended;
			}
			set
			{
				if ((this._DateSended != value))
				{
					this.OnDateSendedChanging(value);
					this.SendPropertyChanging();
					this._DateSended = value;
					this.SendPropertyChanged("DateSended");
					this.OnDateSendedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ObjectManagerNotifications")]
	public partial class ObjectManagerNotification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _ObjectId;
		
		private short _NotificationType;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private EntityRef<EstateObject> _EstateObject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnObjectIdChanging(long value);
    partial void OnObjectIdChanged();
    partial void OnNotificationTypeChanging(short value);
    partial void OnNotificationTypeChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public ObjectManagerNotification()
		{
			this._EstateObject = default(EntityRef<EstateObject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectId", DbType="BigInt NOT NULL")]
		public long ObjectId
		{
			get
			{
				return this._ObjectId;
			}
			set
			{
				if ((this._ObjectId != value))
				{
					if (this._EstateObject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectIdChanging(value);
					this.SendPropertyChanging();
					this._ObjectId = value;
					this.SendPropertyChanged("ObjectId");
					this.OnObjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotificationType", DbType="SmallInt NOT NULL")]
		public short NotificationType
		{
			get
			{
				return this._NotificationType;
			}
			set
			{
				if ((this._NotificationType != value))
				{
					this.OnNotificationTypeChanging(value);
					this.SendPropertyChanging();
					this._NotificationType = value;
					this.SendPropertyChanged("NotificationType");
					this.OnNotificationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstateObject_ObjectManagerNotification", Storage="_EstateObject", ThisKey="ObjectId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EstateObject EstateObject
		{
			get
			{
				return this._EstateObject.Entity;
			}
			set
			{
				EstateObject previousValue = this._EstateObject.Entity;
				if (((previousValue != value) 
							|| (this._EstateObject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EstateObject.Entity = null;
						previousValue.ObjectManagerNotifications.Remove(this);
					}
					this._EstateObject.Entity = value;
					if ((value != null))
					{
						value.ObjectManagerNotifications.Add(this);
						this._ObjectId = value.Id;
					}
					else
					{
						this._ObjectId = default(long);
					}
					this.SendPropertyChanged("EstateObject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Settings")]
	public partial class Setting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private string _Title;
		
		private string _Description;
		
		private string _Value;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public Setting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(MAX)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Banners")]
	public partial class Banner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Title;
		
		private short _Location;
		
		private short _Type;
		
		private string _ObjectUrl;
		
		private string _LinkUrl;
		
		private int _Views;
		
		private int _Clicks;
		
		private int _ShowProbability;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnLocationChanging(short value);
    partial void OnLocationChanged();
    partial void OnTypeChanging(short value);
    partial void OnTypeChanged();
    partial void OnObjectUrlChanging(string value);
    partial void OnObjectUrlChanged();
    partial void OnLinkUrlChanging(string value);
    partial void OnLinkUrlChanged();
    partial void OnViewsChanging(int value);
    partial void OnViewsChanged();
    partial void OnClicksChanging(int value);
    partial void OnClicksChanged();
    partial void OnShowProbabilityChanging(int value);
    partial void OnShowProbabilityChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public Banner()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="SmallInt NOT NULL")]
		public short Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="SmallInt NOT NULL")]
		public short Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectUrl", DbType="NVarChar(MAX)")]
		public string ObjectUrl
		{
			get
			{
				return this._ObjectUrl;
			}
			set
			{
				if ((this._ObjectUrl != value))
				{
					this.OnObjectUrlChanging(value);
					this.SendPropertyChanging();
					this._ObjectUrl = value;
					this.SendPropertyChanged("ObjectUrl");
					this.OnObjectUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkUrl", DbType="NVarChar(MAX)")]
		public string LinkUrl
		{
			get
			{
				return this._LinkUrl;
			}
			set
			{
				if ((this._LinkUrl != value))
				{
					this.OnLinkUrlChanging(value);
					this.SendPropertyChanging();
					this._LinkUrl = value;
					this.SendPropertyChanged("LinkUrl");
					this.OnLinkUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Views", DbType="Int NOT NULL")]
		public int Views
		{
			get
			{
				return this._Views;
			}
			set
			{
				if ((this._Views != value))
				{
					this.OnViewsChanging(value);
					this.SendPropertyChanging();
					this._Views = value;
					this.SendPropertyChanged("Views");
					this.OnViewsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Clicks", DbType="Int NOT NULL")]
		public int Clicks
		{
			get
			{
				return this._Clicks;
			}
			set
			{
				if ((this._Clicks != value))
				{
					this.OnClicksChanging(value);
					this.SendPropertyChanging();
					this._Clicks = value;
					this.SendPropertyChanged("Clicks");
					this.OnClicksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowProbability", DbType="Int NOT NULL")]
		public int ShowProbability
		{
			get
			{
				return this._ShowProbability;
			}
			set
			{
				if ((this._ShowProbability != value))
				{
					this.OnShowProbabilityChanging(value);
					this.SendPropertyChanging();
					this._ShowProbability = value;
					this.SendPropertyChanged("ShowProbability");
					this.OnShowProbabilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GeoLandmarks")]
	public partial class GeoLandmark : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private long _CityId;
		
		private long _DistrictId;
		
		private long _AreaId;
		
		private long _StreetId;
		
		private System.Nullable<double> _Latitude;
		
		private System.Nullable<double> _Longitude;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private EntityRef<GeoCity> _GeoCity;
		
		private EntityRef<GeoStreet> _GeoStreet;
		
		private EntityRef<GeoResidentialArea> _GeoResidentialArea;
		
		private EntityRef<GeoDistrict> _GeoDistrict;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCityIdChanging(long value);
    partial void OnCityIdChanged();
    partial void OnDistrictIdChanging(long value);
    partial void OnDistrictIdChanged();
    partial void OnAreaIdChanging(long value);
    partial void OnAreaIdChanged();
    partial void OnStreetIdChanging(long value);
    partial void OnStreetIdChanged();
    partial void OnLatitudeChanging(System.Nullable<double> value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(System.Nullable<double> value);
    partial void OnLongitudeChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public GeoLandmark()
		{
			this._GeoCity = default(EntityRef<GeoCity>);
			this._GeoStreet = default(EntityRef<GeoStreet>);
			this._GeoResidentialArea = default(EntityRef<GeoResidentialArea>);
			this._GeoDistrict = default(EntityRef<GeoDistrict>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityId", DbType="BigInt NOT NULL")]
		public long CityId
		{
			get
			{
				return this._CityId;
			}
			set
			{
				if ((this._CityId != value))
				{
					if (this._GeoCity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCityIdChanging(value);
					this.SendPropertyChanging();
					this._CityId = value;
					this.SendPropertyChanged("CityId");
					this.OnCityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictId", DbType="BigInt NOT NULL")]
		public long DistrictId
		{
			get
			{
				return this._DistrictId;
			}
			set
			{
				if ((this._DistrictId != value))
				{
					if (this._GeoDistrict.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDistrictIdChanging(value);
					this.SendPropertyChanging();
					this._DistrictId = value;
					this.SendPropertyChanged("DistrictId");
					this.OnDistrictIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaId", DbType="BigInt NOT NULL")]
		public long AreaId
		{
			get
			{
				return this._AreaId;
			}
			set
			{
				if ((this._AreaId != value))
				{
					if (this._GeoResidentialArea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAreaIdChanging(value);
					this.SendPropertyChanging();
					this._AreaId = value;
					this.SendPropertyChanged("AreaId");
					this.OnAreaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreetId", DbType="BigInt NOT NULL")]
		public long StreetId
		{
			get
			{
				return this._StreetId;
			}
			set
			{
				if ((this._StreetId != value))
				{
					if (this._GeoStreet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStreetIdChanging(value);
					this.SendPropertyChanging();
					this._StreetId = value;
					this.SendPropertyChanged("StreetId");
					this.OnStreetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float")]
		public System.Nullable<double> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float")]
		public System.Nullable<double> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoCity_GeoLandmark", Storage="_GeoCity", ThisKey="CityId", OtherKey="Id", IsForeignKey=true)]
		public GeoCity GeoCity
		{
			get
			{
				return this._GeoCity.Entity;
			}
			set
			{
				GeoCity previousValue = this._GeoCity.Entity;
				if (((previousValue != value) 
							|| (this._GeoCity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GeoCity.Entity = null;
						previousValue.GeoLandmarks.Remove(this);
					}
					this._GeoCity.Entity = value;
					if ((value != null))
					{
						value.GeoLandmarks.Add(this);
						this._CityId = value.Id;
					}
					else
					{
						this._CityId = default(long);
					}
					this.SendPropertyChanged("GeoCity");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoStreet_GeoLandmark", Storage="_GeoStreet", ThisKey="StreetId", OtherKey="Id", IsForeignKey=true)]
		public GeoStreet GeoStreet
		{
			get
			{
				return this._GeoStreet.Entity;
			}
			set
			{
				GeoStreet previousValue = this._GeoStreet.Entity;
				if (((previousValue != value) 
							|| (this._GeoStreet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GeoStreet.Entity = null;
						previousValue.GeoLandmarks.Remove(this);
					}
					this._GeoStreet.Entity = value;
					if ((value != null))
					{
						value.GeoLandmarks.Add(this);
						this._StreetId = value.Id;
					}
					else
					{
						this._StreetId = default(long);
					}
					this.SendPropertyChanged("GeoStreet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoResidentialArea_GeoLandmark", Storage="_GeoResidentialArea", ThisKey="AreaId", OtherKey="Id", IsForeignKey=true)]
		public GeoResidentialArea GeoResidentialArea
		{
			get
			{
				return this._GeoResidentialArea.Entity;
			}
			set
			{
				GeoResidentialArea previousValue = this._GeoResidentialArea.Entity;
				if (((previousValue != value) 
							|| (this._GeoResidentialArea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GeoResidentialArea.Entity = null;
						previousValue.GeoLandmarks.Remove(this);
					}
					this._GeoResidentialArea.Entity = value;
					if ((value != null))
					{
						value.GeoLandmarks.Add(this);
						this._AreaId = value.Id;
					}
					else
					{
						this._AreaId = default(long);
					}
					this.SendPropertyChanged("GeoResidentialArea");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoDistrict_GeoLandmark", Storage="_GeoDistrict", ThisKey="DistrictId", OtherKey="Id", IsForeignKey=true)]
		public GeoDistrict GeoDistrict
		{
			get
			{
				return this._GeoDistrict.Entity;
			}
			set
			{
				GeoDistrict previousValue = this._GeoDistrict.Entity;
				if (((previousValue != value) 
							|| (this._GeoDistrict.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GeoDistrict.Entity = null;
						previousValue.GeoLandmarks.Remove(this);
					}
					this._GeoDistrict.Entity = value;
					if ((value != null))
					{
						value.GeoLandmarks.Add(this);
						this._DistrictId = value.Id;
					}
					else
					{
						this._DistrictId = default(long);
					}
					this.SendPropertyChanged("GeoDistrict");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GeoObjectInfos")]
	public partial class GeoObjectInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _GeoObjectId;
		
		private string _Number;
		
		private string _Liter;
		
		private System.Nullable<int> _EntranceCount;
		
		private bool _Community;
		
		private string _CommunityName;
		
		private string _BuildingMaterial;
		
		private System.Nullable<int> _FloorsCount;
		
		private string _Planning;
		
		private System.Nullable<int> _BuildYear;
		
		private string _Description;
		
		private System.Nullable<double> _Latitude;
		
		private System.Nullable<double> _Longitude;
		
		private string _Photo;
		
		private string _Builder;
		
		private string _CelingMaterial;
		
		private System.Nullable<bool> _Gas;
		
		private bool _Locked;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private EntityRef<GeoObject> _GeoObject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnGeoObjectIdChanging(long value);
    partial void OnGeoObjectIdChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    partial void OnLiterChanging(string value);
    partial void OnLiterChanged();
    partial void OnEntranceCountChanging(System.Nullable<int> value);
    partial void OnEntranceCountChanged();
    partial void OnCommunityChanging(bool value);
    partial void OnCommunityChanged();
    partial void OnCommunityNameChanging(string value);
    partial void OnCommunityNameChanged();
    partial void OnBuildingMaterialChanging(string value);
    partial void OnBuildingMaterialChanged();
    partial void OnFloorsCountChanging(System.Nullable<int> value);
    partial void OnFloorsCountChanged();
    partial void OnPlanningChanging(string value);
    partial void OnPlanningChanged();
    partial void OnBuildYearChanging(System.Nullable<int> value);
    partial void OnBuildYearChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnLatitudeChanging(System.Nullable<double> value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(System.Nullable<double> value);
    partial void OnLongitudeChanged();
    partial void OnPhotoChanging(string value);
    partial void OnPhotoChanged();
    partial void OnBuilderChanging(string value);
    partial void OnBuilderChanged();
    partial void OnCelingMaterialChanging(string value);
    partial void OnCelingMaterialChanged();
    partial void OnGasChanging(System.Nullable<bool> value);
    partial void OnGasChanged();
    partial void OnLockedChanging(bool value);
    partial void OnLockedChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public GeoObjectInfo()
		{
			this._GeoObject = default(EntityRef<GeoObject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeoObjectId", DbType="BigInt NOT NULL")]
		public long GeoObjectId
		{
			get
			{
				return this._GeoObjectId;
			}
			set
			{
				if ((this._GeoObjectId != value))
				{
					if (this._GeoObject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGeoObjectIdChanging(value);
					this.SendPropertyChanging();
					this._GeoObjectId = value;
					this.SendPropertyChanged("GeoObjectId");
					this.OnGeoObjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="NVarChar(255)")]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Liter", DbType="NVarChar(255)")]
		public string Liter
		{
			get
			{
				return this._Liter;
			}
			set
			{
				if ((this._Liter != value))
				{
					this.OnLiterChanging(value);
					this.SendPropertyChanging();
					this._Liter = value;
					this.SendPropertyChanged("Liter");
					this.OnLiterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntranceCount", DbType="Int")]
		public System.Nullable<int> EntranceCount
		{
			get
			{
				return this._EntranceCount;
			}
			set
			{
				if ((this._EntranceCount != value))
				{
					this.OnEntranceCountChanging(value);
					this.SendPropertyChanging();
					this._EntranceCount = value;
					this.SendPropertyChanged("EntranceCount");
					this.OnEntranceCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Community", DbType="Bit NOT NULL")]
		public bool Community
		{
			get
			{
				return this._Community;
			}
			set
			{
				if ((this._Community != value))
				{
					this.OnCommunityChanging(value);
					this.SendPropertyChanging();
					this._Community = value;
					this.SendPropertyChanged("Community");
					this.OnCommunityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommunityName", DbType="NVarChar(255)")]
		public string CommunityName
		{
			get
			{
				return this._CommunityName;
			}
			set
			{
				if ((this._CommunityName != value))
				{
					this.OnCommunityNameChanging(value);
					this.SendPropertyChanging();
					this._CommunityName = value;
					this.SendPropertyChanged("CommunityName");
					this.OnCommunityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingMaterial", DbType="NVarChar(MAX)")]
		public string BuildingMaterial
		{
			get
			{
				return this._BuildingMaterial;
			}
			set
			{
				if ((this._BuildingMaterial != value))
				{
					this.OnBuildingMaterialChanging(value);
					this.SendPropertyChanging();
					this._BuildingMaterial = value;
					this.SendPropertyChanged("BuildingMaterial");
					this.OnBuildingMaterialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FloorsCount", DbType="Int")]
		public System.Nullable<int> FloorsCount
		{
			get
			{
				return this._FloorsCount;
			}
			set
			{
				if ((this._FloorsCount != value))
				{
					this.OnFloorsCountChanging(value);
					this.SendPropertyChanging();
					this._FloorsCount = value;
					this.SendPropertyChanged("FloorsCount");
					this.OnFloorsCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Planning", DbType="NVarChar(MAX)")]
		public string Planning
		{
			get
			{
				return this._Planning;
			}
			set
			{
				if ((this._Planning != value))
				{
					this.OnPlanningChanging(value);
					this.SendPropertyChanging();
					this._Planning = value;
					this.SendPropertyChanged("Planning");
					this.OnPlanningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildYear", DbType="Int")]
		public System.Nullable<int> BuildYear
		{
			get
			{
				return this._BuildYear;
			}
			set
			{
				if ((this._BuildYear != value))
				{
					this.OnBuildYearChanging(value);
					this.SendPropertyChanging();
					this._BuildYear = value;
					this.SendPropertyChanged("BuildYear");
					this.OnBuildYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float")]
		public System.Nullable<double> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float")]
		public System.Nullable<double> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="NVarChar(255)")]
		public string Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Builder", DbType="NVarChar(255)")]
		public string Builder
		{
			get
			{
				return this._Builder;
			}
			set
			{
				if ((this._Builder != value))
				{
					this.OnBuilderChanging(value);
					this.SendPropertyChanging();
					this._Builder = value;
					this.SendPropertyChanged("Builder");
					this.OnBuilderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CelingMaterial", DbType="NVarChar(MAX)")]
		public string CelingMaterial
		{
			get
			{
				return this._CelingMaterial;
			}
			set
			{
				if ((this._CelingMaterial != value))
				{
					this.OnCelingMaterialChanging(value);
					this.SendPropertyChanging();
					this._CelingMaterial = value;
					this.SendPropertyChanged("CelingMaterial");
					this.OnCelingMaterialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gas", DbType="Bit")]
		public System.Nullable<bool> Gas
		{
			get
			{
				return this._Gas;
			}
			set
			{
				if ((this._Gas != value))
				{
					this.OnGasChanging(value);
					this.SendPropertyChanging();
					this._Gas = value;
					this.SendPropertyChanged("Gas");
					this.OnGasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Locked", DbType="Bit NOT NULL")]
		public bool Locked
		{
			get
			{
				return this._Locked;
			}
			set
			{
				if ((this._Locked != value))
				{
					this.OnLockedChanging(value);
					this.SendPropertyChanging();
					this._Locked = value;
					this.SendPropertyChanged("Locked");
					this.OnLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoObject_GeoObjectInfo", Storage="_GeoObject", ThisKey="GeoObjectId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public GeoObject GeoObject
		{
			get
			{
				return this._GeoObject.Entity;
			}
			set
			{
				GeoObject previousValue = this._GeoObject.Entity;
				if (((previousValue != value) 
							|| (this._GeoObject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GeoObject.Entity = null;
						previousValue.GeoObjectInfos.Remove(this);
					}
					this._GeoObject.Entity = value;
					if ((value != null))
					{
						value.GeoObjectInfos.Add(this);
						this._GeoObjectId = value.Id;
					}
					else
					{
						this._GeoObjectId = default(long);
					}
					this.SendPropertyChanged("GeoObject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comments")]
	public partial class Comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _EntityId;
		
		private short _EntityType;
		
		private long _UserId;
		
		private string _AuthorName;
		
		private string _AuthiorEmail;
		
		private string _Content;
		
		private string _RequestData;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnEntityIdChanging(long value);
    partial void OnEntityIdChanged();
    partial void OnEntityTypeChanging(short value);
    partial void OnEntityTypeChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnAuthorNameChanging(string value);
    partial void OnAuthorNameChanged();
    partial void OnAuthiorEmailChanging(string value);
    partial void OnAuthiorEmailChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnRequestDataChanging(string value);
    partial void OnRequestDataChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public Comment()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityId", DbType="BigInt NOT NULL")]
		public long EntityId
		{
			get
			{
				return this._EntityId;
			}
			set
			{
				if ((this._EntityId != value))
				{
					this.OnEntityIdChanging(value);
					this.SendPropertyChanging();
					this._EntityId = value;
					this.SendPropertyChanged("EntityId");
					this.OnEntityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntityType", DbType="SmallInt NOT NULL")]
		public short EntityType
		{
			get
			{
				return this._EntityType;
			}
			set
			{
				if ((this._EntityType != value))
				{
					this.OnEntityTypeChanging(value);
					this.SendPropertyChanging();
					this._EntityType = value;
					this.SendPropertyChanged("EntityType");
					this.OnEntityTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string AuthorName
		{
			get
			{
				return this._AuthorName;
			}
			set
			{
				if ((this._AuthorName != value))
				{
					this.OnAuthorNameChanging(value);
					this.SendPropertyChanging();
					this._AuthorName = value;
					this.SendPropertyChanged("AuthorName");
					this.OnAuthorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthiorEmail", DbType="NVarChar(255)")]
		public string AuthiorEmail
		{
			get
			{
				return this._AuthiorEmail;
			}
			set
			{
				if ((this._AuthiorEmail != value))
				{
					this.OnAuthiorEmailChanging(value);
					this.SendPropertyChanging();
					this._AuthiorEmail = value;
					this.SendPropertyChanged("AuthiorEmail");
					this.OnAuthiorEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(4000)")]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestData", DbType="NVarChar(MAX)")]
		public string RequestData
		{
			get
			{
				return this._RequestData;
			}
			set
			{
				if ((this._RequestData != value))
				{
					this.OnRequestDataChanging(value);
					this.SendPropertyChanging();
					this._RequestData = value;
					this.SendPropertyChanged("RequestData");
					this.OnRequestDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Comment", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Comments.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Comments.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SearchRequests")]
	public partial class SearchRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _UserId;
		
		private string _Title;
		
		private string _SearchUrl;
		
		private int _TimesUsed;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private EntitySet<SearchRequestObject> _SearchRequestObjects;
		
		private EntitySet<EstateObjectMatchedSearchRequest> _EstateObjectMatchedSearchRequests;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSearchUrlChanging(string value);
    partial void OnSearchUrlChanged();
    partial void OnTimesUsedChanging(int value);
    partial void OnTimesUsedChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public SearchRequest()
		{
			this._SearchRequestObjects = new EntitySet<SearchRequestObject>(new Action<SearchRequestObject>(this.attach_SearchRequestObjects), new Action<SearchRequestObject>(this.detach_SearchRequestObjects));
			this._EstateObjectMatchedSearchRequests = new EntitySet<EstateObjectMatchedSearchRequest>(new Action<EstateObjectMatchedSearchRequest>(this.attach_EstateObjectMatchedSearchRequests), new Action<EstateObjectMatchedSearchRequest>(this.detach_EstateObjectMatchedSearchRequests));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchUrl", DbType="NVarChar(MAX)")]
		public string SearchUrl
		{
			get
			{
				return this._SearchUrl;
			}
			set
			{
				if ((this._SearchUrl != value))
				{
					this.OnSearchUrlChanging(value);
					this.SendPropertyChanging();
					this._SearchUrl = value;
					this.SendPropertyChanged("SearchUrl");
					this.OnSearchUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimesUsed", DbType="Int NOT NULL")]
		public int TimesUsed
		{
			get
			{
				return this._TimesUsed;
			}
			set
			{
				if ((this._TimesUsed != value))
				{
					this.OnTimesUsedChanging(value);
					this.SendPropertyChanging();
					this._TimesUsed = value;
					this.SendPropertyChanged("TimesUsed");
					this.OnTimesUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SearchRequest_SearchRequestObject", Storage="_SearchRequestObjects", ThisKey="Id", OtherKey="SearchRequestId")]
		public EntitySet<SearchRequestObject> SearchRequestObjects
		{
			get
			{
				return this._SearchRequestObjects;
			}
			set
			{
				this._SearchRequestObjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SearchRequest_EstateObjectMatchedSearchRequest", Storage="_EstateObjectMatchedSearchRequests", ThisKey="Id", OtherKey="RequestId")]
		public EntitySet<EstateObjectMatchedSearchRequest> EstateObjectMatchedSearchRequests
		{
			get
			{
				return this._EstateObjectMatchedSearchRequests;
			}
			set
			{
				this._EstateObjectMatchedSearchRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SearchRequest", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.SearchRequests.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.SearchRequests.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SearchRequestObjects(SearchRequestObject entity)
		{
			this.SendPropertyChanging();
			entity.SearchRequest = this;
		}
		
		private void detach_SearchRequestObjects(SearchRequestObject entity)
		{
			this.SendPropertyChanging();
			entity.SearchRequest = null;
		}
		
		private void attach_EstateObjectMatchedSearchRequests(EstateObjectMatchedSearchRequest entity)
		{
			this.SendPropertyChanging();
			entity.SearchRequest = this;
		}
		
		private void detach_EstateObjectMatchedSearchRequests(EstateObjectMatchedSearchRequest entity)
		{
			this.SendPropertyChanging();
			entity.SearchRequest = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GeoResidentialAreas")]
	public partial class GeoResidentialArea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _DistrictId;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private string _Bounds;
		
		private string _Description;
		
		private EntitySet<GeoStreet> _GeoStreets;
		
		private EntitySet<Address> _Addresses;
		
		private EntitySet<GeoLandmark> _GeoLandmarks;
		
		private EntityRef<GeoDistrict> _GeoDistrict;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnDistrictIdChanging(long value);
    partial void OnDistrictIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnBoundsChanging(string value);
    partial void OnBoundsChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public GeoResidentialArea()
		{
			this._GeoStreets = new EntitySet<GeoStreet>(new Action<GeoStreet>(this.attach_GeoStreets), new Action<GeoStreet>(this.detach_GeoStreets));
			this._Addresses = new EntitySet<Address>(new Action<Address>(this.attach_Addresses), new Action<Address>(this.detach_Addresses));
			this._GeoLandmarks = new EntitySet<GeoLandmark>(new Action<GeoLandmark>(this.attach_GeoLandmarks), new Action<GeoLandmark>(this.detach_GeoLandmarks));
			this._GeoDistrict = default(EntityRef<GeoDistrict>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictId", DbType="BigInt NOT NULL")]
		public long DistrictId
		{
			get
			{
				return this._DistrictId;
			}
			set
			{
				if ((this._DistrictId != value))
				{
					if (this._GeoDistrict.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDistrictIdChanging(value);
					this.SendPropertyChanging();
					this._DistrictId = value;
					this.SendPropertyChanged("DistrictId");
					this.OnDistrictIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bounds", DbType="NVarChar(MAX)")]
		public string Bounds
		{
			get
			{
				return this._Bounds;
			}
			set
			{
				if ((this._Bounds != value))
				{
					this.OnBoundsChanging(value);
					this.SendPropertyChanging();
					this._Bounds = value;
					this.SendPropertyChanged("Bounds");
					this.OnBoundsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoResidentialArea_GeoStreet", Storage="_GeoStreets", ThisKey="Id", OtherKey="AreaId")]
		public EntitySet<GeoStreet> GeoStreets
		{
			get
			{
				return this._GeoStreets;
			}
			set
			{
				this._GeoStreets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoResidentialArea_Address", Storage="_Addresses", ThisKey="Id", OtherKey="DistrictResidentialAreaId")]
		public EntitySet<Address> Addresses
		{
			get
			{
				return this._Addresses;
			}
			set
			{
				this._Addresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoResidentialArea_GeoLandmark", Storage="_GeoLandmarks", ThisKey="Id", OtherKey="AreaId")]
		public EntitySet<GeoLandmark> GeoLandmarks
		{
			get
			{
				return this._GeoLandmarks;
			}
			set
			{
				this._GeoLandmarks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoDistrict_GeoResidentialArea", Storage="_GeoDistrict", ThisKey="DistrictId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public GeoDistrict GeoDistrict
		{
			get
			{
				return this._GeoDistrict.Entity;
			}
			set
			{
				GeoDistrict previousValue = this._GeoDistrict.Entity;
				if (((previousValue != value) 
							|| (this._GeoDistrict.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GeoDistrict.Entity = null;
						previousValue.GeoResidentialAreas.Remove(this);
					}
					this._GeoDistrict.Entity = value;
					if ((value != null))
					{
						value.GeoResidentialAreas.Add(this);
						this._DistrictId = value.Id;
					}
					else
					{
						this._DistrictId = default(long);
					}
					this.SendPropertyChanged("GeoDistrict");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GeoStreets(GeoStreet entity)
		{
			this.SendPropertyChanging();
			entity.GeoResidentialArea = this;
		}
		
		private void detach_GeoStreets(GeoStreet entity)
		{
			this.SendPropertyChanging();
			entity.GeoResidentialArea = null;
		}
		
		private void attach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.GeoResidentialArea = this;
		}
		
		private void detach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.GeoResidentialArea = null;
		}
		
		private void attach_GeoLandmarks(GeoLandmark entity)
		{
			this.SendPropertyChanging();
			entity.GeoResidentialArea = this;
		}
		
		private void detach_GeoLandmarks(GeoLandmark entity)
		{
			this.SendPropertyChanging();
			entity.GeoResidentialArea = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GeoDistricts")]
	public partial class GeoDistrict : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _CityId;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private string _Bounds;
		
		private string _Description;
		
		private int _Population;
		
		private EntitySet<Address> _Addresses;
		
		private EntitySet<GeoLandmark> _GeoLandmarks;
		
		private EntitySet<GeoResidentialArea> _GeoResidentialAreas;
		
		private EntityRef<GeoCity> _GeoCity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCityIdChanging(long value);
    partial void OnCityIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnBoundsChanging(string value);
    partial void OnBoundsChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPopulationChanging(int value);
    partial void OnPopulationChanged();
    #endregion
		
		public GeoDistrict()
		{
			this._Addresses = new EntitySet<Address>(new Action<Address>(this.attach_Addresses), new Action<Address>(this.detach_Addresses));
			this._GeoLandmarks = new EntitySet<GeoLandmark>(new Action<GeoLandmark>(this.attach_GeoLandmarks), new Action<GeoLandmark>(this.detach_GeoLandmarks));
			this._GeoResidentialAreas = new EntitySet<GeoResidentialArea>(new Action<GeoResidentialArea>(this.attach_GeoResidentialAreas), new Action<GeoResidentialArea>(this.detach_GeoResidentialAreas));
			this._GeoCity = default(EntityRef<GeoCity>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityId", DbType="BigInt NOT NULL")]
		public long CityId
		{
			get
			{
				return this._CityId;
			}
			set
			{
				if ((this._CityId != value))
				{
					if (this._GeoCity.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCityIdChanging(value);
					this.SendPropertyChanging();
					this._CityId = value;
					this.SendPropertyChanged("CityId");
					this.OnCityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bounds", DbType="NVarChar(MAX)")]
		public string Bounds
		{
			get
			{
				return this._Bounds;
			}
			set
			{
				if ((this._Bounds != value))
				{
					this.OnBoundsChanging(value);
					this.SendPropertyChanging();
					this._Bounds = value;
					this.SendPropertyChanged("Bounds");
					this.OnBoundsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Population", DbType="Int NOT NULL")]
		public int Population
		{
			get
			{
				return this._Population;
			}
			set
			{
				if ((this._Population != value))
				{
					this.OnPopulationChanging(value);
					this.SendPropertyChanging();
					this._Population = value;
					this.SendPropertyChanged("Population");
					this.OnPopulationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoDistrict_Address", Storage="_Addresses", ThisKey="Id", OtherKey="CityDistrictId")]
		public EntitySet<Address> Addresses
		{
			get
			{
				return this._Addresses;
			}
			set
			{
				this._Addresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoDistrict_GeoLandmark", Storage="_GeoLandmarks", ThisKey="Id", OtherKey="DistrictId")]
		public EntitySet<GeoLandmark> GeoLandmarks
		{
			get
			{
				return this._GeoLandmarks;
			}
			set
			{
				this._GeoLandmarks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoDistrict_GeoResidentialArea", Storage="_GeoResidentialAreas", ThisKey="Id", OtherKey="DistrictId")]
		public EntitySet<GeoResidentialArea> GeoResidentialAreas
		{
			get
			{
				return this._GeoResidentialAreas;
			}
			set
			{
				this._GeoResidentialAreas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeoCity_GeoDistrict", Storage="_GeoCity", ThisKey="CityId", OtherKey="Id", IsForeignKey=true)]
		public GeoCity GeoCity
		{
			get
			{
				return this._GeoCity.Entity;
			}
			set
			{
				GeoCity previousValue = this._GeoCity.Entity;
				if (((previousValue != value) 
							|| (this._GeoCity.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GeoCity.Entity = null;
						previousValue.GeoDistricts.Remove(this);
					}
					this._GeoCity.Entity = value;
					if ((value != null))
					{
						value.GeoDistricts.Add(this);
						this._CityId = value.Id;
					}
					else
					{
						this._CityId = default(long);
					}
					this.SendPropertyChanged("GeoCity");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.GeoDistrict = this;
		}
		
		private void detach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.GeoDistrict = null;
		}
		
		private void attach_GeoLandmarks(GeoLandmark entity)
		{
			this.SendPropertyChanging();
			entity.GeoDistrict = this;
		}
		
		private void detach_GeoLandmarks(GeoLandmark entity)
		{
			this.SendPropertyChanging();
			entity.GeoDistrict = null;
		}
		
		private void attach_GeoResidentialAreas(GeoResidentialArea entity)
		{
			this.SendPropertyChanging();
			entity.GeoDistrict = this;
		}
		
		private void detach_GeoResidentialAreas(GeoResidentialArea entity)
		{
			this.SendPropertyChanging();
			entity.GeoDistrict = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrainingPrograms")]
	public partial class TrainingProgram : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _UserId;
		
		private System.Nullable<System.DateTime> _TrainingDate;
		
		private string _ProgramName;
		
		private string _Organizer;
		
		private string _TrainingPlace;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private long _CreatedBy;
		
		private long _ModifiedBy;
		
		private string _CertificateFile;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnTrainingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTrainingDateChanged();
    partial void OnProgramNameChanging(string value);
    partial void OnProgramNameChanged();
    partial void OnOrganizerChanging(string value);
    partial void OnOrganizerChanged();
    partial void OnTrainingPlaceChanging(string value);
    partial void OnTrainingPlaceChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnCreatedByChanging(long value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(long value);
    partial void OnModifiedByChanged();
    partial void OnCertificateFileChanging(string value);
    partial void OnCertificateFileChanged();
    #endregion
		
		public TrainingProgram()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> TrainingDate
		{
			get
			{
				return this._TrainingDate;
			}
			set
			{
				if ((this._TrainingDate != value))
				{
					this.OnTrainingDateChanging(value);
					this.SendPropertyChanging();
					this._TrainingDate = value;
					this.SendPropertyChanged("TrainingDate");
					this.OnTrainingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramName", DbType="NVarChar(MAX)")]
		public string ProgramName
		{
			get
			{
				return this._ProgramName;
			}
			set
			{
				if ((this._ProgramName != value))
				{
					this.OnProgramNameChanging(value);
					this.SendPropertyChanging();
					this._ProgramName = value;
					this.SendPropertyChanged("ProgramName");
					this.OnProgramNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organizer", DbType="NVarChar(MAX)")]
		public string Organizer
		{
			get
			{
				return this._Organizer;
			}
			set
			{
				if ((this._Organizer != value))
				{
					this.OnOrganizerChanging(value);
					this.SendPropertyChanging();
					this._Organizer = value;
					this.SendPropertyChanged("Organizer");
					this.OnOrganizerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrainingPlace", DbType="NVarChar(MAX)")]
		public string TrainingPlace
		{
			get
			{
				return this._TrainingPlace;
			}
			set
			{
				if ((this._TrainingPlace != value))
				{
					this.OnTrainingPlaceChanging(value);
					this.SendPropertyChanging();
					this._TrainingPlace = value;
					this.SendPropertyChanged("TrainingPlace");
					this.OnTrainingPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt NOT NULL")]
		public long CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt NOT NULL")]
		public long ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateFile", DbType="NVarChar(MAX)")]
		public string CertificateFile
		{
			get
			{
				return this._CertificateFile;
			}
			set
			{
				if ((this._CertificateFile != value))
				{
					this.OnCertificateFileChanging(value);
					this.SendPropertyChanging();
					this._CertificateFile = value;
					this.SendPropertyChanged("CertificateFile");
					this.OnCertificateFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_TrainingProgram", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.TrainingPrograms.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.TrainingPrograms.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Achievments")]
	public partial class Achievment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _UserId;
		
		private System.DateTime _ReachDate;
		
		private string _Title;
		
		private string _Organizer;
		
		private string _ScanUrl;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnReachDateChanging(System.DateTime value);
    partial void OnReachDateChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnOrganizerChanging(string value);
    partial void OnOrganizerChanged();
    partial void OnScanUrlChanging(string value);
    partial void OnScanUrlChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public Achievment()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReachDate", DbType="Date NOT NULL")]
		public System.DateTime ReachDate
		{
			get
			{
				return this._ReachDate;
			}
			set
			{
				if ((this._ReachDate != value))
				{
					this.OnReachDateChanging(value);
					this.SendPropertyChanging();
					this._ReachDate = value;
					this.SendPropertyChanged("ReachDate");
					this.OnReachDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Organizer", DbType="NVarChar(255)")]
		public string Organizer
		{
			get
			{
				return this._Organizer;
			}
			set
			{
				if ((this._Organizer != value))
				{
					this.OnOrganizerChanging(value);
					this.SendPropertyChanging();
					this._Organizer = value;
					this.SendPropertyChanged("Organizer");
					this.OnOrganizerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScanUrl", DbType="NVarChar(MAX)")]
		public string ScanUrl
		{
			get
			{
				return this._ScanUrl;
			}
			set
			{
				if ((this._ScanUrl != value))
				{
					this.OnScanUrlChanging(value);
					this.SendPropertyChanging();
					this._ScanUrl = value;
					this.SendPropertyChanged("ScanUrl");
					this.OnScanUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Achievment", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Achievments.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Achievments.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Payments")]
	public partial class Payment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _UserId;
		
		private long _CompanyId;
		
		private short _Direction;
		
		private decimal _Amount;
		
		private string _Description;
		
		private bool _Payed;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DatePayed;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnCompanyIdChanging(long value);
    partial void OnCompanyIdChanged();
    partial void OnDirectionChanging(short value);
    partial void OnDirectionChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPayedChanging(bool value);
    partial void OnPayedChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDatePayedChanging(System.Nullable<System.DateTime> value);
    partial void OnDatePayedChanged();
    #endregion
		
		public Payment()
		{
			this._Company = default(EntityRef<Company>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="BigInt NOT NULL")]
		public long CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direction", DbType="SmallInt NOT NULL")]
		public short Direction
		{
			get
			{
				return this._Direction;
			}
			set
			{
				if ((this._Direction != value))
				{
					this.OnDirectionChanging(value);
					this.SendPropertyChanging();
					this._Direction = value;
					this.SendPropertyChanged("Direction");
					this.OnDirectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payed", DbType="Bit NOT NULL")]
		public bool Payed
		{
			get
			{
				return this._Payed;
			}
			set
			{
				if ((this._Payed != value))
				{
					this.OnPayedChanging(value);
					this.SendPropertyChanging();
					this._Payed = value;
					this.SendPropertyChanged("Payed");
					this.OnPayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatePayed", DbType="DateTime")]
		public System.Nullable<System.DateTime> DatePayed
		{
			get
			{
				return this._DatePayed;
			}
			set
			{
				if ((this._DatePayed != value))
				{
					this.OnDatePayedChanging(value);
					this.SendPropertyChanging();
					this._DatePayed = value;
					this.SendPropertyChanged("DatePayed");
					this.OnDatePayedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Payment", Storage="_Company", ThisKey="CompanyId", OtherKey="Id", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._CompanyId = value.Id;
					}
					else
					{
						this._CompanyId = default(long);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Payment", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SearchRequestObjects")]
	public partial class SearchRequestObject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _SearchRequestId;
		
		private long _EstateObjectId;
		
		private short _Status;
		
		private bool _New;
		
		private string _DeclineReason;
		
		private bool _DeclineReasonPrice;
		
		private System.Nullable<double> _OldPrice;
		
		private short _TriggerEvent;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateMoved;
		
		private EntitySet<SearchRequestObjectComment> _SearchRequestObjectComments;
		
		private EntityRef<EstateObject> _EstateObject;
		
		private EntityRef<SearchRequest> _SearchRequest;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnSearchRequestIdChanging(long value);
    partial void OnSearchRequestIdChanged();
    partial void OnEstateObjectIdChanging(long value);
    partial void OnEstateObjectIdChanged();
    partial void OnStatusChanging(short value);
    partial void OnStatusChanged();
    partial void OnNewChanging(bool value);
    partial void OnNewChanged();
    partial void OnDeclineReasonChanging(string value);
    partial void OnDeclineReasonChanged();
    partial void OnDeclineReasonPriceChanging(bool value);
    partial void OnDeclineReasonPriceChanged();
    partial void OnOldPriceChanging(System.Nullable<double> value);
    partial void OnOldPriceChanged();
    partial void OnTriggerEventChanging(short value);
    partial void OnTriggerEventChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateMovedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateMovedChanged();
    #endregion
		
		public SearchRequestObject()
		{
			this._SearchRequestObjectComments = new EntitySet<SearchRequestObjectComment>(new Action<SearchRequestObjectComment>(this.attach_SearchRequestObjectComments), new Action<SearchRequestObjectComment>(this.detach_SearchRequestObjectComments));
			this._EstateObject = default(EntityRef<EstateObject>);
			this._SearchRequest = default(EntityRef<SearchRequest>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchRequestId", DbType="BigInt NOT NULL")]
		public long SearchRequestId
		{
			get
			{
				return this._SearchRequestId;
			}
			set
			{
				if ((this._SearchRequestId != value))
				{
					if (this._SearchRequest.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSearchRequestIdChanging(value);
					this.SendPropertyChanging();
					this._SearchRequestId = value;
					this.SendPropertyChanged("SearchRequestId");
					this.OnSearchRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EstateObjectId", DbType="BigInt NOT NULL")]
		public long EstateObjectId
		{
			get
			{
				return this._EstateObjectId;
			}
			set
			{
				if ((this._EstateObjectId != value))
				{
					if (this._EstateObject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEstateObjectIdChanging(value);
					this.SendPropertyChanging();
					this._EstateObjectId = value;
					this.SendPropertyChanged("EstateObjectId");
					this.OnEstateObjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt NOT NULL")]
		public short Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_New", DbType="Bit NOT NULL")]
		public bool New
		{
			get
			{
				return this._New;
			}
			set
			{
				if ((this._New != value))
				{
					this.OnNewChanging(value);
					this.SendPropertyChanging();
					this._New = value;
					this.SendPropertyChanged("New");
					this.OnNewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclineReason", DbType="NVarChar(255)")]
		public string DeclineReason
		{
			get
			{
				return this._DeclineReason;
			}
			set
			{
				if ((this._DeclineReason != value))
				{
					this.OnDeclineReasonChanging(value);
					this.SendPropertyChanging();
					this._DeclineReason = value;
					this.SendPropertyChanged("DeclineReason");
					this.OnDeclineReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclineReasonPrice", DbType="Bit NOT NULL")]
		public bool DeclineReasonPrice
		{
			get
			{
				return this._DeclineReasonPrice;
			}
			set
			{
				if ((this._DeclineReasonPrice != value))
				{
					this.OnDeclineReasonPriceChanging(value);
					this.SendPropertyChanging();
					this._DeclineReasonPrice = value;
					this.SendPropertyChanged("DeclineReasonPrice");
					this.OnDeclineReasonPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldPrice", DbType="Float")]
		public System.Nullable<double> OldPrice
		{
			get
			{
				return this._OldPrice;
			}
			set
			{
				if ((this._OldPrice != value))
				{
					this.OnOldPriceChanging(value);
					this.SendPropertyChanging();
					this._OldPrice = value;
					this.SendPropertyChanged("OldPrice");
					this.OnOldPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TriggerEvent", DbType="SmallInt NOT NULL")]
		public short TriggerEvent
		{
			get
			{
				return this._TriggerEvent;
			}
			set
			{
				if ((this._TriggerEvent != value))
				{
					this.OnTriggerEventChanging(value);
					this.SendPropertyChanging();
					this._TriggerEvent = value;
					this.SendPropertyChanged("TriggerEvent");
					this.OnTriggerEventChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateMoved", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateMoved
		{
			get
			{
				return this._DateMoved;
			}
			set
			{
				if ((this._DateMoved != value))
				{
					this.OnDateMovedChanging(value);
					this.SendPropertyChanging();
					this._DateMoved = value;
					this.SendPropertyChanged("DateMoved");
					this.OnDateMovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SearchRequestObject_SearchRequestObjectComment", Storage="_SearchRequestObjectComments", ThisKey="Id", OtherKey="RequestObjectId")]
		public EntitySet<SearchRequestObjectComment> SearchRequestObjectComments
		{
			get
			{
				return this._SearchRequestObjectComments;
			}
			set
			{
				this._SearchRequestObjectComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstateObject_SearchRequestObject", Storage="_EstateObject", ThisKey="EstateObjectId", OtherKey="Id", IsForeignKey=true)]
		public EstateObject EstateObject
		{
			get
			{
				return this._EstateObject.Entity;
			}
			set
			{
				EstateObject previousValue = this._EstateObject.Entity;
				if (((previousValue != value) 
							|| (this._EstateObject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EstateObject.Entity = null;
						previousValue.SearchRequestObjects.Remove(this);
					}
					this._EstateObject.Entity = value;
					if ((value != null))
					{
						value.SearchRequestObjects.Add(this);
						this._EstateObjectId = value.Id;
					}
					else
					{
						this._EstateObjectId = default(long);
					}
					this.SendPropertyChanged("EstateObject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SearchRequest_SearchRequestObject", Storage="_SearchRequest", ThisKey="SearchRequestId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SearchRequest SearchRequest
		{
			get
			{
				return this._SearchRequest.Entity;
			}
			set
			{
				SearchRequest previousValue = this._SearchRequest.Entity;
				if (((previousValue != value) 
							|| (this._SearchRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SearchRequest.Entity = null;
						previousValue.SearchRequestObjects.Remove(this);
					}
					this._SearchRequest.Entity = value;
					if ((value != null))
					{
						value.SearchRequestObjects.Add(this);
						this._SearchRequestId = value.Id;
					}
					else
					{
						this._SearchRequestId = default(long);
					}
					this.SendPropertyChanged("SearchRequest");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SearchRequestObjectComments(SearchRequestObjectComment entity)
		{
			this.SendPropertyChanging();
			entity.SearchRequestObject = this;
		}
		
		private void detach_SearchRequestObjectComments(SearchRequestObjectComment entity)
		{
			this.SendPropertyChanging();
			entity.SearchRequestObject = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ObjectMedias")]
	public partial class ObjectMedia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _ObjectId;
		
		private short _MediaType;
		
		private string _Title;
		
		private string _PreviewUrl;
		
		private string _MediaUrl;
		
		private int _Views;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private long _CreatedBy;
		
		private long _ModifiedBy;
		
		private int _Position;
		
		private bool _IsMain;
		
		private EntityRef<EstateObject> _EstateObject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnObjectIdChanging(long value);
    partial void OnObjectIdChanged();
    partial void OnMediaTypeChanging(short value);
    partial void OnMediaTypeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnPreviewUrlChanging(string value);
    partial void OnPreviewUrlChanged();
    partial void OnMediaUrlChanging(string value);
    partial void OnMediaUrlChanged();
    partial void OnViewsChanging(int value);
    partial void OnViewsChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnCreatedByChanging(long value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(long value);
    partial void OnModifiedByChanged();
    partial void OnPositionChanging(int value);
    partial void OnPositionChanged();
    partial void OnIsMainChanging(bool value);
    partial void OnIsMainChanged();
    #endregion
		
		public ObjectMedia()
		{
			this._EstateObject = default(EntityRef<EstateObject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectId", DbType="BigInt NOT NULL")]
		public long ObjectId
		{
			get
			{
				return this._ObjectId;
			}
			set
			{
				if ((this._ObjectId != value))
				{
					if (this._EstateObject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectIdChanging(value);
					this.SendPropertyChanging();
					this._ObjectId = value;
					this.SendPropertyChanged("ObjectId");
					this.OnObjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediaType", DbType="SmallInt NOT NULL")]
		public short MediaType
		{
			get
			{
				return this._MediaType;
			}
			set
			{
				if ((this._MediaType != value))
				{
					this.OnMediaTypeChanging(value);
					this.SendPropertyChanging();
					this._MediaType = value;
					this.SendPropertyChanged("MediaType");
					this.OnMediaTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviewUrl", DbType="NVarChar(MAX)")]
		public string PreviewUrl
		{
			get
			{
				return this._PreviewUrl;
			}
			set
			{
				if ((this._PreviewUrl != value))
				{
					this.OnPreviewUrlChanging(value);
					this.SendPropertyChanging();
					this._PreviewUrl = value;
					this.SendPropertyChanged("PreviewUrl");
					this.OnPreviewUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediaUrl", DbType="NVarChar(MAX)")]
		public string MediaUrl
		{
			get
			{
				return this._MediaUrl;
			}
			set
			{
				if ((this._MediaUrl != value))
				{
					this.OnMediaUrlChanging(value);
					this.SendPropertyChanging();
					this._MediaUrl = value;
					this.SendPropertyChanged("MediaUrl");
					this.OnMediaUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Views", DbType="Int NOT NULL")]
		public int Views
		{
			get
			{
				return this._Views;
			}
			set
			{
				if ((this._Views != value))
				{
					this.OnViewsChanging(value);
					this.SendPropertyChanging();
					this._Views = value;
					this.SendPropertyChanged("Views");
					this.OnViewsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt NOT NULL")]
		public long CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt NOT NULL")]
		public long ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="Int NOT NULL")]
		public int Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMain", DbType="Bit NOT NULL")]
		public bool IsMain
		{
			get
			{
				return this._IsMain;
			}
			set
			{
				if ((this._IsMain != value))
				{
					this.OnIsMainChanging(value);
					this.SendPropertyChanging();
					this._IsMain = value;
					this.SendPropertyChanged("IsMain");
					this.OnIsMainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstateObject_ObjectMedia", Storage="_EstateObject", ThisKey="ObjectId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EstateObject EstateObject
		{
			get
			{
				return this._EstateObject.Entity;
			}
			set
			{
				EstateObject previousValue = this._EstateObject.Entity;
				if (((previousValue != value) 
							|| (this._EstateObject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EstateObject.Entity = null;
						previousValue.ObjectMedias.Remove(this);
					}
					this._EstateObject.Entity = value;
					if ((value != null))
					{
						value.ObjectMedias.Add(this);
						this._ObjectId = value.Id;
					}
					else
					{
						this._ObjectId = default(long);
					}
					this.SendPropertyChanged("EstateObject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ObjectAdditionalProperties")]
	public partial class ObjectAdditionalProperty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _ObjectId;
		
		private string _ViewFromWindows;
		
		private System.Nullable<int> _BuildingYear;
		
		private string _AdditionalBuildings;
		
		private System.Nullable<bool> _ExtensionsLegality;
		
		private System.Nullable<long> _Builder;
		
		private System.Nullable<int> _BalconiesCount;
		
		private System.Nullable<int> _RoomsCount;
		
		private System.Nullable<int> _LoggiasCount;
		
		private System.Nullable<int> _BedroomsCount;
		
		private System.Nullable<int> _BaywindowsCount;
		
		private System.Nullable<long> _Roof;
		
		private string _ObjectName;
		
		private System.Nullable<long> _Fencing;
		
		private System.Nullable<long> _RoomPlanning;
		
		private string _Basement;
		
		private System.Nullable<bool> _CorrectPlanning;
		
		private System.Nullable<long> _FlatLocation;
		
		private string _WindowsLocation;
		
		private string _WindowsMaterial;
		
		private System.Nullable<bool> _Redesign;
		
		private System.Nullable<bool> _RedesignLegality;
		
		private System.Nullable<long> _PlotForm;
		
		private System.Nullable<int> _FlatRoomsCount;
		
		private System.Nullable<int> _ErkersCount;
		
		private System.Nullable<bool> _RegistrationPosibility;
		
		private System.Nullable<long> _OwnerPart;
		
		private System.Nullable<long> _Burdens;
		
		private System.Nullable<System.DateTime> _RentDate;
		
		private System.Nullable<long> _Court;
		
		private System.Nullable<long> _Fence;
		
		private string _Loading;
		
		private System.Nullable<long> _Environment;
		
		private System.Nullable<bool> _RentWithServices;
		
		private System.Nullable<bool> _Auction;
		
		private System.Nullable<long> _Placement;
		
		private System.Nullable<long> _AgreementType;
		
		private string _AgreementNumber;
		
		private System.Nullable<System.DateTime> _AgreementStartDate;
		
		private System.Nullable<System.DateTime> _AgreementEndDate;
		
		private string _Comission;
		
		private System.Nullable<bool> _AgencyPayment;
		
		private string _PaymentCondition;
		
		private EntityRef<EstateObject> _EstateObject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnObjectIdChanging(long value);
    partial void OnObjectIdChanged();
    partial void OnViewFromWindowsChanging(string value);
    partial void OnViewFromWindowsChanged();
    partial void OnBuildingYearChanging(System.Nullable<int> value);
    partial void OnBuildingYearChanged();
    partial void OnAdditionalBuildingsChanging(string value);
    partial void OnAdditionalBuildingsChanged();
    partial void OnExtensionsLegalityChanging(System.Nullable<bool> value);
    partial void OnExtensionsLegalityChanged();
    partial void OnBuilderChanging(System.Nullable<long> value);
    partial void OnBuilderChanged();
    partial void OnBalconiesCountChanging(System.Nullable<int> value);
    partial void OnBalconiesCountChanged();
    partial void OnRoomsCountChanging(System.Nullable<int> value);
    partial void OnRoomsCountChanged();
    partial void OnLoggiasCountChanging(System.Nullable<int> value);
    partial void OnLoggiasCountChanged();
    partial void OnBedroomsCountChanging(System.Nullable<int> value);
    partial void OnBedroomsCountChanged();
    partial void OnBaywindowsCountChanging(System.Nullable<int> value);
    partial void OnBaywindowsCountChanged();
    partial void OnRoofChanging(System.Nullable<long> value);
    partial void OnRoofChanged();
    partial void OnObjectNameChanging(string value);
    partial void OnObjectNameChanged();
    partial void OnFencingChanging(System.Nullable<long> value);
    partial void OnFencingChanged();
    partial void OnRoomPlanningChanging(System.Nullable<long> value);
    partial void OnRoomPlanningChanged();
    partial void OnBasementChanging(string value);
    partial void OnBasementChanged();
    partial void OnCorrectPlanningChanging(System.Nullable<bool> value);
    partial void OnCorrectPlanningChanged();
    partial void OnFlatLocationChanging(System.Nullable<long> value);
    partial void OnFlatLocationChanged();
    partial void OnWindowsLocationChanging(string value);
    partial void OnWindowsLocationChanged();
    partial void OnWindowsMaterialChanging(string value);
    partial void OnWindowsMaterialChanged();
    partial void OnRedesignChanging(System.Nullable<bool> value);
    partial void OnRedesignChanged();
    partial void OnRedesignLegalityChanging(System.Nullable<bool> value);
    partial void OnRedesignLegalityChanged();
    partial void OnPlotFormChanging(System.Nullable<long> value);
    partial void OnPlotFormChanged();
    partial void OnFlatRoomsCountChanging(System.Nullable<int> value);
    partial void OnFlatRoomsCountChanged();
    partial void OnErkersCountChanging(System.Nullable<int> value);
    partial void OnErkersCountChanged();
    partial void OnRegistrationPosibilityChanging(System.Nullable<bool> value);
    partial void OnRegistrationPosibilityChanged();
    partial void OnOwnerPartChanging(System.Nullable<long> value);
    partial void OnOwnerPartChanged();
    partial void OnBurdensChanging(System.Nullable<long> value);
    partial void OnBurdensChanged();
    partial void OnRentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRentDateChanged();
    partial void OnCourtChanging(System.Nullable<long> value);
    partial void OnCourtChanged();
    partial void OnFenceChanging(System.Nullable<long> value);
    partial void OnFenceChanged();
    partial void OnLoadingChanging(string value);
    partial void OnLoadingChanged();
    partial void OnEnvironmentChanging(System.Nullable<long> value);
    partial void OnEnvironmentChanged();
    partial void OnRentWithServicesChanging(System.Nullable<bool> value);
    partial void OnRentWithServicesChanged();
    partial void OnAuctionChanging(System.Nullable<bool> value);
    partial void OnAuctionChanged();
    partial void OnPlacementChanging(System.Nullable<long> value);
    partial void OnPlacementChanged();
    partial void OnAgreementTypeChanging(System.Nullable<long> value);
    partial void OnAgreementTypeChanged();
    partial void OnAgreementNumberChanging(string value);
    partial void OnAgreementNumberChanged();
    partial void OnAgreementStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAgreementStartDateChanged();
    partial void OnAgreementEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAgreementEndDateChanged();
    partial void OnComissionChanging(string value);
    partial void OnComissionChanged();
    partial void OnAgencyPaymentChanging(System.Nullable<bool> value);
    partial void OnAgencyPaymentChanged();
    partial void OnPaymentConditionChanging(string value);
    partial void OnPaymentConditionChanged();
    #endregion
		
		public ObjectAdditionalProperty()
		{
			this._EstateObject = default(EntityRef<EstateObject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectId", DbType="BigInt NOT NULL")]
		public long ObjectId
		{
			get
			{
				return this._ObjectId;
			}
			set
			{
				if ((this._ObjectId != value))
				{
					if (this._EstateObject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectIdChanging(value);
					this.SendPropertyChanging();
					this._ObjectId = value;
					this.SendPropertyChanged("ObjectId");
					this.OnObjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewFromWindows", DbType="NVarChar(255)")]
		public string ViewFromWindows
		{
			get
			{
				return this._ViewFromWindows;
			}
			set
			{
				if ((this._ViewFromWindows != value))
				{
					this.OnViewFromWindowsChanging(value);
					this.SendPropertyChanging();
					this._ViewFromWindows = value;
					this.SendPropertyChanged("ViewFromWindows");
					this.OnViewFromWindowsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingYear", DbType="Int")]
		public System.Nullable<int> BuildingYear
		{
			get
			{
				return this._BuildingYear;
			}
			set
			{
				if ((this._BuildingYear != value))
				{
					this.OnBuildingYearChanging(value);
					this.SendPropertyChanging();
					this._BuildingYear = value;
					this.SendPropertyChanged("BuildingYear");
					this.OnBuildingYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalBuildings", DbType="NVarChar(255)")]
		public string AdditionalBuildings
		{
			get
			{
				return this._AdditionalBuildings;
			}
			set
			{
				if ((this._AdditionalBuildings != value))
				{
					this.OnAdditionalBuildingsChanging(value);
					this.SendPropertyChanging();
					this._AdditionalBuildings = value;
					this.SendPropertyChanged("AdditionalBuildings");
					this.OnAdditionalBuildingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtensionsLegality", DbType="Bit")]
		public System.Nullable<bool> ExtensionsLegality
		{
			get
			{
				return this._ExtensionsLegality;
			}
			set
			{
				if ((this._ExtensionsLegality != value))
				{
					this.OnExtensionsLegalityChanging(value);
					this.SendPropertyChanging();
					this._ExtensionsLegality = value;
					this.SendPropertyChanged("ExtensionsLegality");
					this.OnExtensionsLegalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Builder", DbType="BigInt")]
		public System.Nullable<long> Builder
		{
			get
			{
				return this._Builder;
			}
			set
			{
				if ((this._Builder != value))
				{
					this.OnBuilderChanging(value);
					this.SendPropertyChanging();
					this._Builder = value;
					this.SendPropertyChanged("Builder");
					this.OnBuilderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalconiesCount", DbType="Int")]
		public System.Nullable<int> BalconiesCount
		{
			get
			{
				return this._BalconiesCount;
			}
			set
			{
				if ((this._BalconiesCount != value))
				{
					this.OnBalconiesCountChanging(value);
					this.SendPropertyChanging();
					this._BalconiesCount = value;
					this.SendPropertyChanged("BalconiesCount");
					this.OnBalconiesCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomsCount", DbType="Int")]
		public System.Nullable<int> RoomsCount
		{
			get
			{
				return this._RoomsCount;
			}
			set
			{
				if ((this._RoomsCount != value))
				{
					this.OnRoomsCountChanging(value);
					this.SendPropertyChanging();
					this._RoomsCount = value;
					this.SendPropertyChanged("RoomsCount");
					this.OnRoomsCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoggiasCount", DbType="Int")]
		public System.Nullable<int> LoggiasCount
		{
			get
			{
				return this._LoggiasCount;
			}
			set
			{
				if ((this._LoggiasCount != value))
				{
					this.OnLoggiasCountChanging(value);
					this.SendPropertyChanging();
					this._LoggiasCount = value;
					this.SendPropertyChanged("LoggiasCount");
					this.OnLoggiasCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BedroomsCount", DbType="Int")]
		public System.Nullable<int> BedroomsCount
		{
			get
			{
				return this._BedroomsCount;
			}
			set
			{
				if ((this._BedroomsCount != value))
				{
					this.OnBedroomsCountChanging(value);
					this.SendPropertyChanging();
					this._BedroomsCount = value;
					this.SendPropertyChanged("BedroomsCount");
					this.OnBedroomsCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaywindowsCount", DbType="Int")]
		public System.Nullable<int> BaywindowsCount
		{
			get
			{
				return this._BaywindowsCount;
			}
			set
			{
				if ((this._BaywindowsCount != value))
				{
					this.OnBaywindowsCountChanging(value);
					this.SendPropertyChanging();
					this._BaywindowsCount = value;
					this.SendPropertyChanged("BaywindowsCount");
					this.OnBaywindowsCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Roof", DbType="BigInt")]
		public System.Nullable<long> Roof
		{
			get
			{
				return this._Roof;
			}
			set
			{
				if ((this._Roof != value))
				{
					this.OnRoofChanging(value);
					this.SendPropertyChanging();
					this._Roof = value;
					this.SendPropertyChanged("Roof");
					this.OnRoofChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectName", DbType="NVarChar(MAX)")]
		public string ObjectName
		{
			get
			{
				return this._ObjectName;
			}
			set
			{
				if ((this._ObjectName != value))
				{
					this.OnObjectNameChanging(value);
					this.SendPropertyChanging();
					this._ObjectName = value;
					this.SendPropertyChanged("ObjectName");
					this.OnObjectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fencing", DbType="BigInt")]
		public System.Nullable<long> Fencing
		{
			get
			{
				return this._Fencing;
			}
			set
			{
				if ((this._Fencing != value))
				{
					this.OnFencingChanging(value);
					this.SendPropertyChanging();
					this._Fencing = value;
					this.SendPropertyChanged("Fencing");
					this.OnFencingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomPlanning", DbType="BigInt")]
		public System.Nullable<long> RoomPlanning
		{
			get
			{
				return this._RoomPlanning;
			}
			set
			{
				if ((this._RoomPlanning != value))
				{
					this.OnRoomPlanningChanging(value);
					this.SendPropertyChanging();
					this._RoomPlanning = value;
					this.SendPropertyChanged("RoomPlanning");
					this.OnRoomPlanningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Basement", DbType="NVarChar(255)")]
		public string Basement
		{
			get
			{
				return this._Basement;
			}
			set
			{
				if ((this._Basement != value))
				{
					this.OnBasementChanging(value);
					this.SendPropertyChanging();
					this._Basement = value;
					this.SendPropertyChanged("Basement");
					this.OnBasementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CorrectPlanning", DbType="Bit")]
		public System.Nullable<bool> CorrectPlanning
		{
			get
			{
				return this._CorrectPlanning;
			}
			set
			{
				if ((this._CorrectPlanning != value))
				{
					this.OnCorrectPlanningChanging(value);
					this.SendPropertyChanging();
					this._CorrectPlanning = value;
					this.SendPropertyChanged("CorrectPlanning");
					this.OnCorrectPlanningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlatLocation", DbType="BigInt")]
		public System.Nullable<long> FlatLocation
		{
			get
			{
				return this._FlatLocation;
			}
			set
			{
				if ((this._FlatLocation != value))
				{
					this.OnFlatLocationChanging(value);
					this.SendPropertyChanging();
					this._FlatLocation = value;
					this.SendPropertyChanged("FlatLocation");
					this.OnFlatLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WindowsLocation", DbType="NVarChar(255)")]
		public string WindowsLocation
		{
			get
			{
				return this._WindowsLocation;
			}
			set
			{
				if ((this._WindowsLocation != value))
				{
					this.OnWindowsLocationChanging(value);
					this.SendPropertyChanging();
					this._WindowsLocation = value;
					this.SendPropertyChanged("WindowsLocation");
					this.OnWindowsLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WindowsMaterial", DbType="NVarChar(255)")]
		public string WindowsMaterial
		{
			get
			{
				return this._WindowsMaterial;
			}
			set
			{
				if ((this._WindowsMaterial != value))
				{
					this.OnWindowsMaterialChanging(value);
					this.SendPropertyChanging();
					this._WindowsMaterial = value;
					this.SendPropertyChanged("WindowsMaterial");
					this.OnWindowsMaterialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Redesign", DbType="Bit")]
		public System.Nullable<bool> Redesign
		{
			get
			{
				return this._Redesign;
			}
			set
			{
				if ((this._Redesign != value))
				{
					this.OnRedesignChanging(value);
					this.SendPropertyChanging();
					this._Redesign = value;
					this.SendPropertyChanged("Redesign");
					this.OnRedesignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RedesignLegality", DbType="Bit")]
		public System.Nullable<bool> RedesignLegality
		{
			get
			{
				return this._RedesignLegality;
			}
			set
			{
				if ((this._RedesignLegality != value))
				{
					this.OnRedesignLegalityChanging(value);
					this.SendPropertyChanging();
					this._RedesignLegality = value;
					this.SendPropertyChanged("RedesignLegality");
					this.OnRedesignLegalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlotForm", DbType="BigInt")]
		public System.Nullable<long> PlotForm
		{
			get
			{
				return this._PlotForm;
			}
			set
			{
				if ((this._PlotForm != value))
				{
					this.OnPlotFormChanging(value);
					this.SendPropertyChanging();
					this._PlotForm = value;
					this.SendPropertyChanged("PlotForm");
					this.OnPlotFormChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlatRoomsCount", DbType="Int")]
		public System.Nullable<int> FlatRoomsCount
		{
			get
			{
				return this._FlatRoomsCount;
			}
			set
			{
				if ((this._FlatRoomsCount != value))
				{
					this.OnFlatRoomsCountChanging(value);
					this.SendPropertyChanging();
					this._FlatRoomsCount = value;
					this.SendPropertyChanged("FlatRoomsCount");
					this.OnFlatRoomsCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErkersCount", DbType="Int")]
		public System.Nullable<int> ErkersCount
		{
			get
			{
				return this._ErkersCount;
			}
			set
			{
				if ((this._ErkersCount != value))
				{
					this.OnErkersCountChanging(value);
					this.SendPropertyChanging();
					this._ErkersCount = value;
					this.SendPropertyChanged("ErkersCount");
					this.OnErkersCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationPosibility", DbType="Bit")]
		public System.Nullable<bool> RegistrationPosibility
		{
			get
			{
				return this._RegistrationPosibility;
			}
			set
			{
				if ((this._RegistrationPosibility != value))
				{
					this.OnRegistrationPosibilityChanging(value);
					this.SendPropertyChanging();
					this._RegistrationPosibility = value;
					this.SendPropertyChanged("RegistrationPosibility");
					this.OnRegistrationPosibilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerPart", DbType="BigInt")]
		public System.Nullable<long> OwnerPart
		{
			get
			{
				return this._OwnerPart;
			}
			set
			{
				if ((this._OwnerPart != value))
				{
					this.OnOwnerPartChanging(value);
					this.SendPropertyChanging();
					this._OwnerPart = value;
					this.SendPropertyChanged("OwnerPart");
					this.OnOwnerPartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Burdens", DbType="BigInt")]
		public System.Nullable<long> Burdens
		{
			get
			{
				return this._Burdens;
			}
			set
			{
				if ((this._Burdens != value))
				{
					this.OnBurdensChanging(value);
					this.SendPropertyChanging();
					this._Burdens = value;
					this.SendPropertyChanged("Burdens");
					this.OnBurdensChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RentDate", DbType="Date")]
		public System.Nullable<System.DateTime> RentDate
		{
			get
			{
				return this._RentDate;
			}
			set
			{
				if ((this._RentDate != value))
				{
					this.OnRentDateChanging(value);
					this.SendPropertyChanging();
					this._RentDate = value;
					this.SendPropertyChanged("RentDate");
					this.OnRentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Court", DbType="BigInt")]
		public System.Nullable<long> Court
		{
			get
			{
				return this._Court;
			}
			set
			{
				if ((this._Court != value))
				{
					this.OnCourtChanging(value);
					this.SendPropertyChanging();
					this._Court = value;
					this.SendPropertyChanged("Court");
					this.OnCourtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fence", DbType="BigInt")]
		public System.Nullable<long> Fence
		{
			get
			{
				return this._Fence;
			}
			set
			{
				if ((this._Fence != value))
				{
					this.OnFenceChanging(value);
					this.SendPropertyChanging();
					this._Fence = value;
					this.SendPropertyChanged("Fence");
					this.OnFenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Loading", DbType="NVarChar(255)")]
		public string Loading
		{
			get
			{
				return this._Loading;
			}
			set
			{
				if ((this._Loading != value))
				{
					this.OnLoadingChanging(value);
					this.SendPropertyChanging();
					this._Loading = value;
					this.SendPropertyChanged("Loading");
					this.OnLoadingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Environment", DbType="BigInt")]
		public System.Nullable<long> Environment
		{
			get
			{
				return this._Environment;
			}
			set
			{
				if ((this._Environment != value))
				{
					this.OnEnvironmentChanging(value);
					this.SendPropertyChanging();
					this._Environment = value;
					this.SendPropertyChanged("Environment");
					this.OnEnvironmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RentWithServices", DbType="Bit")]
		public System.Nullable<bool> RentWithServices
		{
			get
			{
				return this._RentWithServices;
			}
			set
			{
				if ((this._RentWithServices != value))
				{
					this.OnRentWithServicesChanging(value);
					this.SendPropertyChanging();
					this._RentWithServices = value;
					this.SendPropertyChanged("RentWithServices");
					this.OnRentWithServicesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Auction", DbType="Bit")]
		public System.Nullable<bool> Auction
		{
			get
			{
				return this._Auction;
			}
			set
			{
				if ((this._Auction != value))
				{
					this.OnAuctionChanging(value);
					this.SendPropertyChanging();
					this._Auction = value;
					this.SendPropertyChanged("Auction");
					this.OnAuctionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Placement", DbType="BigInt")]
		public System.Nullable<long> Placement
		{
			get
			{
				return this._Placement;
			}
			set
			{
				if ((this._Placement != value))
				{
					this.OnPlacementChanging(value);
					this.SendPropertyChanging();
					this._Placement = value;
					this.SendPropertyChanged("Placement");
					this.OnPlacementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgreementType", DbType="BigInt")]
		public System.Nullable<long> AgreementType
		{
			get
			{
				return this._AgreementType;
			}
			set
			{
				if ((this._AgreementType != value))
				{
					this.OnAgreementTypeChanging(value);
					this.SendPropertyChanging();
					this._AgreementType = value;
					this.SendPropertyChanged("AgreementType");
					this.OnAgreementTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgreementNumber", DbType="NVarChar(MAX)")]
		public string AgreementNumber
		{
			get
			{
				return this._AgreementNumber;
			}
			set
			{
				if ((this._AgreementNumber != value))
				{
					this.OnAgreementNumberChanging(value);
					this.SendPropertyChanging();
					this._AgreementNumber = value;
					this.SendPropertyChanged("AgreementNumber");
					this.OnAgreementNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgreementStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AgreementStartDate
		{
			get
			{
				return this._AgreementStartDate;
			}
			set
			{
				if ((this._AgreementStartDate != value))
				{
					this.OnAgreementStartDateChanging(value);
					this.SendPropertyChanging();
					this._AgreementStartDate = value;
					this.SendPropertyChanged("AgreementStartDate");
					this.OnAgreementStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgreementEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AgreementEndDate
		{
			get
			{
				return this._AgreementEndDate;
			}
			set
			{
				if ((this._AgreementEndDate != value))
				{
					this.OnAgreementEndDateChanging(value);
					this.SendPropertyChanging();
					this._AgreementEndDate = value;
					this.SendPropertyChanged("AgreementEndDate");
					this.OnAgreementEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comission", DbType="NVarChar(MAX)")]
		public string Comission
		{
			get
			{
				return this._Comission;
			}
			set
			{
				if ((this._Comission != value))
				{
					this.OnComissionChanging(value);
					this.SendPropertyChanging();
					this._Comission = value;
					this.SendPropertyChanged("Comission");
					this.OnComissionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgencyPayment", DbType="Bit")]
		public System.Nullable<bool> AgencyPayment
		{
			get
			{
				return this._AgencyPayment;
			}
			set
			{
				if ((this._AgencyPayment != value))
				{
					this.OnAgencyPaymentChanging(value);
					this.SendPropertyChanging();
					this._AgencyPayment = value;
					this.SendPropertyChanged("AgencyPayment");
					this.OnAgencyPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentCondition", DbType="NVarChar(MAX)")]
		public string PaymentCondition
		{
			get
			{
				return this._PaymentCondition;
			}
			set
			{
				if ((this._PaymentCondition != value))
				{
					this.OnPaymentConditionChanging(value);
					this.SendPropertyChanging();
					this._PaymentCondition = value;
					this.SendPropertyChanged("PaymentCondition");
					this.OnPaymentConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstateObject_ObjectAdditionalProperty", Storage="_EstateObject", ThisKey="ObjectId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EstateObject EstateObject
		{
			get
			{
				return this._EstateObject.Entity;
			}
			set
			{
				EstateObject previousValue = this._EstateObject.Entity;
				if (((previousValue != value) 
							|| (this._EstateObject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EstateObject.Entity = null;
						previousValue.ObjectAdditionalProperties = null;
					}
					this._EstateObject.Entity = value;
					if ((value != null))
					{
						value.ObjectAdditionalProperties = this;
						this._ObjectId = value.Id;
					}
					else
					{
						this._ObjectId = default(long);
					}
					this.SendPropertyChanged("EstateObject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClientReviews")]
	public partial class ClientReview : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _UserId;
		
		private long _ObjectId;
		
		private System.DateTime _ReviewDate;
		
		private string _Description;
		
		private string _ScanUrl;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private short _Operation;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnObjectIdChanging(long value);
    partial void OnObjectIdChanged();
    partial void OnReviewDateChanging(System.DateTime value);
    partial void OnReviewDateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnScanUrlChanging(string value);
    partial void OnScanUrlChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnOperationChanging(short value);
    partial void OnOperationChanged();
    #endregion
		
		public ClientReview()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectId", DbType="BigInt NOT NULL")]
		public long ObjectId
		{
			get
			{
				return this._ObjectId;
			}
			set
			{
				if ((this._ObjectId != value))
				{
					this.OnObjectIdChanging(value);
					this.SendPropertyChanging();
					this._ObjectId = value;
					this.SendPropertyChanged("ObjectId");
					this.OnObjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReviewDate", DbType="DateTime NOT NULL")]
		public System.DateTime ReviewDate
		{
			get
			{
				return this._ReviewDate;
			}
			set
			{
				if ((this._ReviewDate != value))
				{
					this.OnReviewDateChanging(value);
					this.SendPropertyChanging();
					this._ReviewDate = value;
					this.SendPropertyChanged("ReviewDate");
					this.OnReviewDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScanUrl", DbType="NVarChar(MAX)")]
		public string ScanUrl
		{
			get
			{
				return this._ScanUrl;
			}
			set
			{
				if ((this._ScanUrl != value))
				{
					this.OnScanUrlChanging(value);
					this.SendPropertyChanging();
					this._ScanUrl = value;
					this.SendPropertyChanged("ScanUrl");
					this.OnScanUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Operation", DbType="SmallInt NOT NULL")]
		public short Operation
		{
			get
			{
				return this._Operation;
			}
			set
			{
				if ((this._Operation != value))
				{
					this.OnOperationChanging(value);
					this.SendPropertyChanging();
					this._Operation = value;
					this.SendPropertyChanged("Operation");
					this.OnOperationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ClientReview", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ClientReviews.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ClientReviews.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceLogItems")]
	public partial class ServiceLogItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _ServiceId;
		
		private decimal _Volume;
		
		private decimal _Summary;
		
		private decimal _RDVSummary;
		
		private long _UserId;
		
		private long _CompanyId;
		
		private System.Nullable<System.DateTime> _OrderDate;
		
		private System.Nullable<System.DateTime> _PaymentDate;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<User> _User;
		
		private EntityRef<ServiceType> _ServiceType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnServiceIdChanging(long value);
    partial void OnServiceIdChanged();
    partial void OnVolumeChanging(decimal value);
    partial void OnVolumeChanged();
    partial void OnSummaryChanging(decimal value);
    partial void OnSummaryChanged();
    partial void OnRDVSummaryChanging(decimal value);
    partial void OnRDVSummaryChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnCompanyIdChanging(long value);
    partial void OnCompanyIdChanged();
    partial void OnOrderDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOrderDateChanged();
    partial void OnPaymentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPaymentDateChanged();
    #endregion
		
		public ServiceLogItem()
		{
			this._Company = default(EntityRef<Company>);
			this._User = default(EntityRef<User>);
			this._ServiceType = default(EntityRef<ServiceType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceId", DbType="BigInt NOT NULL")]
		public long ServiceId
		{
			get
			{
				return this._ServiceId;
			}
			set
			{
				if ((this._ServiceId != value))
				{
					if (this._ServiceType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIdChanging(value);
					this.SendPropertyChanging();
					this._ServiceId = value;
					this.SendPropertyChanged("ServiceId");
					this.OnServiceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume", DbType="Money NOT NULL")]
		public decimal Volume
		{
			get
			{
				return this._Volume;
			}
			set
			{
				if ((this._Volume != value))
				{
					this.OnVolumeChanging(value);
					this.SendPropertyChanging();
					this._Volume = value;
					this.SendPropertyChanged("Volume");
					this.OnVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="Money NOT NULL")]
		public decimal Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RDVSummary", DbType="Money NOT NULL")]
		public decimal RDVSummary
		{
			get
			{
				return this._RDVSummary;
			}
			set
			{
				if ((this._RDVSummary != value))
				{
					this.OnRDVSummaryChanging(value);
					this.SendPropertyChanging();
					this._RDVSummary = value;
					this.SendPropertyChanged("RDVSummary");
					this.OnRDVSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="BigInt NOT NULL")]
		public long CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OrderDate
		{
			get
			{
				return this._OrderDate;
			}
			set
			{
				if ((this._OrderDate != value))
				{
					this.OnOrderDateChanging(value);
					this.SendPropertyChanging();
					this._OrderDate = value;
					this.SendPropertyChanged("OrderDate");
					this.OnOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this.OnPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentDate = value;
					this.SendPropertyChanged("PaymentDate");
					this.OnPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_ServiceLogItem", Storage="_Company", ThisKey="CompanyId", OtherKey="Id", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.ProvidedServices.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.ProvidedServices.Add(this);
						this._CompanyId = value.Id;
					}
					else
					{
						this._CompanyId = default(long);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ServiceLogItem", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ProvidedServices.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ProvidedServices.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceType_ServiceLogItem", Storage="_ServiceType", ThisKey="ServiceId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ServiceType ServiceType
		{
			get
			{
				return this._ServiceType.Entity;
			}
			set
			{
				ServiceType previousValue = this._ServiceType.Entity;
				if (((previousValue != value) 
							|| (this._ServiceType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceType.Entity = null;
						previousValue.ServiceLogItems.Remove(this);
					}
					this._ServiceType.Entity = value;
					if ((value != null))
					{
						value.ServiceLogItems.Add(this);
						this._ServiceId = value.Id;
					}
					else
					{
						this._ServiceId = default(long);
					}
					this.SendPropertyChanged("ServiceType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceTypes")]
	public partial class ServiceType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _ServiceName;
		
		private long _ProvidedId;
		
		private decimal _Tax;
		
		private System.Nullable<long> _Measure;
		
		private string _Description;
		
		private System.Nullable<long> _Subject;
		
		private string _Geo;
		
		private short _ServiceStatus;
		
		private decimal _RDVShare;
		
		private string _Rules;
		
		private string _Examples;
		
		private string _ContractNumber;
		
		private System.Nullable<System.DateTime> _ContractDate;
		
		private string _ContractScan;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private long _CreatedBy;
		
		private long _ModifiedBy;
		
		private EntitySet<ServiceLogItem> _ServiceLogItems;
		
		private EntityRef<Company> _Company;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnServiceNameChanging(string value);
    partial void OnServiceNameChanged();
    partial void OnProvidedIdChanging(long value);
    partial void OnProvidedIdChanged();
    partial void OnTaxChanging(decimal value);
    partial void OnTaxChanged();
    partial void OnMeasureChanging(System.Nullable<long> value);
    partial void OnMeasureChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSubjectChanging(System.Nullable<long> value);
    partial void OnSubjectChanged();
    partial void OnGeoChanging(string value);
    partial void OnGeoChanged();
    partial void OnServiceStatusChanging(short value);
    partial void OnServiceStatusChanged();
    partial void OnRDVShareChanging(decimal value);
    partial void OnRDVShareChanged();
    partial void OnRulesChanging(string value);
    partial void OnRulesChanged();
    partial void OnExamplesChanging(string value);
    partial void OnExamplesChanged();
    partial void OnContractNumberChanging(string value);
    partial void OnContractNumberChanged();
    partial void OnContractDateChanging(System.Nullable<System.DateTime> value);
    partial void OnContractDateChanged();
    partial void OnContractScanChanging(string value);
    partial void OnContractScanChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnCreatedByChanging(long value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(long value);
    partial void OnModifiedByChanged();
    #endregion
		
		public ServiceType()
		{
			this._ServiceLogItems = new EntitySet<ServiceLogItem>(new Action<ServiceLogItem>(this.attach_ServiceLogItems), new Action<ServiceLogItem>(this.detach_ServiceLogItems));
			this._Company = default(EntityRef<Company>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ServiceName
		{
			get
			{
				return this._ServiceName;
			}
			set
			{
				if ((this._ServiceName != value))
				{
					this.OnServiceNameChanging(value);
					this.SendPropertyChanging();
					this._ServiceName = value;
					this.SendPropertyChanged("ServiceName");
					this.OnServiceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvidedId", DbType="BigInt NOT NULL")]
		public long ProvidedId
		{
			get
			{
				return this._ProvidedId;
			}
			set
			{
				if ((this._ProvidedId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProvidedIdChanging(value);
					this.SendPropertyChanging();
					this._ProvidedId = value;
					this.SendPropertyChanged("ProvidedId");
					this.OnProvidedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax", DbType="Money NOT NULL")]
		public decimal Tax
		{
			get
			{
				return this._Tax;
			}
			set
			{
				if ((this._Tax != value))
				{
					this.OnTaxChanging(value);
					this.SendPropertyChanging();
					this._Tax = value;
					this.SendPropertyChanged("Tax");
					this.OnTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Measure", DbType="BigInt")]
		public System.Nullable<long> Measure
		{
			get
			{
				return this._Measure;
			}
			set
			{
				if ((this._Measure != value))
				{
					this.OnMeasureChanging(value);
					this.SendPropertyChanging();
					this._Measure = value;
					this.SendPropertyChanged("Measure");
					this.OnMeasureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="BigInt")]
		public System.Nullable<long> Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Geo", DbType="NVarChar(MAX)")]
		public string Geo
		{
			get
			{
				return this._Geo;
			}
			set
			{
				if ((this._Geo != value))
				{
					this.OnGeoChanging(value);
					this.SendPropertyChanging();
					this._Geo = value;
					this.SendPropertyChanged("Geo");
					this.OnGeoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceStatus", DbType="SmallInt NOT NULL")]
		public short ServiceStatus
		{
			get
			{
				return this._ServiceStatus;
			}
			set
			{
				if ((this._ServiceStatus != value))
				{
					this.OnServiceStatusChanging(value);
					this.SendPropertyChanging();
					this._ServiceStatus = value;
					this.SendPropertyChanged("ServiceStatus");
					this.OnServiceStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RDVShare", DbType="Money NOT NULL")]
		public decimal RDVShare
		{
			get
			{
				return this._RDVShare;
			}
			set
			{
				if ((this._RDVShare != value))
				{
					this.OnRDVShareChanging(value);
					this.SendPropertyChanging();
					this._RDVShare = value;
					this.SendPropertyChanged("RDVShare");
					this.OnRDVShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rules", DbType="NVarChar(MAX)")]
		public string Rules
		{
			get
			{
				return this._Rules;
			}
			set
			{
				if ((this._Rules != value))
				{
					this.OnRulesChanging(value);
					this.SendPropertyChanging();
					this._Rules = value;
					this.SendPropertyChanged("Rules");
					this.OnRulesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Examples", DbType="NVarChar(MAX)")]
		public string Examples
		{
			get
			{
				return this._Examples;
			}
			set
			{
				if ((this._Examples != value))
				{
					this.OnExamplesChanging(value);
					this.SendPropertyChanging();
					this._Examples = value;
					this.SendPropertyChanged("Examples");
					this.OnExamplesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractNumber", DbType="NVarChar(255)")]
		public string ContractNumber
		{
			get
			{
				return this._ContractNumber;
			}
			set
			{
				if ((this._ContractNumber != value))
				{
					this.OnContractNumberChanging(value);
					this.SendPropertyChanging();
					this._ContractNumber = value;
					this.SendPropertyChanged("ContractNumber");
					this.OnContractNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ContractDate
		{
			get
			{
				return this._ContractDate;
			}
			set
			{
				if ((this._ContractDate != value))
				{
					this.OnContractDateChanging(value);
					this.SendPropertyChanging();
					this._ContractDate = value;
					this.SendPropertyChanged("ContractDate");
					this.OnContractDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractScan", DbType="NVarChar(MAX)")]
		public string ContractScan
		{
			get
			{
				return this._ContractScan;
			}
			set
			{
				if ((this._ContractScan != value))
				{
					this.OnContractScanChanging(value);
					this.SendPropertyChanging();
					this._ContractScan = value;
					this.SendPropertyChanged("ContractScan");
					this.OnContractScanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt NOT NULL")]
		public long CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt NOT NULL")]
		public long ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceType_ServiceLogItem", Storage="_ServiceLogItems", ThisKey="Id", OtherKey="ServiceId")]
		public EntitySet<ServiceLogItem> ServiceLogItems
		{
			get
			{
				return this._ServiceLogItems;
			}
			set
			{
				this._ServiceLogItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_ServiceType", Storage="_Company", ThisKey="ProvidedId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.ServiceTypes.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.ServiceTypes.Add(this);
						this._ProvidedId = value.Id;
					}
					else
					{
						this._ProvidedId = default(long);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ServiceLogItems(ServiceLogItem entity)
		{
			this.SendPropertyChanging();
			entity.ServiceType = this;
		}
		
		private void detach_ServiceLogItems(ServiceLogItem entity)
		{
			this.SendPropertyChanging();
			entity.ServiceType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Partners")]
	public partial class Partner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private string _Url;
		
		private string _InactiveImageUrl;
		
		private string _ActiveImageUrl;
		
		private int _Position;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnInactiveImageUrlChanging(string value);
    partial void OnInactiveImageUrlChanged();
    partial void OnActiveImageUrlChanging(string value);
    partial void OnActiveImageUrlChanged();
    partial void OnPositionChanging(int value);
    partial void OnPositionChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    #endregion
		
		public Partner()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(255)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InactiveImageUrl", DbType="NVarChar(255)")]
		public string InactiveImageUrl
		{
			get
			{
				return this._InactiveImageUrl;
			}
			set
			{
				if ((this._InactiveImageUrl != value))
				{
					this.OnInactiveImageUrlChanging(value);
					this.SendPropertyChanging();
					this._InactiveImageUrl = value;
					this.SendPropertyChanged("InactiveImageUrl");
					this.OnInactiveImageUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveImageUrl", DbType="NVarChar(255)")]
		public string ActiveImageUrl
		{
			get
			{
				return this._ActiveImageUrl;
			}
			set
			{
				if ((this._ActiveImageUrl != value))
				{
					this.OnActiveImageUrlChanging(value);
					this.SendPropertyChanging();
					this._ActiveImageUrl = value;
					this.SendPropertyChanged("ActiveImageUrl");
					this.OnActiveImageUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="Int NOT NULL")]
		public int Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Books")]
	public partial class Book : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Title;
		
		private string _Publisher;
		
		private decimal _Price;
		
		private string _Description;
		
		private string _Picture;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private string _Author;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnPublisherChanging(string value);
    partial void OnPublisherChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPictureChanging(string value);
    partial void OnPictureChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    #endregion
		
		public Book()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Publisher", DbType="NVarChar(MAX)")]
		public string Publisher
		{
			get
			{
				return this._Publisher;
			}
			set
			{
				if ((this._Publisher != value))
				{
					this.OnPublisherChanging(value);
					this.SendPropertyChanging();
					this._Publisher = value;
					this.SendPropertyChanged("Publisher");
					this.OnPublisherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="NVarChar(255)")]
		public string Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="NVarChar(255)")]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this.OnAuthorChanging(value);
					this.SendPropertyChanging();
					this._Author = value;
					this.SendPropertyChanged("Author");
					this.OnAuthorChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SystemStats")]
	public partial class SystemStat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private short _StatType;
		
		private System.DateTime _StatDateTime;
		
		private decimal _Value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnStatTypeChanging(short value);
    partial void OnStatTypeChanged();
    partial void OnStatDateTimeChanging(System.DateTime value);
    partial void OnStatDateTimeChanged();
    partial void OnValueChanging(decimal value);
    partial void OnValueChanged();
    #endregion
		
		public SystemStat()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatType", DbType="SmallInt NOT NULL")]
		public short StatType
		{
			get
			{
				return this._StatType;
			}
			set
			{
				if ((this._StatType != value))
				{
					this.OnStatTypeChanging(value);
					this.SendPropertyChanging();
					this._StatType = value;
					this.SendPropertyChanged("StatType");
					this.OnStatTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime StatDateTime
		{
			get
			{
				return this._StatDateTime;
			}
			set
			{
				if ((this._StatDateTime != value))
				{
					this.OnStatDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StatDateTime = value;
					this.SendPropertyChanged("StatDateTime");
					this.OnStatDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Money NOT NULL")]
		public decimal Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NonRdvAgents")]
	public partial class NonRdvAgent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _SurName;
		
		private string _Phone;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private EntitySet<ObjectHistoryItem> _ObjectHistoryItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnSurNameChanging(string value);
    partial void OnSurNameChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public NonRdvAgent()
		{
			this._ObjectHistoryItems = new EntitySet<ObjectHistoryItem>(new Action<ObjectHistoryItem>(this.attach_ObjectHistoryItems), new Action<ObjectHistoryItem>(this.detach_ObjectHistoryItems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(255)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(255)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurName", DbType="NVarChar(255)")]
		public string SurName
		{
			get
			{
				return this._SurName;
			}
			set
			{
				if ((this._SurName != value))
				{
					this.OnSurNameChanging(value);
					this.SendPropertyChanging();
					this._SurName = value;
					this.SendPropertyChanged("SurName");
					this.OnSurNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NonRdvAgent_ObjectHistoryItem", Storage="_ObjectHistoryItems", ThisKey="Id", OtherKey="NonRDVAgentId")]
		public EntitySet<ObjectHistoryItem> ObjectHistoryItems
		{
			get
			{
				return this._ObjectHistoryItems;
			}
			set
			{
				this._ObjectHistoryItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ObjectHistoryItems(ObjectHistoryItem entity)
		{
			this.SendPropertyChanging();
			entity.NonRdvAgent = this;
		}
		
		private void detach_ObjectHistoryItems(ObjectHistoryItem entity)
		{
			this.SendPropertyChanging();
			entity.NonRdvAgent = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ObjectHistory")]
	public partial class ObjectHistoryItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _ObjectId;
		
		private short _HistoryStatus;
		
		private long _ClientId;
		
		private long _CompanyId;
		
		private string _CustomerName;
		
		private System.Nullable<System.DateTime> _DelayDate;
		
		private System.Nullable<long> _DelayReason;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private long _CreatedBy;
		
		private System.Nullable<System.DateTime> _AdvanceEndDate;
		
		private long _RDVAgentId;
		
		private long _NonRDVAgentId;
		
		private EntityRef<EstateObject> _EstateObject;
		
		private EntityRef<NonRdvAgent> _NonRdvAgent;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnObjectIdChanging(long value);
    partial void OnObjectIdChanged();
    partial void OnHistoryStatusChanging(short value);
    partial void OnHistoryStatusChanged();
    partial void OnClientIdChanging(long value);
    partial void OnClientIdChanged();
    partial void OnCompanyIdChanging(long value);
    partial void OnCompanyIdChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnDelayDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDelayDateChanged();
    partial void OnDelayReasonChanging(System.Nullable<long> value);
    partial void OnDelayReasonChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnCreatedByChanging(long value);
    partial void OnCreatedByChanged();
    partial void OnAdvanceEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAdvanceEndDateChanged();
    partial void OnRDVAgentIdChanging(long value);
    partial void OnRDVAgentIdChanged();
    partial void OnNonRDVAgentIdChanging(long value);
    partial void OnNonRDVAgentIdChanged();
    #endregion
		
		public ObjectHistoryItem()
		{
			this._EstateObject = default(EntityRef<EstateObject>);
			this._NonRdvAgent = default(EntityRef<NonRdvAgent>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectId", DbType="BigInt NOT NULL")]
		public long ObjectId
		{
			get
			{
				return this._ObjectId;
			}
			set
			{
				if ((this._ObjectId != value))
				{
					if (this._EstateObject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectIdChanging(value);
					this.SendPropertyChanging();
					this._ObjectId = value;
					this.SendPropertyChanged("ObjectId");
					this.OnObjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HistoryStatus", DbType="SmallInt NOT NULL")]
		public short HistoryStatus
		{
			get
			{
				return this._HistoryStatus;
			}
			set
			{
				if ((this._HistoryStatus != value))
				{
					this.OnHistoryStatusChanging(value);
					this.SendPropertyChanging();
					this._HistoryStatus = value;
					this.SendPropertyChanged("HistoryStatus");
					this.OnHistoryStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="BigInt NOT NULL")]
		public long ClientId
		{
			get
			{
				return this._ClientId;
			}
			set
			{
				if ((this._ClientId != value))
				{
					this.OnClientIdChanging(value);
					this.SendPropertyChanging();
					this._ClientId = value;
					this.SendPropertyChanged("ClientId");
					this.OnClientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="BigInt NOT NULL")]
		public long CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(4000)")]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelayDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DelayDate
		{
			get
			{
				return this._DelayDate;
			}
			set
			{
				if ((this._DelayDate != value))
				{
					this.OnDelayDateChanging(value);
					this.SendPropertyChanging();
					this._DelayDate = value;
					this.SendPropertyChanged("DelayDate");
					this.OnDelayDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelayReason", DbType="BigInt")]
		public System.Nullable<long> DelayReason
		{
			get
			{
				return this._DelayReason;
			}
			set
			{
				if ((this._DelayReason != value))
				{
					this.OnDelayReasonChanging(value);
					this.SendPropertyChanging();
					this._DelayReason = value;
					this.SendPropertyChanged("DelayReason");
					this.OnDelayReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt NOT NULL")]
		public long CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvanceEndDate", DbType="Date")]
		public System.Nullable<System.DateTime> AdvanceEndDate
		{
			get
			{
				return this._AdvanceEndDate;
			}
			set
			{
				if ((this._AdvanceEndDate != value))
				{
					this.OnAdvanceEndDateChanging(value);
					this.SendPropertyChanging();
					this._AdvanceEndDate = value;
					this.SendPropertyChanged("AdvanceEndDate");
					this.OnAdvanceEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RDVAgentId", DbType="BigInt NOT NULL")]
		public long RDVAgentId
		{
			get
			{
				return this._RDVAgentId;
			}
			set
			{
				if ((this._RDVAgentId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRDVAgentIdChanging(value);
					this.SendPropertyChanging();
					this._RDVAgentId = value;
					this.SendPropertyChanged("RDVAgentId");
					this.OnRDVAgentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NonRDVAgentId", DbType="BigInt NOT NULL")]
		public long NonRDVAgentId
		{
			get
			{
				return this._NonRDVAgentId;
			}
			set
			{
				if ((this._NonRDVAgentId != value))
				{
					if (this._NonRdvAgent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNonRDVAgentIdChanging(value);
					this.SendPropertyChanging();
					this._NonRDVAgentId = value;
					this.SendPropertyChanged("NonRDVAgentId");
					this.OnNonRDVAgentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstateObject_ObjectHistoryItem", Storage="_EstateObject", ThisKey="ObjectId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EstateObject EstateObject
		{
			get
			{
				return this._EstateObject.Entity;
			}
			set
			{
				EstateObject previousValue = this._EstateObject.Entity;
				if (((previousValue != value) 
							|| (this._EstateObject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EstateObject.Entity = null;
						previousValue.ObjectHistoryItems.Remove(this);
					}
					this._EstateObject.Entity = value;
					if ((value != null))
					{
						value.ObjectHistoryItems.Add(this);
						this._ObjectId = value.Id;
					}
					else
					{
						this._ObjectId = default(long);
					}
					this.SendPropertyChanged("EstateObject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NonRdvAgent_ObjectHistoryItem", Storage="_NonRdvAgent", ThisKey="NonRDVAgentId", OtherKey="Id", IsForeignKey=true)]
		public NonRdvAgent NonRdvAgent
		{
			get
			{
				return this._NonRdvAgent.Entity;
			}
			set
			{
				NonRdvAgent previousValue = this._NonRdvAgent.Entity;
				if (((previousValue != value) 
							|| (this._NonRdvAgent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NonRdvAgent.Entity = null;
						previousValue.ObjectHistoryItems.Remove(this);
					}
					this._NonRdvAgent.Entity = value;
					if ((value != null))
					{
						value.ObjectHistoryItems.Add(this);
						this._NonRDVAgentId = value.Id;
					}
					else
					{
						this._NonRDVAgentId = default(long);
					}
					this.SendPropertyChanged("NonRdvAgent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ObjectHistoryItem", Storage="_User", ThisKey="RDVAgentId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ObjectHistoryItems.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ObjectHistoryItems.Add(this);
						this._RDVAgentId = value.Id;
					}
					else
					{
						this._RDVAgentId = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EstateObjectMatchedSearchRequestComments")]
	public partial class EstateObjectMatchedSearchRequestComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _MatchedRequestId;
		
		private long _UserId;
		
		private string _Text;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private EntityRef<EstateObjectMatchedSearchRequest> _EstateObjectMatchedSearchRequest;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnMatchedRequestIdChanging(long value);
    partial void OnMatchedRequestIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public EstateObjectMatchedSearchRequestComment()
		{
			this._EstateObjectMatchedSearchRequest = default(EntityRef<EstateObjectMatchedSearchRequest>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatchedRequestId", DbType="BigInt NOT NULL")]
		public long MatchedRequestId
		{
			get
			{
				return this._MatchedRequestId;
			}
			set
			{
				if ((this._MatchedRequestId != value))
				{
					if (this._EstateObjectMatchedSearchRequest.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMatchedRequestIdChanging(value);
					this.SendPropertyChanging();
					this._MatchedRequestId = value;
					this.SendPropertyChanged("MatchedRequestId");
					this.OnMatchedRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(MAX)")]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstateObjectMatchedSearchRequest_EstateObjectMatchedSearchRequestComment", Storage="_EstateObjectMatchedSearchRequest", ThisKey="MatchedRequestId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EstateObjectMatchedSearchRequest EstateObjectMatchedSearchRequest
		{
			get
			{
				return this._EstateObjectMatchedSearchRequest.Entity;
			}
			set
			{
				EstateObjectMatchedSearchRequest previousValue = this._EstateObjectMatchedSearchRequest.Entity;
				if (((previousValue != value) 
							|| (this._EstateObjectMatchedSearchRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EstateObjectMatchedSearchRequest.Entity = null;
						previousValue.EstateObjectMatchedSearchRequestComments.Remove(this);
					}
					this._EstateObjectMatchedSearchRequest.Entity = value;
					if ((value != null))
					{
						value.EstateObjectMatchedSearchRequestComments.Add(this);
						this._MatchedRequestId = value.Id;
					}
					else
					{
						this._MatchedRequestId = default(long);
					}
					this.SendPropertyChanged("EstateObjectMatchedSearchRequest");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EstateObjectMatchedSearchRequests")]
	public partial class EstateObjectMatchedSearchRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _ObjectId;
		
		private long _RequestId;
		
		private long _RequestUserId;
		
		private short _Status;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateMoved;
		
		private string _RequestTitle;
		
		private System.Nullable<System.DateTime> _RequestDateCreated;
		
		private System.Nullable<System.DateTime> _RequestDateDeleted;
		
		private EntitySet<EstateObjectMatchedSearchRequestComment> _EstateObjectMatchedSearchRequestComments;
		
		private EntityRef<EstateObject> _EstateObject;
		
		private EntityRef<SearchRequest> _SearchRequest;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnObjectIdChanging(long value);
    partial void OnObjectIdChanged();
    partial void OnRequestIdChanging(long value);
    partial void OnRequestIdChanged();
    partial void OnRequestUserIdChanging(long value);
    partial void OnRequestUserIdChanged();
    partial void OnStatusChanging(short value);
    partial void OnStatusChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateMovedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateMovedChanged();
    partial void OnRequestTitleChanging(string value);
    partial void OnRequestTitleChanged();
    partial void OnRequestDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnRequestDateCreatedChanged();
    partial void OnRequestDateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnRequestDateDeletedChanged();
    #endregion
		
		public EstateObjectMatchedSearchRequest()
		{
			this._EstateObjectMatchedSearchRequestComments = new EntitySet<EstateObjectMatchedSearchRequestComment>(new Action<EstateObjectMatchedSearchRequestComment>(this.attach_EstateObjectMatchedSearchRequestComments), new Action<EstateObjectMatchedSearchRequestComment>(this.detach_EstateObjectMatchedSearchRequestComments));
			this._EstateObject = default(EntityRef<EstateObject>);
			this._SearchRequest = default(EntityRef<SearchRequest>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectId", DbType="BigInt NOT NULL")]
		public long ObjectId
		{
			get
			{
				return this._ObjectId;
			}
			set
			{
				if ((this._ObjectId != value))
				{
					if (this._EstateObject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectIdChanging(value);
					this.SendPropertyChanging();
					this._ObjectId = value;
					this.SendPropertyChanged("ObjectId");
					this.OnObjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestId", DbType="BigInt NOT NULL")]
		public long RequestId
		{
			get
			{
				return this._RequestId;
			}
			set
			{
				if ((this._RequestId != value))
				{
					if (this._SearchRequest.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestIdChanging(value);
					this.SendPropertyChanging();
					this._RequestId = value;
					this.SendPropertyChanged("RequestId");
					this.OnRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestUserId", DbType="BigInt NOT NULL")]
		public long RequestUserId
		{
			get
			{
				return this._RequestUserId;
			}
			set
			{
				if ((this._RequestUserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestUserIdChanging(value);
					this.SendPropertyChanging();
					this._RequestUserId = value;
					this.SendPropertyChanged("RequestUserId");
					this.OnRequestUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt NOT NULL")]
		public short Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateMoved", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateMoved
		{
			get
			{
				return this._DateMoved;
			}
			set
			{
				if ((this._DateMoved != value))
				{
					this.OnDateMovedChanging(value);
					this.SendPropertyChanging();
					this._DateMoved = value;
					this.SendPropertyChanged("DateMoved");
					this.OnDateMovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestTitle", DbType="NVarChar(255)")]
		public string RequestTitle
		{
			get
			{
				return this._RequestTitle;
			}
			set
			{
				if ((this._RequestTitle != value))
				{
					this.OnRequestTitleChanging(value);
					this.SendPropertyChanging();
					this._RequestTitle = value;
					this.SendPropertyChanged("RequestTitle");
					this.OnRequestTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> RequestDateCreated
		{
			get
			{
				return this._RequestDateCreated;
			}
			set
			{
				if ((this._RequestDateCreated != value))
				{
					this.OnRequestDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._RequestDateCreated = value;
					this.SendPropertyChanged("RequestDateCreated");
					this.OnRequestDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> RequestDateDeleted
		{
			get
			{
				return this._RequestDateDeleted;
			}
			set
			{
				if ((this._RequestDateDeleted != value))
				{
					this.OnRequestDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._RequestDateDeleted = value;
					this.SendPropertyChanged("RequestDateDeleted");
					this.OnRequestDateDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstateObjectMatchedSearchRequest_EstateObjectMatchedSearchRequestComment", Storage="_EstateObjectMatchedSearchRequestComments", ThisKey="Id", OtherKey="MatchedRequestId")]
		public EntitySet<EstateObjectMatchedSearchRequestComment> EstateObjectMatchedSearchRequestComments
		{
			get
			{
				return this._EstateObjectMatchedSearchRequestComments;
			}
			set
			{
				this._EstateObjectMatchedSearchRequestComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstateObject_EstateObjectMatchedSearchRequest", Storage="_EstateObject", ThisKey="ObjectId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EstateObject EstateObject
		{
			get
			{
				return this._EstateObject.Entity;
			}
			set
			{
				EstateObject previousValue = this._EstateObject.Entity;
				if (((previousValue != value) 
							|| (this._EstateObject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EstateObject.Entity = null;
						previousValue.EstateObjectMatchedSearchRequests.Remove(this);
					}
					this._EstateObject.Entity = value;
					if ((value != null))
					{
						value.EstateObjectMatchedSearchRequests.Add(this);
						this._ObjectId = value.Id;
					}
					else
					{
						this._ObjectId = default(long);
					}
					this.SendPropertyChanged("EstateObject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SearchRequest_EstateObjectMatchedSearchRequest", Storage="_SearchRequest", ThisKey="RequestId", OtherKey="Id", IsForeignKey=true)]
		public SearchRequest SearchRequest
		{
			get
			{
				return this._SearchRequest.Entity;
			}
			set
			{
				SearchRequest previousValue = this._SearchRequest.Entity;
				if (((previousValue != value) 
							|| (this._SearchRequest.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SearchRequest.Entity = null;
						previousValue.EstateObjectMatchedSearchRequests.Remove(this);
					}
					this._SearchRequest.Entity = value;
					if ((value != null))
					{
						value.EstateObjectMatchedSearchRequests.Add(this);
						this._RequestId = value.Id;
					}
					else
					{
						this._RequestId = default(long);
					}
					this.SendPropertyChanged("SearchRequest");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_EstateObjectMatchedSearchRequest", Storage="_User", ThisKey="RequestUserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.EstateObjectMatchedSearchRequests.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.EstateObjectMatchedSearchRequests.Add(this);
						this._RequestUserId = value.Id;
					}
					else
					{
						this._RequestUserId = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EstateObjectMatchedSearchRequestComments(EstateObjectMatchedSearchRequestComment entity)
		{
			this.SendPropertyChanging();
			entity.EstateObjectMatchedSearchRequest = this;
		}
		
		private void detach_EstateObjectMatchedSearchRequestComments(EstateObjectMatchedSearchRequestComment entity)
		{
			this.SendPropertyChanging();
			entity.EstateObjectMatchedSearchRequest = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SearchRequestObjectComments")]
	public partial class SearchRequestObjectComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _RequestObjectId;
		
		private long _UserId;
		
		private string _Text;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private EntityRef<SearchRequestObject> _SearchRequestObject;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnRequestObjectIdChanging(long value);
    partial void OnRequestObjectIdChanged();
    partial void OnUserIdChanging(long value);
    partial void OnUserIdChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    #endregion
		
		public SearchRequestObjectComment()
		{
			this._SearchRequestObject = default(EntityRef<SearchRequestObject>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestObjectId", DbType="BigInt NOT NULL")]
		public long RequestObjectId
		{
			get
			{
				return this._RequestObjectId;
			}
			set
			{
				if ((this._RequestObjectId != value))
				{
					if (this._SearchRequestObject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRequestObjectIdChanging(value);
					this.SendPropertyChanging();
					this._RequestObjectId = value;
					this.SendPropertyChanged("RequestObjectId");
					this.OnRequestObjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="BigInt NOT NULL")]
		public long UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(MAX)")]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SearchRequestObject_SearchRequestObjectComment", Storage="_SearchRequestObject", ThisKey="RequestObjectId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SearchRequestObject SearchRequestObject
		{
			get
			{
				return this._SearchRequestObject.Entity;
			}
			set
			{
				SearchRequestObject previousValue = this._SearchRequestObject.Entity;
				if (((previousValue != value) 
							|| (this._SearchRequestObject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SearchRequestObject.Entity = null;
						previousValue.SearchRequestObjectComments.Remove(this);
					}
					this._SearchRequestObject.Entity = value;
					if ((value != null))
					{
						value.SearchRequestObjectComments.Add(this);
						this._RequestObjectId = value.Id;
					}
					else
					{
						this._RequestObjectId = default(long);
					}
					this.SendPropertyChanged("SearchRequestObject");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_SearchRequestObjectComment", Storage="_User", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.SearchRequestObjectComments.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.SearchRequestObjectComments.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(long);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DictionaryValues")]
	public partial class DictionaryValue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _DictionaryId;
		
		private string _Value;
		
		private string _ShortValue;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private System.Nullable<System.DateTime> _DateModified;
		
		private long _CreatedBy;
		
		private long _ModifiedBy;
		
		private EntityRef<Dictionary> _Dictionary;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnDictionaryIdChanging(long value);
    partial void OnDictionaryIdChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnShortValueChanging(string value);
    partial void OnShortValueChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnDateModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateModifiedChanged();
    partial void OnCreatedByChanging(long value);
    partial void OnCreatedByChanged();
    partial void OnModifiedByChanging(long value);
    partial void OnModifiedByChanged();
    #endregion
		
		public DictionaryValue()
		{
			this._Dictionary = default(EntityRef<Dictionary>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DictionaryId", DbType="BigInt NOT NULL")]
		public long DictionaryId
		{
			get
			{
				return this._DictionaryId;
			}
			set
			{
				if ((this._DictionaryId != value))
				{
					if (this._Dictionary.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDictionaryIdChanging(value);
					this.SendPropertyChanging();
					this._DictionaryId = value;
					this.SendPropertyChanged("DictionaryId");
					this.OnDictionaryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(MAX)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortValue", DbType="NVarChar(MAX)")]
		public string ShortValue
		{
			get
			{
				return this._ShortValue;
			}
			set
			{
				if ((this._ShortValue != value))
				{
					this.OnShortValueChanging(value);
					this.SendPropertyChanging();
					this._ShortValue = value;
					this.SendPropertyChanged("ShortValue");
					this.OnShortValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateModified
		{
			get
			{
				return this._DateModified;
			}
			set
			{
				if ((this._DateModified != value))
				{
					this.OnDateModifiedChanging(value);
					this.SendPropertyChanging();
					this._DateModified = value;
					this.SendPropertyChanged("DateModified");
					this.OnDateModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="BigInt NOT NULL")]
		public long CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="BigInt NOT NULL")]
		public long ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dictionary_DictionaryValue", Storage="_Dictionary", ThisKey="DictionaryId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Dictionary Dictionary
		{
			get
			{
				return this._Dictionary.Entity;
			}
			set
			{
				Dictionary previousValue = this._Dictionary.Entity;
				if (((previousValue != value) 
							|| (this._Dictionary.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dictionary.Entity = null;
						previousValue.DictionaryValues.Remove(this);
					}
					this._Dictionary.Entity = value;
					if ((value != null))
					{
						value.DictionaryValues.Add(this);
						this._DictionaryId = value.Id;
					}
					else
					{
						this._DictionaryId = default(long);
					}
					this.SendPropertyChanged("Dictionary");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
